<?xml version="1.0" encoding="utf-8"?><testsuites name="pytest tests"><testsuite name="pytest" errors="0" failures="0" skipped="4" tests="3235" time="484.795" timestamp="2025-10-03T18:03:54.473272-07:00" hostname="glaptop-16"><testcase classname="tests.environment.test_air_index" name="test_dispatch_to_correct_model[backend=numpy-ciddor-ciddor_refractive_index]" time="0.004" /><testcase classname="tests.environment.test_air_index" name="test_dispatch_to_correct_model[backend=numpy-edlen-edlen_refractive_index]" time="0.002" /><testcase classname="tests.environment.test_air_index" name="test_dispatch_to_correct_model[backend=numpy-birch_downs-birch_downs_refractive_index]" time="0.002" /><testcase classname="tests.environment.test_air_index" name="test_dispatch_to_correct_model[backend=numpy-kohlrausch-kohlrausch_refractive_index]" time="0.001" /><testcase classname="tests.environment.test_air_index" name="test_dispatch_to_correct_model[backend=torch-ciddor-ciddor_refractive_index]" time="0.069" /><testcase classname="tests.environment.test_air_index" name="test_dispatch_to_correct_model[backend=torch-edlen-edlen_refractive_index]" time="0.005" /><testcase classname="tests.environment.test_air_index" name="test_dispatch_to_correct_model[backend=torch-birch_downs-birch_downs_refractive_index]" time="0.002" /><testcase classname="tests.environment.test_air_index" name="test_dispatch_to_correct_model[backend=torch-kohlrausch-kohlrausch_refractive_index]" time="0.001" /><testcase classname="tests.environment.test_air_index" name="test_unsupported_model_name[backend=numpy]" time="0.001" /><testcase classname="tests.environment.test_air_index" name="test_unsupported_model_name[backend=torch]" time="0.001" /><testcase classname="tests.environment.test_air_index" name="test_invalid_conditions_type[backend=numpy]" time="0.002" /><testcase classname="tests.environment.test_air_index" name="test_invalid_conditions_type[backend=torch]" time="0.001" /><testcase classname="tests.environment.test_air_index" name="test_wavelength_validation_passed_to_models[backend=numpy]" time="0.003" /><testcase classname="tests.environment.test_air_index" name="test_wavelength_validation_passed_to_models[backend=torch]" time="0.002" /><testcase classname="tests.environment.test_air_index" name="test_temperature_validation_passed_to_models[backend=numpy]" time="0.001" /><testcase classname="tests.environment.test_air_index" name="test_temperature_validation_passed_to_models[backend=torch]" time="0.001" /><testcase classname="tests.environment.test_birch_downs.TestBirchDownsRefractiveIndex" name="test_calculate_saturation_vapor_pressure_standard" time="0.003" /><testcase classname="tests.environment.test_birch_downs.TestBirchDownsRefractiveIndex" name="test_calculate_water_vapor_partial_pressure_dry_air" time="0.001" /><testcase classname="tests.environment.test_birch_downs.TestBirchDownsRefractiveIndex" name="test_calculate_water_vapor_partial_pressure_moist_air" time="0.002" /><testcase classname="tests.environment.test_birch_downs.TestBirchDownsRefractiveIndex" name="test_birch_downs_refractive_index_nist_reference" time="0.002" /><testcase classname="tests.environment.test_birch_downs.TestBirchDownsRefractiveIndex" name="test_birch_downs_refractive_index_dry_air_different_co2" time="0.002" /><testcase classname="tests.environment.test_birch_downs.TestBirchDownsRefractiveIndex" name="test_birch_downs_refractive_index_moist_air" time="0.002" /><testcase classname="tests.environment.test_birch_downs.TestBirchDownsRefractiveIndex" name="test_birch_downs_refractive_index_temperature_effect" time="0.002" /><testcase classname="tests.environment.test_birch_downs.TestBirchDownsRefractiveIndex" name="test_birch_downs_refractive_index_pressure_effect" time="0.002" /><testcase classname="tests.environment.test_birch_downs.TestBirchDownsRefractiveIndex" name="test_birch_downs_refractive_index_wavelength_effect" time="0.001" /><testcase classname="tests.environment.test_birch_downs.TestBirchDownsRefractiveIndex" name="test_birch_downs_refractive_index_edge_wavelengths" time="0.001" /><testcase classname="tests.environment.test_birch_downs.TestBirchDownsRefractiveIndex" name="test_birch_downs_refractive_index_zero_pressure" time="0.001" /><testcase classname="tests.environment.test_birch_downs.TestBirchDownsRefractiveIndex" name="test_birch_downs_refractive_index_invalid_wavelength" time="0.001" /><testcase classname="tests.environment.test_birch_downs.TestBirchDownsRefractiveIndex" name="test_birch_downs_refractive_index_invalid_conditions_type" time="0.002" /><testcase classname="tests.environment.test_birch_downs.TestBirchDownsRefractiveIndex" name="test_birch_downs_refractive_index_high_humidity_extreme_temp" time="0.001" /><testcase classname="tests.environment.test_birch_downs.TestBirchDownsRefractiveIndex" name="test_birch_downs_refractive_index_low_temp_high_pressure" time="0.002" /><testcase classname="tests.environment.test_ciddor.TestCiddorRefractiveIndex" name="test_calculate_molar_mass_air_standard[backend=numpy]" time="0.002" /><testcase classname="tests.environment.test_ciddor.TestCiddorRefractiveIndex" name="test_calculate_molar_mass_air_standard[backend=torch]" time="0.002" /><testcase classname="tests.environment.test_ciddor.TestCiddorRefractiveIndex" name="test_calculate_molar_mass_air_different_co2[backend=numpy]" time="0.001" /><testcase classname="tests.environment.test_ciddor.TestCiddorRefractiveIndex" name="test_calculate_molar_mass_air_different_co2[backend=torch]" time="0.003" /><testcase classname="tests.environment.test_ciddor.TestCiddorRefractiveIndex" name="test_calculate_saturation_vapor_pressure_standard[backend=numpy]" time="0.002" /><testcase classname="tests.environment.test_ciddor.TestCiddorRefractiveIndex" name="test_calculate_saturation_vapor_pressure_standard[backend=torch]" time="0.005" /><testcase classname="tests.environment.test_ciddor.TestCiddorRefractiveIndex" name="test_calculate_saturation_vapor_pressure_edge_cases[backend=numpy]" time="0.002" /><testcase classname="tests.environment.test_ciddor.TestCiddorRefractiveIndex" name="test_calculate_saturation_vapor_pressure_edge_cases[backend=torch]" time="0.003" /><testcase classname="tests.environment.test_ciddor.TestCiddorRefractiveIndex" name="test_calculate_saturation_vapor_pressure_no_where_backend" time="0.003" /><testcase classname="tests.environment.test_ciddor.TestCiddorRefractiveIndex" name="test_calculate_enhancement_factor_standard[backend=numpy]" time="0.002" /><testcase classname="tests.environment.test_ciddor.TestCiddorRefractiveIndex" name="test_calculate_enhancement_factor_standard[backend=torch]" time="0.002" /><testcase classname="tests.environment.test_ciddor.TestCiddorRefractiveIndex" name="test_calculate_enhancement_factor_edge_cases[backend=numpy]" time="0.004" /><testcase classname="tests.environment.test_ciddor.TestCiddorRefractiveIndex" name="test_calculate_enhancement_factor_edge_cases[backend=torch]" time="0.002" /><testcase classname="tests.environment.test_ciddor.TestCiddorRefractiveIndex" name="test_calculate_compressibility_standard[backend=numpy]" time="0.003" /><testcase classname="tests.environment.test_ciddor.TestCiddorRefractiveIndex" name="test_calculate_compressibility_standard[backend=torch]" time="0.002" /><testcase classname="tests.environment.test_ciddor.TestCiddorRefractiveIndex" name="test_calculate_compressibility_moist_air[backend=numpy]" time="0.002" /><testcase classname="tests.environment.test_ciddor.TestCiddorRefractiveIndex" name="test_calculate_compressibility_moist_air[backend=torch]" time="0.002" /><testcase classname="tests.environment.test_ciddor.TestCiddorRefractiveIndex" name="test_ciddor_refractive_index_standard_conditions[backend=numpy]" time="0.002" /><testcase classname="tests.environment.test_ciddor.TestCiddorRefractiveIndex" name="test_ciddor_refractive_index_standard_conditions[backend=torch]" time="0.007" /><testcase classname="tests.environment.test_ciddor.TestCiddorRefractiveIndex" name="test_ciddor_refractive_index_dry_air_different_co2[backend=numpy]" time="0.002" /><testcase classname="tests.environment.test_ciddor.TestCiddorRefractiveIndex" name="test_ciddor_refractive_index_dry_air_different_co2[backend=torch]" time="0.013" /><testcase classname="tests.environment.test_ciddor.TestCiddorRefractiveIndex" name="test_ciddor_refractive_index_moist_air[backend=numpy]" time="0.003" /><testcase classname="tests.environment.test_ciddor.TestCiddorRefractiveIndex" name="test_ciddor_refractive_index_moist_air[backend=torch]" time="0.004" /><testcase classname="tests.environment.test_ciddor.TestCiddorRefractiveIndex" name="test_ciddor_refractive_index_temperature_effect[backend=numpy]" time="0.002" /><testcase classname="tests.environment.test_ciddor.TestCiddorRefractiveIndex" name="test_ciddor_refractive_index_temperature_effect[backend=torch]" time="0.003" /><testcase classname="tests.environment.test_ciddor.TestCiddorRefractiveIndex" name="test_ciddor_refractive_index_pressure_effect[backend=numpy]" time="0.002" /><testcase classname="tests.environment.test_ciddor.TestCiddorRefractiveIndex" name="test_ciddor_refractive_index_pressure_effect[backend=torch]" time="0.004" /><testcase classname="tests.environment.test_ciddor.TestCiddorRefractiveIndex" name="test_ciddor_refractive_index_wavelength_effect[backend=numpy]" time="0.003" /><testcase classname="tests.environment.test_ciddor.TestCiddorRefractiveIndex" name="test_ciddor_refractive_index_wavelength_effect[backend=torch]" time="0.003" /><testcase classname="tests.environment.test_ciddor.TestCiddorRefractiveIndex" name="test_ciddor_refractive_index_edge_wavelengths[backend=numpy]" time="0.001" /><testcase classname="tests.environment.test_ciddor.TestCiddorRefractiveIndex" name="test_ciddor_refractive_index_edge_wavelengths[backend=torch]" time="0.003" /><testcase classname="tests.environment.test_ciddor.TestCiddorRefractiveIndex" name="test_ciddor_refractive_index_zero_pressure[backend=numpy]" time="0.002" /><testcase classname="tests.environment.test_ciddor.TestCiddorRefractiveIndex" name="test_ciddor_refractive_index_zero_pressure[backend=torch]" time="0.003" /><testcase classname="tests.environment.test_ciddor.TestCiddorRefractiveIndex" name="test_ciddor_refractive_index_invalid_wavelength[backend=numpy]" time="0.002" /><testcase classname="tests.environment.test_ciddor.TestCiddorRefractiveIndex" name="test_ciddor_refractive_index_invalid_wavelength[backend=torch]" time="0.002" /><testcase classname="tests.environment.test_ciddor.TestCiddorRefractiveIndex" name="test_ciddor_refractive_index_invalid_conditions_type[backend=numpy]" time="0.002" /><testcase classname="tests.environment.test_ciddor.TestCiddorRefractiveIndex" name="test_ciddor_refractive_index_invalid_conditions_type[backend=torch]" time="0.002" /><testcase classname="tests.environment.test_ciddor.TestCiddorRefractiveIndex" name="test_ciddor_refractive_index_high_humidity_extreme_temp[backend=numpy]" time="0.002" /><testcase classname="tests.environment.test_ciddor.TestCiddorRefractiveIndex" name="test_ciddor_refractive_index_high_humidity_extreme_temp[backend=torch]" time="0.003" /><testcase classname="tests.environment.test_ciddor.TestCiddorRefractiveIndex" name="test_ciddor_refractive_index_low_temp_high_pressure[backend=numpy]" time="0.002" /><testcase classname="tests.environment.test_ciddor.TestCiddorRefractiveIndex" name="test_ciddor_refractive_index_low_temp_high_pressure[backend=torch]" time="0.003" /><testcase classname="tests.environment.test_ciddor.TestCiddorRefractiveIndex" name="test_ciddor_refractive_index_consistency_with_example[backend=numpy]" time="0.001" /><testcase classname="tests.environment.test_ciddor.TestCiddorRefractiveIndex" name="test_ciddor_refractive_index_consistency_with_example[backend=torch]" time="0.006" /><testcase classname="tests.environment.test_conditions" name="test_environmental_conditions_defaults" time="0.002" /><testcase classname="tests.environment.test_conditions" name="test_environmental_conditions_custom_values" time="0.001" /><testcase classname="tests.environment.test_conditions" name="test_environmental_conditions_partial_custom_values" time="0.002" /><testcase classname="tests.environment.test_conditions" name="test_environmental_conditions_parametrization[101325-15-0.0-400-None]" time="0.001" /><testcase classname="tests.environment.test_conditions" name="test_environmental_conditions_parametrization[90000-0-0.25-300-0.633]" time="0.002" /><testcase classname="tests.environment.test_conditions" name="test_environmental_conditions_parametrization[110000-30-1.0-800-1.55]" time="0.002" /><testcase classname="tests.environment.test_conditions" name="test_environmental_conditions_types" time="0.002" /><testcase classname="tests.environment.test_conditions" name="test_environmental_conditions_mutability" time="0.001" /><testcase classname="tests.environment.test_edlen.TestEdlenRefractiveIndex" name="test_calculate_saturation_vapor_pressure_standard" time="0.001" /><testcase classname="tests.environment.test_edlen.TestEdlenRefractiveIndex" name="test_calculate_saturation_vapor_pressure_edge_cases" time="0.002" /><testcase classname="tests.environment.test_edlen.TestEdlenRefractiveIndex" name="test_edlen_refractive_index_nist_reference" time="0.002" /><testcase classname="tests.environment.test_edlen.TestEdlenRefractiveIndex" name="test_edlen_refractive_index_dry_air_different_co2" time="0.002" /><testcase classname="tests.environment.test_edlen.TestEdlenRefractiveIndex" name="test_edlen_refractive_index_moist_air" time="0.002" /><testcase classname="tests.environment.test_edlen.TestEdlenRefractiveIndex" name="test_edlen_refractive_index_temperature_effect" time="0.003" /><testcase classname="tests.environment.test_edlen.TestEdlenRefractiveIndex" name="test_edlen_refractive_index_pressure_effect" time="0.002" /><testcase classname="tests.environment.test_edlen.TestEdlenRefractiveIndex" name="test_edlen_refractive_index_wavelength_effect" time="0.002" /><testcase classname="tests.environment.test_edlen.TestEdlenRefractiveIndex" name="test_edlen_refractive_index_edge_wavelengths" time="0.002" /><testcase classname="tests.environment.test_edlen.TestEdlenRefractiveIndex" name="test_edlen_refractive_index_zero_pressure" time="0.002" /><testcase classname="tests.environment.test_edlen.TestEdlenRefractiveIndex" name="test_edlen_refractive_index_invalid_wavelength" time="0.002" /><testcase classname="tests.environment.test_edlen.TestEdlenRefractiveIndex" name="test_edlen_refractive_index_invalid_conditions_type" time="0.002" /><testcase classname="tests.environment.test_edlen.TestEdlenRefractiveIndex" name="test_edlen_refractive_index_high_humidity_extreme_temp" time="0.002" /><testcase classname="tests.environment.test_edlen.TestEdlenRefractiveIndex" name="test_edlen_refractive_index_low_temp_high_pressure" time="0.002" /><testcase classname="tests.environment.test_kohlrausch.TestKohlrauschRefractiveIndex" name="test_kohlrausch_refractive_index_standard_conditions" time="0.002" /><testcase classname="tests.environment.test_kohlrausch.TestKohlrauschRefractiveIndex" name="test_kohlrausch_refractive_index_temperature_effect" time="0.001" /><testcase classname="tests.environment.test_kohlrausch.TestKohlrauschRefractiveIndex" name="test_kohlrausch_refractive_index_pressure_effect" time="0.002" /><testcase classname="tests.environment.test_kohlrausch.TestKohlrauschRefractiveIndex" name="test_kohlrausch_refractive_index_wavelength_effect" time="0.002" /><testcase classname="tests.environment.test_kohlrausch.TestKohlrauschRefractiveIndex" name="test_kohlrausch_refractive_index_edge_wavelengths" time="0.002" /><testcase classname="tests.environment.test_kohlrausch.TestKohlrauschRefractiveIndex" name="test_kohlrausch_refractive_index_zero_pressure" time="0.002" /><testcase classname="tests.environment.test_kohlrausch.TestKohlrauschRefractiveIndex" name="test_kohlrausch_refractive_index_invalid_wavelength_zero" time="0.002" /><testcase classname="tests.environment.test_kohlrausch.TestKohlrauschRefractiveIndex" name="test_kohlrausch_refractive_index_invalid_wavelength_negative" time="0.003" /><testcase classname="tests.environment.test_kohlrausch.TestKohlrauschRefractiveIndex" name="test_kohlrausch_refractive_index_invalid_conditions_type" time="0.003" /><testcase classname="tests.environment.test_kohlrausch.TestKohlrauschRefractiveIndex" name="test_kohlrausch_refractive_index_extreme_low_temperature" time="0.002" /><testcase classname="tests.environment.test_kohlrausch.TestKohlrauschRefractiveIndex" name="test_kohlrausch_refractive_index_high_temp_low_pressure" time="0.002" /><testcase classname="tests.test_aberrations.TestDoubleGaussAberrations" name="test_init[backend=numpy]" time="0.424" /><testcase classname="tests.test_aberrations.TestDoubleGaussAberrations" name="test_init[backend=torch]" time="0.193" /><testcase classname="tests.test_aberrations.TestDoubleGaussAberrations" name="test_seidels[backend=numpy]" time="0.156" /><testcase classname="tests.test_aberrations.TestDoubleGaussAberrations" name="test_seidels[backend=torch]" time="0.283" /><testcase classname="tests.test_aberrations.TestDoubleGaussAberrations" name="test_third_order[backend=numpy]" time="0.145" /><testcase classname="tests.test_aberrations.TestDoubleGaussAberrations" name="test_third_order[backend=torch]" time="0.209" /><testcase classname="tests.test_aberrations.TestDoubleGaussAberrations" name="test_third_order_all_functions[backend=numpy]" time="0.383" /><testcase classname="tests.test_aberrations.TestDoubleGaussAberrations" name="test_third_order_all_functions[backend=torch]" time="1.501" /><testcase classname="tests.test_aberrations.TestEdmundSinglet" name="test_init[backend=numpy]" time="0.044" /><testcase classname="tests.test_aberrations.TestEdmundSinglet" name="test_init[backend=torch]" time="0.015" /><testcase classname="tests.test_aberrations.TestEdmundSinglet" name="test_seidels[backend=numpy]" time="0.020" /><testcase classname="tests.test_aberrations.TestEdmundSinglet" name="test_seidels[backend=torch]" time="0.046" /><testcase classname="tests.test_aberrations.TestEdmundSinglet" name="test_third_order[backend=numpy]" time="0.027" /><testcase classname="tests.test_aberrations.TestEdmundSinglet" name="test_third_order[backend=torch]" time="0.062" /><testcase classname="tests.test_aberrations.TestEdmundSinglet" name="test_third_order_all_functions[backend=numpy]" time="0.115" /><testcase classname="tests.test_aberrations.TestEdmundSinglet" name="test_third_order_all_functions[backend=torch]" time="0.601" /><testcase classname="tests.test_aberrations.TestSingletStopTwo" name="test_init[backend=numpy]" time="0.063" /><testcase classname="tests.test_aberrations.TestSingletStopTwo" name="test_init[backend=torch]" time="0.031" /><testcase classname="tests.test_aberrations.TestSingletStopTwo" name="test_seidels[backend=numpy]" time="0.040" /><testcase classname="tests.test_aberrations.TestSingletStopTwo" name="test_seidels[backend=torch]" time="0.081" /><testcase classname="tests.test_aberrations.TestSingletStopTwo" name="test_third_order[backend=numpy]" time="0.041" /><testcase classname="tests.test_aberrations.TestSingletStopTwo" name="test_third_order[backend=torch]" time="0.082" /><testcase classname="tests.test_aberrations.TestSingletStopTwo" name="test_third_order_all_functions[backend=numpy]" time="0.145" /><testcase classname="tests.test_aberrations.TestSingletStopTwo" name="test_third_order_all_functions[backend=torch]" time="0.416" /><testcase classname="tests.test_aberrations.TestSimpleSinglet" name="test_on_axis_seidels_are_not_zero[backend=numpy]" time="0.026" /><testcase classname="tests.test_aberrations.TestSimpleSinglet" name="test_on_axis_seidels_are_not_zero[backend=torch]" time="0.054" /><testcase classname="tests.test_analysis.TestCookeTripetSpotDiagram" name="test_spot_geometric_radius[backend=numpy]" time="0.192" /><testcase classname="tests.test_analysis.TestCookeTripetSpotDiagram" name="test_spot_geometric_radius[backend=torch]" time="0.502" /><testcase classname="tests.test_analysis.TestCookeTripetSpotDiagram" name="test_spot_rms_radius[backend=numpy]" time="0.098" /><testcase classname="tests.test_analysis.TestCookeTripetSpotDiagram" name="test_spot_rms_radius[backend=torch]" time="0.362" /><testcase classname="tests.test_analysis.TestCookeTripetSpotDiagram" name="test_airy_disc[backend=numpy]" time="0.191" /><testcase classname="tests.test_analysis.TestCookeTripetSpotDiagram" name="test_airy_disc[backend=torch]" time="0.753" /><testcase classname="tests.test_analysis.TestCookeTripetSpotDiagram" name="test_airy_disc_in_view_spot_diagram[backend=numpy]" time="0.316" /><testcase classname="tests.test_analysis.TestCookeTripetSpotDiagram" name="test_airy_disc_in_view_spot_diagram[backend=torch]" time="1.227" /><testcase classname="tests.test_analysis.TestCookeTripetSpotDiagram" name="test_view_spot_diagram[backend=numpy]" time="0.196" /><testcase classname="tests.test_analysis.TestCookeTripetSpotDiagram" name="test_view_spot_diagram[backend=torch]" time="0.286" /><testcase classname="tests.test_analysis.TestCookeTripetSpotDiagram" name="test_view_spot_diagram_larger_fig[backend=numpy]" time="0.236" /><testcase classname="tests.test_analysis.TestCookeTripetSpotDiagram" name="test_view_spot_diagram_larger_fig[backend=torch]" time="0.435" /><testcase classname="tests.test_analysis.TestTripletSpotDiagram" name="test_view_spot_diagram[backend=numpy]" time="0.315" /><testcase classname="tests.test_analysis.TestTripletSpotDiagram" name="test_view_spot_diagram[backend=torch]" time="0.425" /><testcase classname="tests.test_analysis.TestTripletSpotDiagram" name="test_view_spot_diagram_larger_fig[backend=numpy]" time="0.315" /><testcase classname="tests.test_analysis.TestTripletSpotDiagram" name="test_view_spot_diagram_larger_fig[backend=torch]" time="0.457" /><testcase classname="tests.test_analysis.TestCookeTripletEncircledEnergy" name="test_encircled_energy_centroid[backend=numpy]" time="1.414" /><testcase classname="tests.test_analysis.TestCookeTripletEncircledEnergy" name="test_encircled_energy_centroid[backend=torch]" time="2.016" /><testcase classname="tests.test_analysis.TestCookeTripletEncircledEnergy" name="test_view_encircled_energy[backend=numpy]" time="1.727" /><testcase classname="tests.test_analysis.TestCookeTripletEncircledEnergy" name="test_view_encircled_energy[backend=torch]" time="3.537" /><testcase classname="tests.test_analysis.TestCookeTripletEncircledEnergy" name="test_view_encircled_energy_larger_fig[backend=numpy]" time="2.021" /><testcase classname="tests.test_analysis.TestCookeTripletEncircledEnergy" name="test_view_encircled_energy_larger_fig[backend=torch]" time="3.296" /><testcase classname="tests.test_analysis.TestCookeTripletRayFan" name="test_ray_fan[backend=numpy]" time="0.172" /><testcase classname="tests.test_analysis.TestCookeTripletRayFan" name="test_ray_fan[backend=torch]" time="0.461" /><testcase classname="tests.test_analysis.TestCookeTripletRayFan" name="test_view_ray_fan[backend=numpy]" time="0.762" /><testcase classname="tests.test_analysis.TestCookeTripletRayFan" name="test_view_ray_fan[backend=torch]" time="0.558" /><testcase classname="tests.test_analysis.TestCookeTripletRayFan" name="test_view_ray_fan_larger_fig[backend=numpy]" time="0.303" /><testcase classname="tests.test_analysis.TestCookeTripletRayFan" name="test_view_ray_fan_larger_fig[backend=torch]" time="0.458" /><testcase classname="tests.test_analysis.TestTelescopeTripletYYbar" name="test_view_yybar[backend=numpy]" time="0.090" /><testcase classname="tests.test_analysis.TestTelescopeTripletYYbar" name="test_view_yybar[backend=torch]" time="0.084" /><testcase classname="tests.test_analysis.TestTelescopeTripletYYbar" name="test_view_yybar_larger_fig[backend=numpy]" time="0.073" /><testcase classname="tests.test_analysis.TestTelescopeTripletYYbar" name="test_view_yybar_larger_fig[backend=torch]" time="0.080" /><testcase classname="tests.test_analysis.TestTelescopeTripletDistortion" name="test_distortion_values[backend=numpy]" time="0.043" /><testcase classname="tests.test_analysis.TestTelescopeTripletDistortion" name="test_distortion_values[backend=torch]" time="0.087" /><testcase classname="tests.test_analysis.TestTelescopeTripletDistortion" name="test_f_theta_distortion[backend=numpy]" time="0.046" /><testcase classname="tests.test_analysis.TestTelescopeTripletDistortion" name="test_f_theta_distortion[backend=torch]" time="0.093" /><testcase classname="tests.test_analysis.TestTelescopeTripletDistortion" name="test_invalid_distortion_type[backend=numpy]" time="0.036" /><testcase classname="tests.test_analysis.TestTelescopeTripletDistortion" name="test_invalid_distortion_type[backend=torch]" time="0.048" /><testcase classname="tests.test_analysis.TestTelescopeTripletDistortion" name="test_view_distortion[backend=numpy]" time="0.078" /><testcase classname="tests.test_analysis.TestTelescopeTripletDistortion" name="test_view_distortion[backend=torch]" time="0.113" /><testcase classname="tests.test_analysis.TestTelescopeTripletDistortion" name="test_view_distortion_larger_fig[backend=numpy]" time="0.077" /><testcase classname="tests.test_analysis.TestTelescopeTripletDistortion" name="test_view_distortion_larger_fig[backend=torch]" time="0.122" /><testcase classname="tests.test_analysis.TestTelescopeTripletGridDistortion" name="test_grid_distortion_values[backend=numpy]" time="0.048" /><testcase classname="tests.test_analysis.TestTelescopeTripletGridDistortion" name="test_grid_distortion_values[backend=torch]" time="0.123" /><testcase classname="tests.test_analysis.TestTelescopeTripletGridDistortion" name="test_f_theta_distortion[backend=numpy]" time="0.071" /><testcase classname="tests.test_analysis.TestTelescopeTripletGridDistortion" name="test_f_theta_distortion[backend=torch]" time="0.139" /><testcase classname="tests.test_analysis.TestTelescopeTripletGridDistortion" name="test_invalid_distortion_type[backend=numpy]" time="0.065" /><testcase classname="tests.test_analysis.TestTelescopeTripletGridDistortion" name="test_invalid_distortion_type[backend=torch]" time="0.082" /><testcase classname="tests.test_analysis.TestTelescopeTripletGridDistortion" name="test_view_grid_distortion[backend=numpy]" time="0.108" /><testcase classname="tests.test_analysis.TestTelescopeTripletGridDistortion" name="test_view_grid_distortion[backend=torch]" time="0.135" /><testcase classname="tests.test_analysis.TestTelescopeTripletGridDistortion" name="test_view_grid_distortion_larger_fig[backend=numpy]" time="0.264" /><testcase classname="tests.test_analysis.TestTelescopeTripletGridDistortion" name="test_view_grid_distortion_larger_fig[backend=torch]" time="0.155" /><testcase classname="tests.test_analysis.TestTelescopeTripletFieldCurvature" name="test_field_curvature_init[backend=numpy]" time="0.088" /><testcase classname="tests.test_analysis.TestTelescopeTripletFieldCurvature" name="test_field_curvature_init[backend=torch]" time="0.214" /><testcase classname="tests.test_analysis.TestTelescopeTripletFieldCurvature" name="test_field_curvature_init_with_wavelength[backend=numpy]" time="0.078" /><testcase classname="tests.test_analysis.TestTelescopeTripletFieldCurvature" name="test_field_curvature_init_with_wavelength[backend=torch]" time="0.169" /><testcase classname="tests.test_analysis.TestTelescopeTripletFieldCurvature" name="test_field_curvature_init_with_num_points[backend=numpy]" time="0.098" /><testcase classname="tests.test_analysis.TestTelescopeTripletFieldCurvature" name="test_field_curvature_init_with_num_points[backend=torch]" time="0.166" /><testcase classname="tests.test_analysis.TestTelescopeTripletFieldCurvature" name="test_field_curvature_init_with_all_parameters[backend=numpy]" time="0.046" /><testcase classname="tests.test_analysis.TestTelescopeTripletFieldCurvature" name="test_field_curvature_init_with_all_parameters[backend=torch]" time="0.070" /><testcase classname="tests.test_analysis.TestTelescopeTripletFieldCurvature" name="test_field_curvature_view[backend=numpy]" time="0.108" /><testcase classname="tests.test_analysis.TestTelescopeTripletFieldCurvature" name="test_field_curvature_view[backend=torch]" time="0.341" /><testcase classname="tests.test_analysis.TestTelescopeTripletFieldCurvature" name="test_field_curvature_generate_data[backend=numpy]" time="0.138" /><testcase classname="tests.test_analysis.TestTelescopeTripletFieldCurvature" name="test_field_curvature_generate_data[backend=torch]" time="0.277" /><testcase classname="tests.test_analysis.TestSpotVsField" name="test_rms_spot_size_vs_field_initialization[backend=numpy]" time="1.253" /><testcase classname="tests.test_analysis.TestSpotVsField" name="test_rms_spot_size_vs_field_initialization[backend=torch]" time="6.107" /><testcase classname="tests.test_analysis.TestSpotVsField" name="test_rms_spot_radius[backend=numpy]" time="2.019" /><testcase classname="tests.test_analysis.TestSpotVsField" name="test_rms_spot_radius[backend=torch]" time="8.216" /><testcase classname="tests.test_analysis.TestSpotVsField" name="test_view_spot_vs_field[backend=numpy]" time="1.414" /><testcase classname="tests.test_analysis.TestSpotVsField" name="test_view_spot_vs_field[backend=torch]" time="6.124" /><testcase classname="tests.test_analysis.TestSpotVsField" name="test_view_spot_vs_field_larger_fig[backend=numpy]" time="1.502" /><testcase classname="tests.test_analysis.TestSpotVsField" name="test_view_spot_vs_field_larger_fig[backend=torch]" time="5.340" /><testcase classname="tests.test_analysis.TestWavefrontErrorVsField" name="test_rms_wave_init[backend=numpy]" time="1.559" /><testcase classname="tests.test_analysis.TestWavefrontErrorVsField" name="test_rms_wave_init[backend=torch]" time="5.683" /><testcase classname="tests.test_analysis.TestWavefrontErrorVsField" name="test_rms_wave[backend=numpy]" time="1.540" /><testcase classname="tests.test_analysis.TestWavefrontErrorVsField" name="test_rms_wave[backend=torch]" time="6.328" /><testcase classname="tests.test_analysis.TestWavefrontErrorVsField" name="test_view_wave[backend=numpy]" time="1.630" /><testcase classname="tests.test_analysis.TestWavefrontErrorVsField" name="test_view_wave[backend=torch]" time="6.137" /><testcase classname="tests.test_analysis.TestWavefrontErrorVsField" name="test_view_wave_larger_fig[backend=numpy]" time="1.369" /><testcase classname="tests.test_analysis.TestWavefrontErrorVsField" name="test_view_wave_larger_fig[backend=torch]" time="4.720" /><testcase classname="tests.test_analysis.TestPupilAberration" name="test_initialization[backend=numpy]" time="0.147" /><testcase classname="tests.test_analysis.TestPupilAberration" name="test_initialization[backend=torch]" time="0.646" /><testcase classname="tests.test_analysis.TestPupilAberration" name="test_generate_data[backend=numpy]" time="0.372" /><testcase classname="tests.test_analysis.TestPupilAberration" name="test_generate_data[backend=torch]" time="1.153" /><testcase classname="tests.test_analysis.TestPupilAberration" name="test_view[backend=numpy]" time="0.365" /><testcase classname="tests.test_analysis.TestPupilAberration" name="test_view[backend=torch]" time="0.864" /><testcase classname="tests.test_analysis" name="test_spotdiagram_invalid_coordinates" time="0.031" /><testcase classname="tests.test_analysis" name="test_generate_field_data_local[backend=numpy]" time="0.081" /><testcase classname="tests.test_analysis" name="test_generate_field_data_local[backend=torch]" time="0.188" /><testcase classname="tests.test_analysis" name="test_generate_field_data_global[backend=numpy]" time="0.078" /><testcase classname="tests.test_analysis" name="test_generate_field_data_global[backend=torch]" time="0.213" /><testcase classname="tests.test_analysis.TestIncoherentIrradiance" name="test_irradiance_v1_uniform_and_user_defined_rays[backend=numpy]" time="0.752" /><testcase classname="tests.test_analysis.TestIncoherentIrradiance" name="test_irradiance_v1_uniform_and_user_defined_rays[backend=torch]" time="0.732" /><testcase classname="tests.test_analysis.TestIncoherentIrradiance" name="test_irradiance_v1_one_ray_per_other_pixel[backend=numpy]" time="0.157" /><testcase classname="tests.test_analysis.TestIncoherentIrradiance" name="test_irradiance_v1_one_ray_per_other_pixel[backend=torch]" time="0.111" /><testcase classname="tests.test_analysis.TestIncoherentIrradiance" name="test_irradiance_gaussian_apodization[backend=numpy]" time="0.148" /><testcase classname="tests.test_analysis.TestIncoherentIrradiance" name="test_irradiance_gaussian_apodization[backend=torch]" time="0.126" /><testcase classname="tests.test_analysis.TestIncoherentIrradiance" name="test_irradiance_perfect_mirror_focus[backend=numpy]" time="0.111" /><testcase classname="tests.test_analysis.TestIncoherentIrradiance" name="test_irradiance_perfect_mirror_focus[backend=torch]" time="0.111" /><testcase classname="tests.test_analysis.TestIncoherentIrradiance" name="test_irradiance_plot_cross_section_gaussian[backend=numpy]" time="0.237" /><testcase classname="tests.test_analysis.TestIncoherentIrradiance" name="test_irradiance_plot_cross_section_gaussian[backend=torch]" time="0.301" /><testcase classname="tests.test_analysis.TestIncoherentIrradiance" name="test_irradiance_peak_irradiance[backend=numpy]" time="0.004" /><testcase classname="tests.test_analysis.TestIncoherentIrradiance" name="test_irradiance_peak_irradiance[backend=torch]" time="0.015" /><testcase classname="tests.test_analysis.TestIncoherentIrradiance" name="test_detector_surface_no_aperture[backend=numpy]" time="0.001" /><testcase classname="tests.test_analysis.TestIncoherentIrradiance" name="test_detector_surface_no_aperture[backend=torch]" time="0.001" /><testcase classname="tests.test_analysis.TestIncoherentIrradiance" name="test_px_size_overrides_res_warning[backend=numpy]" time="0.127" /><testcase classname="tests.test_analysis.TestIncoherentIrradiance" name="test_px_size_overrides_res_warning[backend=torch]" time="0.119" /><testcase classname="tests.test_analysis.TestIncoherentIrradiance" name="test_irradiance_view_options[backend=numpy]" time="0.210" /><testcase classname="tests.test_analysis.TestIncoherentIrradiance" name="test_irradiance_view_options[backend=torch]" time="0.186" /><testcase classname="tests.test_analysis.TestIncoherentIrradiance" name="test_irradiance_cross_section_invalid_slice[backend=numpy]" time="0.737" /><testcase classname="tests.test_analysis.TestIncoherentIrradiance" name="test_irradiance_cross_section_invalid_slice[backend=torch]" time="0.392" /><testcase classname="tests.test_analysis.TestIncoherentIrradiance" name="test_irradiance_view_no_data[backend=numpy]" time="0.005" /><testcase classname="tests.test_analysis.TestIncoherentIrradiance" name="test_irradiance_view_no_data[backend=torch]" time="0.011" /><testcase classname="tests.test_analysis.TestIncoherentIrradiance" name="test_vmin_vmax_equal_case[backend=numpy]" time="0.317" /><testcase classname="tests.test_analysis.TestIncoherentIrradiance" name="test_vmin_vmax_equal_case[backend=torch]" time="0.383" /><testcase classname="tests.test_analysis.TestIncoherentIrradiance" name="test_peak_irradiance_empty_data[backend=numpy]" time="0.005" /><testcase classname="tests.test_analysis.TestIncoherentIrradiance" name="test_peak_irradiance_empty_data[backend=torch]" time="0.016" /><testcase classname="tests.test_analysis.TestIncoherentIrradiance" name="test_irradiance_autodiff[backend=numpy]" time="0.001"><skipped type="pytest.skip" message="Autodiff test only runs for torch backend">C:\Users\golde\code\optiland\tests\test_analysis.py:1402: Autodiff test only runs for torch backend</skipped></testcase><testcase classname="tests.test_analysis.TestIncoherentIrradiance" name="test_irradiance_autodiff[backend=torch]" time="0.059" /><testcase classname="tests.test_analysis" name="test_incoherent_irradiance_initialization[backend=numpy]" time="0.005" /><testcase classname="tests.test_analysis" name="test_incoherent_irradiance_initialization[backend=torch]" time="0.011" /><testcase classname="tests.test_analysis" name="test_view_normalize_true_peak_zero[backend=numpy]" time="0.133" /><testcase classname="tests.test_analysis" name="test_view_normalize_true_peak_zero[backend=torch]" time="0.122" /><testcase classname="tests.test_analysis" name="test_cross_section_plot_helper_out_of_bounds[backend=numpy]" time="0.008" /><testcase classname="tests.test_analysis" name="test_cross_section_plot_helper_out_of_bounds[backend=torch]" time="0.015" /><testcase classname="tests.test_analysis.TestThroughFocusSpotDiagram" name="test_init_valid[backend=numpy]" time="0.275" /><testcase classname="tests.test_analysis.TestThroughFocusSpotDiagram" name="test_init_valid[backend=torch]" time="0.815" /><testcase classname="tests.test_analysis.TestThroughFocusSpotDiagram" name="test_init_invalid_coordinates[backend=numpy]" time="0.039" /><testcase classname="tests.test_analysis.TestThroughFocusSpotDiagram" name="test_init_invalid_coordinates[backend=torch]" time="0.037" /><testcase classname="tests.test_analysis.TestThroughFocusSpotDiagram" name="test_perform_analysis_at_focus_returns_data[backend=numpy]" time="0.177" /><testcase classname="tests.test_analysis.TestThroughFocusSpotDiagram" name="test_perform_analysis_at_focus_returns_data[backend=torch]" time="0.635" /><testcase classname="tests.test_analysis.TestThroughFocusSpotDiagram" name="test_validate_view_prerequisites_failure_empty_results[backend=numpy]" time="0.267" /><testcase classname="tests.test_analysis.TestThroughFocusSpotDiagram" name="test_validate_view_prerequisites_failure_empty_results[backend=torch]" time="0.522" /><testcase classname="tests.test_analysis.TestThroughFocusSpotDiagram" name="test_validate_view_prerequisites_failure_empty_fields[backend=numpy]" time="0.151" /><testcase classname="tests.test_analysis.TestThroughFocusSpotDiagram" name="test_validate_view_prerequisites_failure_empty_fields[backend=torch]" time="0.606" /><testcase classname="tests.test_analysis.TestThroughFocusSpotDiagram" name="test_validate_view_prerequisites_success[backend=numpy]" time="0.186" /><testcase classname="tests.test_analysis.TestThroughFocusSpotDiagram" name="test_validate_view_prerequisites_success[backend=torch]" time="0.458" /><testcase classname="tests.test_analysis.TestThroughFocusSpotDiagram" name="test_get_plot_axis_labels_orientation_0[backend=numpy]" time="0.140" /><testcase classname="tests.test_analysis.TestThroughFocusSpotDiagram" name="test_get_plot_axis_labels_orientation_0[backend=torch]" time="0.718" /><testcase classname="tests.test_analysis.TestThroughFocusSpotDiagram" name="test_get_spot_centroid_and_axis_limit[backend=numpy]" time="0.150" /><testcase classname="tests.test_analysis.TestThroughFocusSpotDiagram" name="test_get_spot_centroid_and_axis_limit[backend=torch]" time="0.473" /><testcase classname="tests.test_analysis.TestThroughFocusSpotDiagram" name="test_view_full[backend=numpy]" time="0.636" /><testcase classname="tests.test_analysis.TestThroughFocusSpotDiagram" name="test_view_full[backend=torch]" time="0.889" /><testcase classname="tests.test_analysis.TestThroughFocusSpotDiagram" name="test_view_with_all_zero_intensities[backend=numpy]" time="0.582" /><testcase classname="tests.test_analysis.TestThroughFocusSpotDiagram" name="test_view_with_all_zero_intensities[backend=torch]" time="0.966" /><testcase classname="tests.test_analysis.TestRadiantIntensity" name="test_intensity_output_values[backend=numpy-1-tests/zemax_files/sph_lens_coll_intensity_free_prop.txt-12]" time="3.568" /><testcase classname="tests.test_analysis.TestRadiantIntensity" name="test_intensity_output_values[backend=torch-1-tests/zemax_files/sph_lens_coll_intensity_free_prop.txt-12]" time="4.716" /><testcase classname="tests.test_analysis.TestRadiantIntensity" name="test_view_intensity[backend=numpy]" time="1.430" /><testcase classname="tests.test_analysis.TestRadiantIntensity" name="test_view_intensity[backend=torch]" time="0.422" /><testcase classname="tests.test_analysis.TestRadiantIntensity" name="test_view_intensity_cross_section[backend=numpy]" time="0.194" /><testcase classname="tests.test_analysis.TestRadiantIntensity" name="test_view_intensity_cross_section[backend=torch]" time="0.222" /><testcase classname="tests.test_analysis.TestRadiantIntensity" name="test_view_intensity_normalize[backend=numpy]" time="0.658" /><testcase classname="tests.test_analysis.TestRadiantIntensity" name="test_view_intensity_normalize[backend=torch]" time="0.385" /><testcase classname="tests.test_analysis.TestRadiantIntensity" name="test_intensity_autodiff[backend=numpy]" time="0.001"><skipped type="pytest.skip" message="Autodiff test only runs for torch backend">C:\Users\golde\code\optiland\tests\test_analysis.py:2003: Autodiff test only runs for torch backend</skipped></testcase><testcase classname="tests.test_analysis.TestRadiantIntensity" name="test_intensity_autodiff[backend=torch]" time="0.032" /><testcase classname="tests.test_analysis.TestCookeTripletBestFitRayFan" name="test_initialization[backend=numpy]" time="0.322" /><testcase classname="tests.test_analysis.TestCookeTripletBestFitRayFan" name="test_initialization[backend=torch]" time="0.740" /><testcase classname="tests.test_analysis.TestCookeTripletBestFitRayFan" name="test_best_fit_ray_fan_data[backend=numpy]" time="0.174" /><testcase classname="tests.test_analysis.TestCookeTripletBestFitRayFan" name="test_best_fit_ray_fan_data[backend=torch]" time="0.831" /><testcase classname="tests.test_analysis.TestCookeTripletBestFitRayFan" name="test_view_best_fit_ray_fan[backend=numpy]" time="0.457" /><testcase classname="tests.test_analysis.TestCookeTripletBestFitRayFan" name="test_view_best_fit_ray_fan[backend=torch]" time="0.759" /><testcase classname="tests.test_analysis.TestCookeTripletBestFitRayFan" name="test_remove_distortion_with_invalid_central_ray[backend=numpy]" time="0.005" /><testcase classname="tests.test_analysis.TestCookeTripletBestFitRayFan" name="test_remove_distortion_with_invalid_central_ray[backend=torch]" time="0.003" /><testcase classname="tests.test_angle_vs_height.TestPupilIncidentAngleVsHeight" name="test_initialization[backend=numpy]" time="0.038" /><testcase classname="tests.test_angle_vs_height.TestPupilIncidentAngleVsHeight" name="test_initialization[backend=torch]" time="0.057" /><testcase classname="tests.test_angle_vs_height.TestPupilIncidentAngleVsHeight" name="test_get_trace_coordinates_axis_y[backend=numpy]" time="0.039" /><testcase classname="tests.test_angle_vs_height.TestPupilIncidentAngleVsHeight" name="test_get_trace_coordinates_axis_y[backend=torch]" time="0.065" /><testcase classname="tests.test_angle_vs_height.TestPupilIncidentAngleVsHeight" name="test_get_trace_coordinates_axis_x[backend=numpy]" time="0.044" /><testcase classname="tests.test_angle_vs_height.TestPupilIncidentAngleVsHeight" name="test_get_trace_coordinates_axis_x[backend=torch]" time="0.051" /><testcase classname="tests.test_angle_vs_height.TestPupilIncidentAngleVsHeight" name="test_generate_data[backend=numpy]" time="0.036" /><testcase classname="tests.test_angle_vs_height.TestPupilIncidentAngleVsHeight" name="test_generate_data[backend=torch]" time="0.050" /><testcase classname="tests.test_angle_vs_height.TestPupilIncidentAngleVsHeight" name="test_view[backend=numpy]" time="0.108" /><testcase classname="tests.test_angle_vs_height.TestPupilIncidentAngleVsHeight" name="test_view[backend=torch]" time="0.406" /><testcase classname="tests.test_angle_vs_height.TestFieldIncidentAngleVsHeight" name="test_initialization[backend=numpy]" time="0.036" /><testcase classname="tests.test_angle_vs_height.TestFieldIncidentAngleVsHeight" name="test_initialization[backend=torch]" time="0.055" /><testcase classname="tests.test_angle_vs_height.TestFieldIncidentAngleVsHeight" name="test_get_trace_coordinates_axis_y[backend=numpy]" time="0.036" /><testcase classname="tests.test_angle_vs_height.TestFieldIncidentAngleVsHeight" name="test_get_trace_coordinates_axis_y[backend=torch]" time="0.089" /><testcase classname="tests.test_angle_vs_height.TestFieldIncidentAngleVsHeight" name="test_get_trace_coordinates_axis_x[backend=numpy]" time="0.058" /><testcase classname="tests.test_angle_vs_height.TestFieldIncidentAngleVsHeight" name="test_get_trace_coordinates_axis_x[backend=torch]" time="0.098" /><testcase classname="tests.test_angle_vs_height.TestFieldIncidentAngleVsHeight" name="test_generate_data[backend=numpy]" time="0.053" /><testcase classname="tests.test_angle_vs_height.TestFieldIncidentAngleVsHeight" name="test_generate_data[backend=torch]" time="0.068" /><testcase classname="tests.test_angle_vs_height.TestFieldIncidentAngleVsHeight" name="test_view[backend=numpy]" time="0.126" /><testcase classname="tests.test_angle_vs_height.TestFieldIncidentAngleVsHeight" name="test_view[backend=torch]" time="0.126" /><testcase classname="tests.test_angle_vs_height.TestAngleVsHeightErrors" name="test_invalid_coord_label_raises_error[backend=numpy]" time="0.046" /><testcase classname="tests.test_angle_vs_height.TestAngleVsHeightErrors" name="test_invalid_coord_label_raises_error[backend=torch]" time="0.053" /><testcase classname="tests.test_angle_vs_height.TestAngleVsHeightErrors" name="test_view_with_different_color_labels[backend=numpy]" time="0.105" /><testcase classname="tests.test_angle_vs_height.TestAngleVsHeightErrors" name="test_view_with_different_color_labels[backend=torch]" time="0.164" /><testcase classname="tests.test_aperture" name="test_aperture_generate[backend=numpy-EPD-10]" time="0.001" /><testcase classname="tests.test_aperture" name="test_aperture_generate[backend=numpy-imageFNO-3.2]" time="0.001" /><testcase classname="tests.test_aperture" name="test_aperture_generate[backend=numpy-objectNA-0.265]" time="0.001" /><testcase classname="tests.test_aperture" name="test_aperture_generate[backend=numpy-float_by_stop_size-1.142857]" time="0.001" /><testcase classname="tests.test_aperture" name="test_aperture_generate[backend=torch-EPD-10]" time="0.001" /><testcase classname="tests.test_aperture" name="test_aperture_generate[backend=torch-imageFNO-3.2]" time="0.001" /><testcase classname="tests.test_aperture" name="test_aperture_generate[backend=torch-objectNA-0.265]" time="0.001" /><testcase classname="tests.test_aperture" name="test_aperture_generate[backend=torch-float_by_stop_size-1.142857]" time="0.001" /><testcase classname="tests.test_aperture" name="test_confirm_invalid_ap_type[backend=numpy]" time="0.001" /><testcase classname="tests.test_aperture" name="test_confirm_invalid_ap_type[backend=torch]" time="0.001" /><testcase classname="tests.test_aperture" name="test_obj_space_telecentric[backend=numpy]" time="0.002" /><testcase classname="tests.test_aperture" name="test_obj_space_telecentric[backend=torch]" time="0.002" /><testcase classname="tests.test_aperture" name="test_to_dict[backend=numpy]" time="0.001" /><testcase classname="tests.test_aperture" name="test_to_dict[backend=torch]" time="0.001" /><testcase classname="tests.test_aperture" name="test_from_dict[backend=numpy]" time="0.001" /><testcase classname="tests.test_aperture" name="test_from_dict[backend=torch]" time="0.001" /><testcase classname="tests.test_aperture" name="test_invalid_from_dict[backend=numpy]" time="0.001" /><testcase classname="tests.test_aperture" name="test_invalid_from_dict[backend=torch]" time="0.001" /><testcase classname="tests.test_aperture" name="test_confirm_stop_size_floating_stop[backend=numpy]" time="0.021" /><testcase classname="tests.test_aperture" name="test_confirm_stop_size_floating_stop[backend=torch]" time="0.020" /><testcase classname="tests.test_apodization" name="test_uniform_apodization_get_intensity[backend=numpy]" time="0.001" /><testcase classname="tests.test_apodization" name="test_uniform_apodization_get_intensity[backend=torch]" time="0.001" /><testcase classname="tests.test_apodization" name="test_gaussian_apodization_get_intensity[backend=numpy]" time="0.001" /><testcase classname="tests.test_apodization" name="test_gaussian_apodization_get_intensity[backend=torch]" time="0.005" /><testcase classname="tests.test_apodization" name="test_apodization_to_dict_uniform[backend=numpy]" time="0.001" /><testcase classname="tests.test_apodization" name="test_apodization_to_dict_uniform[backend=torch]" time="0.001" /><testcase classname="tests.test_apodization" name="test_apodization_to_dict_gaussian[backend=numpy]" time="0.001" /><testcase classname="tests.test_apodization" name="test_apodization_to_dict_gaussian[backend=torch]" time="0.001" /><testcase classname="tests.test_apodization" name="test_apodization_from_dict_uniform[backend=numpy]" time="0.001" /><testcase classname="tests.test_apodization" name="test_apodization_from_dict_uniform[backend=torch]" time="0.001" /><testcase classname="tests.test_apodization" name="test_apodization_from_dict_gaussian[backend=numpy]" time="0.001" /><testcase classname="tests.test_apodization" name="test_apodization_from_dict_gaussian[backend=torch]" time="0.001" /><testcase classname="tests.test_apodization" name="test_apodization_from_dict_gaussian_default_sigma[backend=numpy]" time="0.001" /><testcase classname="tests.test_apodization" name="test_apodization_from_dict_gaussian_default_sigma[backend=torch]" time="0.001" /><testcase classname="tests.test_apodization" name="test_apodization_from_dict_unknown[backend=numpy]" time="0.001" /><testcase classname="tests.test_apodization" name="test_apodization_from_dict_unknown[backend=torch]" time="0.001" /><testcase classname="tests.test_apodization" name="test_set_apodization_uniform[backend=numpy]" time="0.042" /><testcase classname="tests.test_apodization" name="test_set_apodization_uniform[backend=torch]" time="0.037" /><testcase classname="tests.test_apodization" name="test_set_apodization_gaussian[backend=numpy]" time="0.033" /><testcase classname="tests.test_apodization" name="test_set_apodization_gaussian[backend=torch]" time="0.036" /><testcase classname="tests.test_apodization" name="test_set_apodization_invalid_type[backend=numpy]" time="0.034" /><testcase classname="tests.test_apodization" name="test_set_apodization_invalid_type[backend=torch]" time="0.035" /><testcase classname="tests.test_apodization" name="test_set_apodization_none[backend=numpy]" time="0.033" /><testcase classname="tests.test_apodization" name="test_set_apodization_none[backend=torch]" time="0.033" /><testcase classname="tests.test_apodization" name="test_trace_apodization[backend=numpy]" time="0.232" /><testcase classname="tests.test_apodization" name="test_trace_apodization[backend=torch]" time="0.392" /><testcase classname="tests.test_backend" name="test_default_backend" time="0.001" /><testcase classname="tests.test_backend" name="test_list_available_backends" time="0.001" /><testcase classname="tests.test_backend" name="test_invalid_backend" time="0.001" /><testcase classname="tests.test_backend" name="test_getattr_nonexistent_attribute" time="0.001" /><testcase classname="tests.test_backend" name="test_getattr_from_backend" time="0.001" /><testcase classname="tests.test_backend" name="test_getattr_from_backend_lib" time="0.001" /><testcase classname="tests.test_backend" name="test_getattr_fallback_priority" time="0.001" /><testcase classname="tests.test_backend" name="test_get_backend_after_set" time="0.001" /><testcase classname="tests.test_coatings.TestSimpleCoating" name="test_interact_reflect[backend=numpy]" time="0.001" /><testcase classname="tests.test_coatings.TestSimpleCoating" name="test_interact_reflect[backend=torch]" time="0.003" /><testcase classname="tests.test_coatings.TestSimpleCoating" name="test_interact_transmit[backend=numpy]" time="0.001" /><testcase classname="tests.test_coatings.TestSimpleCoating" name="test_interact_transmit[backend=torch]" time="0.001" /><testcase classname="tests.test_coatings.TestSimpleCoating" name="test_compute_aoi[backend=numpy]" time="0.001" /><testcase classname="tests.test_coatings.TestSimpleCoating" name="test_compute_aoi[backend=torch]" time="0.005" /><testcase classname="tests.test_coatings.TestSimpleCoating" name="test_to_dict[backend=numpy]" time="0.001" /><testcase classname="tests.test_coatings.TestSimpleCoating" name="test_to_dict[backend=torch]" time="0.001" /><testcase classname="tests.test_coatings.TestFresnelCoating" name="test_reflect[backend=numpy]" time="0.015" /><testcase classname="tests.test_coatings.TestFresnelCoating" name="test_reflect[backend=torch]" time="0.040" /><testcase classname="tests.test_coatings.TestFresnelCoating" name="test_transmit[backend=numpy]" time="0.005" /><testcase classname="tests.test_coatings.TestFresnelCoating" name="test_transmit[backend=torch]" time="0.003" /><testcase classname="tests.test_coatings.TestFresnelCoating" name="test_to_dict[backend=numpy]" time="0.001" /><testcase classname="tests.test_coatings.TestFresnelCoating" name="test_to_dict[backend=torch]" time="0.001" /><testcase classname="tests.test_coatings.TestFresnelCoating" name="test_from_dict[backend=numpy]" time="0.000" /><testcase classname="tests.test_coatings.TestFresnelCoating" name="test_from_dict[backend=torch]" time="0.003" /><testcase classname="tests.test_compensator" name="test_initialization_default" time="0.001" /><testcase classname="tests.test_compensator" name="test_initialization_custom" time="0.001" /><testcase classname="tests.test_compensator" name="test_has_variables" time="0.001" /><testcase classname="tests.test_compensator" name="test_run_optimizer_generic" time="0.072" /><testcase classname="tests.test_compensator" name="test_run_optimizer_least_squares" time="0.052" /><testcase classname="tests.test_compensator" name="test_invalid_method[backend=numpy]" time="0.001" /><testcase classname="tests.test_compensator" name="test_invalid_method[backend=torch]" time="0.002" /><testcase classname="tests.test_compensator" name="test_empty_variables_run" time="0.001" /><testcase classname="tests.test_compensator" name="test_tolerance_setting" time="0.001" /><testcase classname="tests.test_compensator" name="test_optimizer_map_content" time="0.001" /><testcase classname="tests.test_coordinate_system" name="test_coordinate_system_init[backend=numpy]" time="0.001" /><testcase classname="tests.test_coordinate_system" name="test_coordinate_system_init[backend=torch]" time="0.002" /><testcase classname="tests.test_coordinate_system" name="test_coordinate_system_localize[backend=numpy]" time="0.002" /><testcase classname="tests.test_coordinate_system" name="test_coordinate_system_localize[backend=torch]" time="0.005" /><testcase classname="tests.test_coordinate_system" name="test_coordinate_system_globalize[backend=numpy]" time="0.002" /><testcase classname="tests.test_coordinate_system" name="test_coordinate_system_globalize[backend=torch]" time="0.005" /><testcase classname="tests.test_coordinate_system" name="test_coordinate_system_transform[backend=numpy]" time="0.002" /><testcase classname="tests.test_coordinate_system" name="test_coordinate_system_transform[backend=torch]" time="0.006" /><testcase classname="tests.test_coordinate_system" name="test_coordinate_system_to_dict[backend=numpy]" time="0.001" /><testcase classname="tests.test_coordinate_system" name="test_coordinate_system_to_dict[backend=torch]" time="0.001" /><testcase classname="tests.test_coordinate_system" name="test_coordinate_system_from_dict[backend=numpy]" time="0.001" /><testcase classname="tests.test_coordinate_system" name="test_coordinate_system_from_dict[backend=torch]" time="0.001" /><testcase classname="tests.test_distribution" name="test_line_x[backend=numpy-10]" time="0.003" /><testcase classname="tests.test_distribution" name="test_line_x[backend=numpy-25]" time="0.002" /><testcase classname="tests.test_distribution" name="test_line_x[backend=numpy-106]" time="0.002" /><testcase classname="tests.test_distribution" name="test_line_x[backend=numpy-512]" time="0.002" /><testcase classname="tests.test_distribution" name="test_line_x[backend=torch-10]" time="0.002" /><testcase classname="tests.test_distribution" name="test_line_x[backend=torch-25]" time="0.006" /><testcase classname="tests.test_distribution" name="test_line_x[backend=torch-106]" time="0.008" /><testcase classname="tests.test_distribution" name="test_line_x[backend=torch-512]" time="0.002" /><testcase classname="tests.test_distribution" name="test_line_y[backend=numpy-9]" time="0.002" /><testcase classname="tests.test_distribution" name="test_line_y[backend=numpy-60]" time="0.002" /><testcase classname="tests.test_distribution" name="test_line_y[backend=numpy-111]" time="0.002" /><testcase classname="tests.test_distribution" name="test_line_y[backend=numpy-509]" time="0.002" /><testcase classname="tests.test_distribution" name="test_line_y[backend=torch-9]" time="0.002" /><testcase classname="tests.test_distribution" name="test_line_y[backend=torch-60]" time="0.002" /><testcase classname="tests.test_distribution" name="test_line_y[backend=torch-111]" time="0.002" /><testcase classname="tests.test_distribution" name="test_line_y[backend=torch-509]" time="0.002" /><testcase classname="tests.test_distribution" name="test_random[backend=numpy-8]" time="0.001" /><testcase classname="tests.test_distribution" name="test_random[backend=numpy-26]" time="0.004" /><testcase classname="tests.test_distribution" name="test_random[backend=numpy-154]" time="0.002" /><testcase classname="tests.test_distribution" name="test_random[backend=numpy-689]" time="0.002" /><testcase classname="tests.test_distribution" name="test_random[backend=torch-8]" time="0.002" /><testcase classname="tests.test_distribution" name="test_random[backend=torch-26]" time="0.002" /><testcase classname="tests.test_distribution" name="test_random[backend=torch-154]" time="0.002" /><testcase classname="tests.test_distribution" name="test_random[backend=torch-689]" time="0.007" /><testcase classname="tests.test_distribution" name="test_hexapolar[backend=numpy-3]" time="0.002" /><testcase classname="tests.test_distribution" name="test_hexapolar[backend=numpy-7]" time="0.002" /><testcase classname="tests.test_distribution" name="test_hexapolar[backend=numpy-15]" time="0.003" /><testcase classname="tests.test_distribution" name="test_hexapolar[backend=numpy-220]" time="0.118" /><testcase classname="tests.test_distribution" name="test_hexapolar[backend=torch-3]" time="0.002" /><testcase classname="tests.test_distribution" name="test_hexapolar[backend=torch-7]" time="0.002" /><testcase classname="tests.test_distribution" name="test_hexapolar[backend=torch-15]" time="0.009" /><testcase classname="tests.test_distribution" name="test_hexapolar[backend=torch-220]" time="0.124" /><testcase classname="tests.test_distribution" name="test_cross[backend=numpy-15]" time="0.001" /><testcase classname="tests.test_distribution" name="test_cross[backend=numpy-56]" time="0.001" /><testcase classname="tests.test_distribution" name="test_cross[backend=numpy-161]" time="0.002" /><testcase classname="tests.test_distribution" name="test_cross[backend=numpy-621]" time="0.001" /><testcase classname="tests.test_distribution" name="test_cross[backend=torch-15]" time="0.001" /><testcase classname="tests.test_distribution" name="test_cross[backend=torch-56]" time="0.001" /><testcase classname="tests.test_distribution" name="test_cross[backend=torch-161]" time="0.002" /><testcase classname="tests.test_distribution" name="test_cross[backend=torch-621]" time="0.001" /><testcase classname="tests.test_distribution" name="test_view_distribution[backend=numpy]" time="0.010" /><testcase classname="tests.test_distribution" name="test_view_distribution[backend=torch]" time="0.007" /><testcase classname="tests.test_distribution" name="test_invalid_distribution_error[backend=numpy]" time="0.001" /><testcase classname="tests.test_distribution" name="test_invalid_distribution_error[backend=torch]" time="0.001" /><testcase classname="tests.test_distribution" name="test_uniform_distribution[backend=numpy-10]" time="0.001" /><testcase classname="tests.test_distribution" name="test_uniform_distribution[backend=numpy-25]" time="0.001" /><testcase classname="tests.test_distribution" name="test_uniform_distribution[backend=numpy-50]" time="0.001" /><testcase classname="tests.test_distribution" name="test_uniform_distribution[backend=numpy-100]" time="0.001" /><testcase classname="tests.test_distribution" name="test_uniform_distribution[backend=torch-10]" time="0.001" /><testcase classname="tests.test_distribution" name="test_uniform_distribution[backend=torch-25]" time="0.001" /><testcase classname="tests.test_distribution" name="test_uniform_distribution[backend=torch-50]" time="0.001" /><testcase classname="tests.test_distribution" name="test_uniform_distribution[backend=torch-100]" time="0.005" /><testcase classname="tests.test_distribution" name="test_gaussian_quad_distribution[backend=numpy]" time="0.002" /><testcase classname="tests.test_distribution" name="test_gaussian_quad_distribution[backend=torch]" time="0.006" /><testcase classname="tests.test_distribution" name="test_gaussian_quad_distribution_errors[backend=numpy]" time="0.001" /><testcase classname="tests.test_distribution" name="test_gaussian_quad_distribution_errors[backend=torch]" time="0.001" /><testcase classname="tests.test_distribution" name="test_gaussian_quad_weights[backend=numpy]" time="0.002" /><testcase classname="tests.test_distribution" name="test_gaussian_quad_weights[backend=torch]" time="0.003" /><testcase classname="tests.test_distribution_points.TestDistributionPoints" name="test_cross_distribution_odd_points[numpy]" time="0.002" /><testcase classname="tests.test_distribution_points.TestDistributionPoints" name="test_cross_distribution_odd_points[torch]" time="0.001" /><testcase classname="tests.test_distribution_points.TestDistributionPoints" name="test_cross_distribution_even_points[numpy]" time="0.001" /><testcase classname="tests.test_distribution_points.TestDistributionPoints" name="test_cross_distribution_even_points[torch]" time="0.001" /><testcase classname="tests.test_distribution_points.TestDistributionPoints" name="test_hexagonal_distribution[0-numpy]" time="0.002" /><testcase classname="tests.test_distribution_points.TestDistributionPoints" name="test_hexagonal_distribution[0-torch]" time="0.002" /><testcase classname="tests.test_distribution_points.TestDistributionPoints" name="test_hexagonal_distribution[1-numpy]" time="0.001" /><testcase classname="tests.test_distribution_points.TestDistributionPoints" name="test_hexagonal_distribution[1-torch]" time="0.001" /><testcase classname="tests.test_distribution_points.TestDistributionPoints" name="test_hexagonal_distribution[2-numpy]" time="0.001" /><testcase classname="tests.test_distribution_points.TestDistributionPoints" name="test_hexagonal_distribution[2-torch]" time="0.002" /><testcase classname="tests.test_distribution_points.TestDistributionPoints" name="test_hexagonal_distribution[3-numpy]" time="0.001" /><testcase classname="tests.test_distribution_points.TestDistributionPoints" name="test_hexagonal_distribution[3-torch]" time="0.002" /><testcase classname="tests.test_distribution_points.TestDistributionPoints" name="test_random_distribution[numpy]" time="0.001" /><testcase classname="tests.test_distribution_points.TestDistributionPoints" name="test_random_distribution[torch]" time="0.001" /><testcase classname="tests.test_distribution_points.TestDistributionPoints" name="test_uniform_distribution[numpy]" time="0.001" /><testcase classname="tests.test_distribution_points.TestDistributionPoints" name="test_uniform_distribution[torch]" time="0.002" /><testcase classname="tests.test_distribution_points.TestDistributionPoints" name="test_ring_distribution[numpy]" time="0.001" /><testcase classname="tests.test_distribution_points.TestDistributionPoints" name="test_ring_distribution[torch]" time="0.001" /><testcase classname="tests.test_distribution_points.TestDistributionPoints" name="test_line_x_distribution[numpy]" time="0.001" /><testcase classname="tests.test_distribution_points.TestDistributionPoints" name="test_line_x_distribution[torch]" time="0.001" /><testcase classname="tests.test_distribution_points.TestDistributionPoints" name="test_line_y_distribution[numpy]" time="0.001" /><testcase classname="tests.test_distribution_points.TestDistributionPoints" name="test_line_y_distribution[torch]" time="0.001" /><testcase classname="tests.test_distribution_points.TestDistributionPoints" name="test_gaussian_quadrature_distribution[True-1-numpy]" time="0.001" /><testcase classname="tests.test_distribution_points.TestDistributionPoints" name="test_gaussian_quadrature_distribution[True-1-torch]" time="0.002" /><testcase classname="tests.test_distribution_points.TestDistributionPoints" name="test_gaussian_quadrature_distribution[True-3-numpy]" time="0.001" /><testcase classname="tests.test_distribution_points.TestDistributionPoints" name="test_gaussian_quadrature_distribution[True-3-torch]" time="0.001" /><testcase classname="tests.test_distribution_points.TestDistributionPoints" name="test_gaussian_quadrature_distribution[True-5-numpy]" time="0.001" /><testcase classname="tests.test_distribution_points.TestDistributionPoints" name="test_gaussian_quadrature_distribution[True-5-torch]" time="0.003" /><testcase classname="tests.test_distribution_points.TestDistributionPoints" name="test_gaussian_quadrature_distribution[False-1-numpy]" time="0.001" /><testcase classname="tests.test_distribution_points.TestDistributionPoints" name="test_gaussian_quadrature_distribution[False-1-torch]" time="0.002" /><testcase classname="tests.test_distribution_points.TestDistributionPoints" name="test_gaussian_quadrature_distribution[False-3-numpy]" time="0.001" /><testcase classname="tests.test_distribution_points.TestDistributionPoints" name="test_gaussian_quadrature_distribution[False-3-torch]" time="0.001" /><testcase classname="tests.test_distribution_points.TestDistributionPoints" name="test_gaussian_quadrature_distribution[False-5-numpy]" time="0.001" /><testcase classname="tests.test_distribution_points.TestDistributionPoints" name="test_gaussian_quadrature_distribution[False-5-torch]" time="0.001" /><testcase classname="tests.test_distribution_points.TestDistributionPoints" name="test_cross_distribution_zero_points[numpy]" time="0.001" /><testcase classname="tests.test_distribution_points.TestDistributionPoints" name="test_cross_distribution_zero_points[torch]" time="0.001" /><testcase classname="tests.test_distribution_points.TestDistributionPoints" name="test_hexagonal_distribution_negative_rings[numpy]" time="0.001" /><testcase classname="tests.test_distribution_points.TestDistributionPoints" name="test_hexagonal_distribution_negative_rings[torch]" time="0.001" /><testcase classname="tests.test_distribution_points.TestDistributionPoints" name="test_ring_distribution_zero_points[numpy]" time="0.001" /><testcase classname="tests.test_distribution_points.TestDistributionPoints" name="test_ring_distribution_zero_points[torch]" time="0.001" /><testcase classname="tests.test_fft_psf" name="test_initialization[backend=numpy]" time="0.203" /><testcase classname="tests.test_fft_psf" name="test_initialization[backend=torch]" time="0.266" /><testcase classname="tests.test_fft_psf" name="test_calculate_grid_size[32-32]" time="0.001" /><testcase classname="tests.test_fft_psf" name="test_calculate_grid_size[64-45]" time="0.001" /><testcase classname="tests.test_fft_psf" name="test_calculate_grid_size[128-64]" time="0.001" /><testcase classname="tests.test_fft_psf" name="test_calculate_grid_size[256-90]" time="0.001" /><testcase classname="tests.test_fft_psf" name="test_calculate_grid_size[512-128]" time="0.001" /><testcase classname="tests.test_fft_psf" name="test_calculate_grid_size[1024-181]" time="0.001" /><testcase classname="tests.test_fft_psf" name="test_calculate_grid_size[2048-256]" time="0.001" /><testcase classname="tests.test_fft_psf" name="test_calculate_grid_size[4096-362]" time="0.001" /><testcase classname="tests.test_fft_psf" name="test_calculate_grid_size[8192-512]" time="0.001" /><testcase classname="tests.test_fft_psf" name="test_num_rays_and_grid_size[backend=numpy-32-32]" time="0.061" /><testcase classname="tests.test_fft_psf" name="test_num_rays_and_grid_size[backend=numpy-64-45]" time="0.062" /><testcase classname="tests.test_fft_psf" name="test_num_rays_and_grid_size[backend=numpy-128-64]" time="0.096" /><testcase classname="tests.test_fft_psf" name="test_num_rays_and_grid_size[backend=numpy-256-90]" time="0.125" /><testcase classname="tests.test_fft_psf" name="test_num_rays_and_grid_size[backend=numpy-1024-181]" time="0.551" /><testcase classname="tests.test_fft_psf" name="test_num_rays_and_grid_size[backend=torch-32-32]" time="0.129" /><testcase classname="tests.test_fft_psf" name="test_num_rays_and_grid_size[backend=torch-64-45]" time="0.140" /><testcase classname="tests.test_fft_psf" name="test_num_rays_and_grid_size[backend=torch-128-64]" time="0.193" /><testcase classname="tests.test_fft_psf" name="test_num_rays_and_grid_size[backend=torch-256-90]" time="0.190" /><testcase classname="tests.test_fft_psf" name="test_num_rays_and_grid_size[backend=torch-1024-181]" time="0.330" /><testcase classname="tests.test_fft_psf" name="test_num_rays_below_32[backend=numpy-32-None-expectation0]" time="0.058" /><testcase classname="tests.test_fft_psf" name="test_num_rays_below_32[backend=numpy-64-None-expectation1]" time="0.052" /><testcase classname="tests.test_fft_psf" name="test_num_rays_below_32[backend=numpy-12-16-expectation2]" time="0.052" /><testcase classname="tests.test_fft_psf" name="test_num_rays_below_32[backend=numpy-16-None-expectation3]" time="0.038" /><testcase classname="tests.test_fft_psf" name="test_num_rays_below_32[backend=torch-32-None-expectation0]" time="0.107" /><testcase classname="tests.test_fft_psf" name="test_num_rays_below_32[backend=torch-64-None-expectation1]" time="0.166" /><testcase classname="tests.test_fft_psf" name="test_num_rays_below_32[backend=torch-12-16-expectation2]" time="0.106" /><testcase classname="tests.test_fft_psf" name="test_num_rays_below_32[backend=torch-16-None-expectation3]" time="0.031" /><testcase classname="tests.test_fft_psf" name="test_grid_size[backend=numpy-64-128]" time="0.058" /><testcase classname="tests.test_fft_psf" name="test_grid_size[backend=numpy-65-256]" time="0.061" /><testcase classname="tests.test_fft_psf" name="test_grid_size[backend=numpy-64-257]" time="0.069" /><testcase classname="tests.test_fft_psf" name="test_grid_size[backend=torch-64-128]" time="0.183" /><testcase classname="tests.test_fft_psf" name="test_grid_size[backend=torch-65-256]" time="0.163" /><testcase classname="tests.test_fft_psf" name="test_grid_size[backend=torch-64-257]" time="0.162" /><testcase classname="tests.test_fft_psf" name="test_invalid_grid_size[backend=numpy]" time="0.032" /><testcase classname="tests.test_fft_psf" name="test_invalid_grid_size[backend=torch]" time="0.055" /><testcase classname="tests.test_fft_psf" name="test_strehl_ratio[backend=numpy]" time="0.102" /><testcase classname="tests.test_fft_psf" name="test_strehl_ratio[backend=torch]" time="0.163" /><testcase classname="tests.test_fft_psf" name="test_view[backend=numpy-2d-False]" time="0.127" /><testcase classname="tests.test_fft_psf" name="test_view[backend=numpy-3d-False]" time="0.183" /><testcase classname="tests.test_fft_psf" name="test_view[backend=numpy-2d-True]" time="0.198" /><testcase classname="tests.test_fft_psf" name="test_view[backend=numpy-3d-True]" time="0.264" /><testcase classname="tests.test_fft_psf" name="test_view[backend=torch-2d-False]" time="0.241" /><testcase classname="tests.test_fft_psf" name="test_view[backend=torch-3d-False]" time="0.309" /><testcase classname="tests.test_fft_psf" name="test_view[backend=torch-2d-True]" time="0.258" /><testcase classname="tests.test_fft_psf" name="test_view[backend=torch-3d-True]" time="0.292" /><testcase classname="tests.test_fft_psf" name="test_find_bounds[backend=numpy]" time="0.122" /><testcase classname="tests.test_fft_psf" name="test_find_bounds[backend=torch]" time="0.198" /><testcase classname="tests.test_fft_psf" name="test_view_invalid_projection[backend=numpy]" time="0.317" /><testcase classname="tests.test_fft_psf" name="test_view_invalid_projection[backend=torch]" time="0.264" /><testcase classname="tests.test_fft_psf" name="test_view_annotate_sampling[backend=numpy-2d]" time="0.128" /><testcase classname="tests.test_fft_psf" name="test_view_annotate_sampling[backend=numpy-3d]" time="0.209" /><testcase classname="tests.test_fft_psf" name="test_view_annotate_sampling[backend=torch-2d]" time="0.267" /><testcase classname="tests.test_fft_psf" name="test_view_annotate_sampling[backend=torch-3d]" time="0.288" /><testcase classname="tests.test_fft_psf" name="test_view_oversampling[backend=numpy-2d]" time="0.112" /><testcase classname="tests.test_fft_psf" name="test_view_oversampling[backend=numpy-3d]" time="0.163" /><testcase classname="tests.test_fft_psf" name="test_view_oversampling[backend=torch-2d]" time="0.201" /><testcase classname="tests.test_fft_psf" name="test_view_oversampling[backend=torch-3d]" time="0.281" /><testcase classname="tests.test_fft_psf" name="test_get_units_finite_obj[backend=numpy]" time="0.122" /><testcase classname="tests.test_fft_psf" name="test_get_units_finite_obj[backend=torch]" time="0.211" /><testcase classname="tests.test_fft_psf" name="test_psf_log_tick_formatter[backend=numpy]" time="0.086" /><testcase classname="tests.test_fft_psf" name="test_psf_log_tick_formatter[backend=torch]" time="0.200" /><testcase classname="tests.test_fft_psf" name="test_invalid_working_FNO[backend=numpy]" time="0.113" /><testcase classname="tests.test_fft_psf" name="test_invalid_working_FNO[backend=torch]" time="0.206" /><testcase classname="tests.test_fft_psf" name="test_interpolate_zoom_factor_one[backend=numpy]" time="0.095" /><testcase classname="tests.test_fft_psf" name="test_interpolate_zoom_factor_one[backend=torch]" time="0.192" /><testcase classname="tests.test_fft_psf" name="test_large_threshold[backend=numpy]" time="0.114" /><testcase classname="tests.test_fft_psf" name="test_large_threshold[backend=torch]" time="0.236" /><testcase classname="tests.test_field_types" name="test_paraxial_image_height_infinite_object[backend=numpy]" time="0.017" /><testcase classname="tests.test_field_types" name="test_paraxial_image_height_infinite_object[backend=torch]" time="0.026" /><testcase classname="tests.test_field_types" name="test_paraxial_image_height_finite_object[backend=numpy]" time="0.035" /><testcase classname="tests.test_field_types" name="test_paraxial_image_height_finite_object[backend=torch]" time="0.016" /><testcase classname="tests.test_field_types" name="test_field_definition_to_dict[backend=numpy]" time="0.001" /><testcase classname="tests.test_field_types" name="test_field_definition_to_dict[backend=torch]" time="0.001" /><testcase classname="tests.test_field_types" name="test_field_definition_from_dict[backend=numpy]" time="0.001" /><testcase classname="tests.test_field_types" name="test_field_definition_from_dict[backend=torch]" time="0.001" /><testcase classname="tests.test_field_types" name="test_paraxial_image_height_cooke_triplet[backend=numpy]" time="0.048" /><testcase classname="tests.test_field_types" name="test_paraxial_image_height_cooke_triplet[backend=torch]" time="0.058" /><testcase classname="tests.test_field_types" name="test_paraxial_get_ray_origins[backend=numpy]" time="0.070" /><testcase classname="tests.test_field_types" name="test_paraxial_get_ray_origins[backend=torch]" time="0.074" /><testcase classname="tests.test_field_types" name="test_get_paraxial_object_position[backend=numpy]" time="0.060" /><testcase classname="tests.test_field_types" name="test_get_paraxial_object_position[backend=torch]" time="0.081" /><testcase classname="tests.test_field_types" name="test_get_starting_z_offset[backend=numpy]" time="0.035" /><testcase classname="tests.test_field_types" name="test_get_starting_z_offset[backend=torch]" time="0.036" /><testcase classname="tests.test_fields" name="test_field[backend=numpy-0-0]" time="0.001" /><testcase classname="tests.test_fields" name="test_field[backend=numpy-5.3-8.5]" time="0.001" /><testcase classname="tests.test_fields" name="test_field[backend=numpy-0-4.2]" time="0.000" /><testcase classname="tests.test_fields" name="test_field[backend=torch-0-0]" time="0.001" /><testcase classname="tests.test_fields" name="test_field[backend=torch-5.3-8.5]" time="0.001" /><testcase classname="tests.test_fields" name="test_field[backend=torch-0-4.2]" time="0.001" /><testcase classname="tests.test_fields" name="test_field_group_inputs[backend=numpy]" time="0.001" /><testcase classname="tests.test_fields" name="test_field_group_inputs[backend=torch]" time="0.001" /><testcase classname="tests.test_fields" name="test_field_group_getters[backend=numpy]" time="0.001" /><testcase classname="tests.test_fields" name="test_field_group_getters[backend=torch]" time="0.002" /><testcase classname="tests.test_fields" name="test_field_group_get_vig_factor[backend=numpy]" time="0.002" /><testcase classname="tests.test_fields" name="test_field_group_get_vig_factor[backend=torch]" time="0.001" /><testcase classname="tests.test_fields" name="test_field_group_telecentric[backend=numpy]" time="0.001" /><testcase classname="tests.test_fields" name="test_field_group_telecentric[backend=torch]" time="0.001" /><testcase classname="tests.test_fields" name="test_field_to_dict[backend=numpy]" time="0.001" /><testcase classname="tests.test_fields" name="test_field_to_dict[backend=torch]" time="0.001" /><testcase classname="tests.test_fields" name="test_field_group_to_dict[backend=numpy]" time="0.001" /><testcase classname="tests.test_fields" name="test_field_group_to_dict[backend=torch]" time="0.002" /><testcase classname="tests.test_fields" name="test_field_from_dict[backend=numpy]" time="0.001" /><testcase classname="tests.test_fields" name="test_field_from_dict[backend=torch]" time="0.001" /><testcase classname="tests.test_fields" name="test_field_group_from_dict[backend=numpy]" time="0.001" /><testcase classname="tests.test_fields" name="test_field_group_from_dict[backend=torch]" time="0.001" /><testcase classname="tests.test_fileio.TestZemaxFileSourceHandler" name="test_is_url" time="0.001" /><testcase classname="tests.test_fileio.TestZemaxFileSourceHandler" name="test_is_not_url" time="0.000" /><testcase classname="tests.test_fileio.TestZemaxFileSourceHandler" name="test_get_local_file_url" time="0.010" /><testcase classname="tests.test_fileio.TestZemaxFileSourceHandler" name="test_get_local_file_url_fail" time="0.002" /><testcase classname="tests.test_fileio.TestZemaxFileSourceHandler" name="test_get_local_file_local_path" time="0.001" /><testcase classname="tests.test_fileio.TestZemaxDataParser" name="test_read_fno" time="0.001" /><testcase classname="tests.test_fileio.TestZemaxDataParser" name="test_read_epd" time="0.001" /><testcase classname="tests.test_fileio.TestZemaxDataParser" name="test_read_object_na" time="0.000" /><testcase classname="tests.test_fileio.TestZemaxDataParser" name="test_read_conic" time="0.001" /><testcase classname="tests.test_fileio.TestZemaxDataParser" name="test_read_glass" time="0.013" /><testcase classname="tests.test_fileio.TestZemaxDataParser" name="test_read_stop" time="0.001" /><testcase classname="tests.test_fileio.TestZemaxDataParser" name="test_read_mode_valid" time="0.001" /><testcase classname="tests.test_fileio.TestZemaxDataParser" name="test_read_mode_invalid" time="0.001" /><testcase classname="tests.test_fileio.TestZemaxDataParser" name="test_read_surface_type" time="0.001" /><testcase classname="tests.test_fileio.TestEndToEnd" name="test_load_zemax_file" time="0.118" /><testcase classname="tests.test_fileio.TestEndToEnd" name="test_load_and_convert_asphere" time="0.061" /><testcase classname="tests.test_fileio" name="test_save_load_json_obj" time="0.025" /><testcase classname="tests.test_fileio" name="test_load_invalid_json" time="0.001" /><testcase classname="tests.test_fileio" name="test_save_load_optiland_file" time="0.242" /><testcase classname="tests.test_fileio" name="test_load_legacy_optiland_file_with_field_type" time="0.181" /><testcase classname="tests.test_flip_geometries" name="test_flip_standard_geometry" time="0.000" /><testcase classname="tests.test_flip_geometries" name="test_flip_plane_geometry" time="0.000" /><testcase classname="tests.test_flip_geometries" name="test_flip_biconic_geometry" time="0.001" /><testcase classname="tests.test_flip_geometries" name="test_flip_chebyshev_geometry" time="0.001" /><testcase classname="tests.test_flip_geometries" name="test_flip_even_asphere_geometry" time="0.001" /><testcase classname="tests.test_flip_geometries" name="test_flip_odd_asphere_geometry" time="0.001" /><testcase classname="tests.test_flip_geometries" name="test_flip_polynomial_geometry" time="0.001" /><testcase classname="tests.test_flip_geometries" name="test_flip_toroidal_geometry" time="0.002" /><testcase classname="tests.test_flip_geometries" name="test_flip_zernike_geometry" time="0.001" /><testcase classname="tests.test_flip_geometries" name="test_flip_biconic_zero_radius" time="0.001" /><testcase classname="tests.test_flip_geometries" name="test_flip_toroidal_zero_radius" time="0.001" /><testcase classname="tests.test_flip_geometries" name="test_flip_standard_inf_radius" time="0.001" /><testcase classname="tests.test_flip_geometries" name="test_flip_biconic_inf_radius" time="0.001" /><testcase classname="tests.test_flip_geometries" name="test_flip_toroidal_inf_radius" time="0.000" /><testcase classname="tests.test_geometries" name="test_unknown_geometry[backend=numpy]" time="0.001" /><testcase classname="tests.test_geometries" name="test_unknown_geometry[backend=torch]" time="0.000" /><testcase classname="tests.test_geometries.TestPlane" name="test_str[backend=numpy]" time="0.000" /><testcase classname="tests.test_geometries.TestPlane" name="test_str[backend=torch]" time="0.000" /><testcase classname="tests.test_geometries.TestPlane" name="test_plane_sag[backend=numpy]" time="0.001" /><testcase classname="tests.test_geometries.TestPlane" name="test_plane_sag[backend=torch]" time="0.001" /><testcase classname="tests.test_geometries.TestPlane" name="test_plane_distance[backend=numpy]" time="0.003" /><testcase classname="tests.test_geometries.TestPlane" name="test_plane_distance[backend=torch]" time="0.002" /><testcase classname="tests.test_geometries.TestPlane" name="test_plane_surface_normal[backend=numpy]" time="0.001" /><testcase classname="tests.test_geometries.TestPlane" name="test_plane_surface_normal[backend=torch]" time="0.001" /><testcase classname="tests.test_geometries.TestPlane" name="test_to_dict[backend=numpy]" time="0.001" /><testcase classname="tests.test_geometries.TestPlane" name="test_to_dict[backend=torch]" time="0.001" /><testcase classname="tests.test_geometries.TestPlane" name="test_from_dict[backend=numpy]" time="0.000" /><testcase classname="tests.test_geometries.TestPlane" name="test_from_dict[backend=torch]" time="0.001" /><testcase classname="tests.test_geometries.TestStandardGeometry" name="test_str[backend=numpy]" time="0.001" /><testcase classname="tests.test_geometries.TestStandardGeometry" name="test_str[backend=torch]" time="0.001" /><testcase classname="tests.test_geometries.TestStandardGeometry" name="test_sag_sphere[backend=numpy]" time="0.001" /><testcase classname="tests.test_geometries.TestStandardGeometry" name="test_sag_sphere[backend=torch]" time="0.003" /><testcase classname="tests.test_geometries.TestStandardGeometry" name="test_sag_parabola[backend=numpy]" time="0.001" /><testcase classname="tests.test_geometries.TestStandardGeometry" name="test_sag_parabola[backend=torch]" time="0.002" /><testcase classname="tests.test_geometries.TestStandardGeometry" name="test_sag_conic[backend=numpy]" time="0.001" /><testcase classname="tests.test_geometries.TestStandardGeometry" name="test_sag_conic[backend=torch]" time="0.001" /><testcase classname="tests.test_geometries.TestStandardGeometry" name="test_distance[backend=numpy]" time="0.002" /><testcase classname="tests.test_geometries.TestStandardGeometry" name="test_distance[backend=torch]" time="0.002" /><testcase classname="tests.test_geometries.TestStandardGeometry" name="test_surface_normal[backend=numpy]" time="0.001" /><testcase classname="tests.test_geometries.TestStandardGeometry" name="test_surface_normal[backend=torch]" time="0.001" /><testcase classname="tests.test_geometries.TestStandardGeometry" name="test_to_dict[backend=numpy]" time="0.001" /><testcase classname="tests.test_geometries.TestStandardGeometry" name="test_to_dict[backend=torch]" time="0.001" /><testcase classname="tests.test_geometries.TestStandardGeometry" name="test_from_dict[backend=numpy]" time="0.001" /><testcase classname="tests.test_geometries.TestStandardGeometry" name="test_from_dict[backend=torch]" time="0.001" /><testcase classname="tests.test_geometries.TestStandardGeometry" name="test_From_dict_invalid_dict[backend=numpy]" time="0.002" /><testcase classname="tests.test_geometries.TestStandardGeometry" name="test_From_dict_invalid_dict[backend=torch]" time="0.001" /><testcase classname="tests.test_geometries.TestEvenAsphere" name="test_str[backend=numpy]" time="0.001" /><testcase classname="tests.test_geometries.TestEvenAsphere" name="test_str[backend=torch]" time="0.001" /><testcase classname="tests.test_geometries.TestEvenAsphere" name="test_sag[backend=numpy]" time="0.001" /><testcase classname="tests.test_geometries.TestEvenAsphere" name="test_sag[backend=torch]" time="0.003" /><testcase classname="tests.test_geometries.TestEvenAsphere" name="test_distance[backend=numpy]" time="0.002" /><testcase classname="tests.test_geometries.TestEvenAsphere" name="test_distance[backend=torch]" time="0.007" /><testcase classname="tests.test_geometries.TestEvenAsphere" name="test_surface_normal[backend=numpy]" time="0.001" /><testcase classname="tests.test_geometries.TestEvenAsphere" name="test_surface_normal[backend=torch]" time="0.001" /><testcase classname="tests.test_geometries.TestEvenAsphere" name="test_to_dict[backend=numpy]" time="0.001" /><testcase classname="tests.test_geometries.TestEvenAsphere" name="test_to_dict[backend=torch]" time="0.001" /><testcase classname="tests.test_geometries.TestEvenAsphere" name="test_from_dict[backend=numpy]" time="0.000" /><testcase classname="tests.test_geometries.TestEvenAsphere" name="test_from_dict[backend=torch]" time="0.001" /><testcase classname="tests.test_geometries.TestPolynomialGeometry" name="test_str[backend=numpy]" time="0.001" /><testcase classname="tests.test_geometries.TestPolynomialGeometry" name="test_str[backend=torch]" time="0.001" /><testcase classname="tests.test_geometries.TestPolynomialGeometry" name="test_sag[backend=numpy]" time="0.001" /><testcase classname="tests.test_geometries.TestPolynomialGeometry" name="test_sag[backend=torch]" time="0.002" /><testcase classname="tests.test_geometries.TestPolynomialGeometry" name="test_distance[backend=numpy]" time="0.003" /><testcase classname="tests.test_geometries.TestPolynomialGeometry" name="test_distance[backend=torch]" time="0.016" /><testcase classname="tests.test_geometries.TestPolynomialGeometry" name="test_surface_normal[backend=numpy]" time="0.001" /><testcase classname="tests.test_geometries.TestPolynomialGeometry" name="test_surface_normal[backend=torch]" time="0.002" /><testcase classname="tests.test_geometries.TestPolynomialGeometry" name="test_to_dict[backend=numpy]" time="0.001" /><testcase classname="tests.test_geometries.TestPolynomialGeometry" name="test_to_dict[backend=torch]" time="0.003" /><testcase classname="tests.test_geometries.TestPolynomialGeometry" name="test_from_dict[backend=numpy]" time="0.001" /><testcase classname="tests.test_geometries.TestPolynomialGeometry" name="test_from_dict[backend=torch]" time="0.002" /><testcase classname="tests.test_geometries.TestChebyshevGeometry" name="test_str[backend=numpy]" time="0.001" /><testcase classname="tests.test_geometries.TestChebyshevGeometry" name="test_str[backend=torch]" time="0.001" /><testcase classname="tests.test_geometries.TestChebyshevGeometry" name="test_sag[backend=numpy]" time="0.003" /><testcase classname="tests.test_geometries.TestChebyshevGeometry" name="test_sag[backend=torch]" time="0.010" /><testcase classname="tests.test_geometries.TestChebyshevGeometry" name="test_distance[backend=numpy]" time="0.009" /><testcase classname="tests.test_geometries.TestChebyshevGeometry" name="test_distance[backend=torch]" time="0.026" /><testcase classname="tests.test_geometries.TestChebyshevGeometry" name="test_surface_normal[backend=numpy]" time="0.001" /><testcase classname="tests.test_geometries.TestChebyshevGeometry" name="test_surface_normal[backend=torch]" time="0.004" /><testcase classname="tests.test_geometries.TestChebyshevGeometry" name="test_invalid_input[backend=numpy]" time="0.001" /><testcase classname="tests.test_geometries.TestChebyshevGeometry" name="test_invalid_input[backend=torch]" time="0.001" /><testcase classname="tests.test_geometries.TestChebyshevGeometry" name="test_to_dict[backend=numpy]" time="0.000" /><testcase classname="tests.test_geometries.TestChebyshevGeometry" name="test_to_dict[backend=torch]" time="0.001" /><testcase classname="tests.test_geometries.TestChebyshevGeometry" name="test_from_dict[backend=numpy]" time="0.000" /><testcase classname="tests.test_geometries.TestChebyshevGeometry" name="test_from_dict[backend=torch]" time="0.001" /><testcase classname="tests.test_geometries.TestOddAsphere" name="test_sag[backend=numpy]" time="0.001" /><testcase classname="tests.test_geometries.TestOddAsphere" name="test_sag[backend=torch]" time="0.001" /><testcase classname="tests.test_geometries.TestOddAsphere" name="test_distance[backend=numpy]" time="0.004" /><testcase classname="tests.test_geometries.TestOddAsphere" name="test_distance[backend=torch]" time="0.009" /><testcase classname="tests.test_geometries.TestOddAsphere" name="test_surface_normal[backend=numpy]" time="0.001" /><testcase classname="tests.test_geometries.TestOddAsphere" name="test_surface_normal[backend=torch]" time="0.002" /><testcase classname="tests.test_geometries.TestOddAsphere" name="test_str[backend=numpy]" time="0.000" /><testcase classname="tests.test_geometries.TestOddAsphere" name="test_str[backend=torch]" time="0.001" /><testcase classname="tests.test_geometries.TestZernikeGeometry" name="test_init[backend=numpy-10-expectation0]" time="0.003" /><testcase classname="tests.test_geometries.TestZernikeGeometry" name="test_init[backend=numpy-0-expectation1]" time="0.001" /><testcase classname="tests.test_geometries.TestZernikeGeometry" name="test_init[backend=numpy--5-expectation2]" time="0.001" /><testcase classname="tests.test_geometries.TestZernikeGeometry" name="test_init[backend=torch-10-expectation0]" time="0.001" /><testcase classname="tests.test_geometries.TestZernikeGeometry" name="test_init[backend=torch-0-expectation1]" time="0.001" /><testcase classname="tests.test_geometries.TestZernikeGeometry" name="test_init[backend=torch--5-expectation2]" time="0.001" /><testcase classname="tests.test_geometries.TestZernikeGeometry" name="test_get_coefficients[backend=numpy]" time="0.001" /><testcase classname="tests.test_geometries.TestZernikeGeometry" name="test_get_coefficients[backend=torch]" time="0.001" /><testcase classname="tests.test_geometries.TestZernikeGeometry" name="test_set_coefficients[backend=numpy]" time="0.001" /><testcase classname="tests.test_geometries.TestZernikeGeometry" name="test_set_coefficients[backend=torch]" time="0.001" /><testcase classname="tests.test_geometries.TestZernikeGeometry" name="test_str[backend=numpy]" time="0.001" /><testcase classname="tests.test_geometries.TestZernikeGeometry" name="test_str[backend=torch]" time="0.001" /><testcase classname="tests.test_geometries.TestZernikeGeometry" name="test_sag[backend=numpy-standard-coefficients0]" time="0.004" /><testcase classname="tests.test_geometries.TestZernikeGeometry" name="test_sag[backend=numpy-noll-coefficients1]" time="0.002" /><testcase classname="tests.test_geometries.TestZernikeGeometry" name="test_sag[backend=numpy-fringe-coefficients2]" time="0.002" /><testcase classname="tests.test_geometries.TestZernikeGeometry" name="test_sag[backend=torch-standard-coefficients0]" time="0.032" /><testcase classname="tests.test_geometries.TestZernikeGeometry" name="test_sag[backend=torch-noll-coefficients1]" time="0.012" /><testcase classname="tests.test_geometries.TestZernikeGeometry" name="test_sag[backend=torch-fringe-coefficients2]" time="0.035" /><testcase classname="tests.test_geometries.TestZernikeGeometry" name="test_surface_normal[backend=numpy-standard-coefficients0]" time="0.003" /><testcase classname="tests.test_geometries.TestZernikeGeometry" name="test_surface_normal[backend=numpy-noll-coefficients1]" time="0.002" /><testcase classname="tests.test_geometries.TestZernikeGeometry" name="test_surface_normal[backend=numpy-fringe-coefficients2]" time="0.002" /><testcase classname="tests.test_geometries.TestZernikeGeometry" name="test_surface_normal[backend=torch-standard-coefficients0]" time="0.017" /><testcase classname="tests.test_geometries.TestZernikeGeometry" name="test_surface_normal[backend=torch-noll-coefficients1]" time="0.009" /><testcase classname="tests.test_geometries.TestZernikeGeometry" name="test_surface_normal[backend=torch-fringe-coefficients2]" time="0.018" /><testcase classname="tests.test_geometries.TestZernikeGeometry" name="test_validate_inputs[backend=numpy-x0-y0-1-expectation0]" time="0.002" /><testcase classname="tests.test_geometries.TestZernikeGeometry" name="test_validate_inputs[backend=numpy-x1-y1-1-expectation1]" time="0.002" /><testcase classname="tests.test_geometries.TestZernikeGeometry" name="test_validate_inputs[backend=numpy--1.1-0-1-expectation2]" time="0.001" /><testcase classname="tests.test_geometries.TestZernikeGeometry" name="test_validate_inputs[backend=numpy-0--1.1-1-expectation3]" time="0.001" /><testcase classname="tests.test_geometries.TestZernikeGeometry" name="test_validate_inputs[backend=numpy-1.1-0-1-expectation4]" time="0.001" /><testcase classname="tests.test_geometries.TestZernikeGeometry" name="test_validate_inputs[backend=numpy-0-1.1-1-expectation5]" time="0.001" /><testcase classname="tests.test_geometries.TestZernikeGeometry" name="test_validate_inputs[backend=torch-x0-y0-1-expectation0]" time="0.002" /><testcase classname="tests.test_geometries.TestZernikeGeometry" name="test_validate_inputs[backend=torch-x1-y1-1-expectation1]" time="0.002" /><testcase classname="tests.test_geometries.TestZernikeGeometry" name="test_validate_inputs[backend=torch--1.1-0-1-expectation2]" time="0.001" /><testcase classname="tests.test_geometries.TestZernikeGeometry" name="test_validate_inputs[backend=torch-0--1.1-1-expectation3]" time="0.001" /><testcase classname="tests.test_geometries.TestZernikeGeometry" name="test_validate_inputs[backend=torch-1.1-0-1-expectation4]" time="0.001" /><testcase classname="tests.test_geometries.TestZernikeGeometry" name="test_validate_inputs[backend=torch-0-1.1-1-expectation5]" time="0.002" /><testcase classname="tests.test_geometries.TestZernikeGeometry" name="test_to_dict[backend=numpy]" time="0.001" /><testcase classname="tests.test_geometries.TestZernikeGeometry" name="test_to_dict[backend=torch]" time="0.001" /><testcase classname="tests.test_geometries.TestZernikeGeometry" name="test_from_dict[backend=numpy]" time="0.001" /><testcase classname="tests.test_geometries.TestZernikeGeometry" name="test_from_dict[backend=torch]" time="0.002" /><testcase classname="tests.test_geometries.TestToroidalGeometry" name="test_toroidal_str[backend=numpy]" time="0.001" /><testcase classname="tests.test_geometries.TestToroidalGeometry" name="test_toroidal_str[backend=torch]" time="0.002" /><testcase classname="tests.test_geometries.TestToroidalGeometry" name="test_toroidal_sag_vertex[backend=numpy]" time="0.002" /><testcase classname="tests.test_geometries.TestToroidalGeometry" name="test_toroidal_sag_vertex[backend=torch]" time="0.004" /><testcase classname="tests.test_geometries.TestToroidalGeometry" name="test_toroidal_normal_vertex[backend=numpy]" time="0.003" /><testcase classname="tests.test_geometries.TestToroidalGeometry" name="test_toroidal_normal_vertex[backend=torch]" time="0.004" /><testcase classname="tests.test_geometries.TestToroidalGeometry" name="test_toroidal_sag_known_points[backend=numpy]" time="0.002" /><testcase classname="tests.test_geometries.TestToroidalGeometry" name="test_toroidal_sag_known_points[backend=torch]" time="0.003" /><testcase classname="tests.test_geometries.TestToroidalGeometry" name="test_toroidal_normal_known_points[backend=numpy]" time="0.002" /><testcase classname="tests.test_geometries.TestToroidalGeometry" name="test_toroidal_normal_known_points[backend=torch]" time="0.004" /><testcase classname="tests.test_geometries.TestToroidalGeometry" name="test_cylinder_x_sag[backend=numpy]" time="0.001" /><testcase classname="tests.test_geometries.TestToroidalGeometry" name="test_cylinder_x_sag[backend=torch]" time="0.002" /><testcase classname="tests.test_geometries.TestToroidalGeometry" name="test_cylinder_y_sag[backend=numpy]" time="0.003" /><testcase classname="tests.test_geometries.TestToroidalGeometry" name="test_cylinder_y_sag[backend=torch]" time="0.003" /><testcase classname="tests.test_geometries.TestToroidalGeometry" name="test_toroid_no_x_curvature_sag[backend=numpy]" time="0.002" /><testcase classname="tests.test_geometries.TestToroidalGeometry" name="test_toroid_no_x_curvature_sag[backend=torch]" time="0.002" /><testcase classname="tests.test_geometries.TestToroidalGeometry" name="test_toroid_no_y_curvature_sag[backend=numpy]" time="0.001" /><testcase classname="tests.test_geometries.TestToroidalGeometry" name="test_toroid_no_y_curvature_sag[backend=torch]" time="0.001" /><testcase classname="tests.test_geometries.TestToroidalGeometry" name="test_toroidal_sag_vs_zemax[backend=numpy]" time="0.001" /><testcase classname="tests.test_geometries.TestToroidalGeometry" name="test_toroidal_sag_vs_zemax[backend=torch]" time="0.003" /><testcase classname="tests.test_geometries.TestToroidalGeometry" name="test_toroidal_ray_tracing_comparison[backend=numpy]" time="0.005" /><testcase classname="tests.test_geometries.TestToroidalGeometry" name="test_toroidal_ray_tracing_comparison[backend=torch]" time="0.013" /><testcase classname="tests.test_geometries.TestToroidalGeometry" name="test_toroidal_ray_tracing_comparison_negRx[backend=numpy]" time="0.018" /><testcase classname="tests.test_geometries.TestToroidalGeometry" name="test_toroidal_ray_tracing_comparison_negRx[backend=torch]" time="0.031" /><testcase classname="tests.test_geometries.TestToroidalGeometry" name="test_toroidal_to_dict[backend=numpy]" time="0.001" /><testcase classname="tests.test_geometries.TestToroidalGeometry" name="test_toroidal_to_dict[backend=torch]" time="0.001" /><testcase classname="tests.test_geometries.TestToroidalGeometry" name="test_toroidal_from_dict[backend=numpy]" time="0.001" /><testcase classname="tests.test_geometries.TestToroidalGeometry" name="test_toroidal_from_dict[backend=torch]" time="0.001" /><testcase classname="tests.test_geometries.TestToroidalGeometry" name="test_toroidal_from_dict_invalid[backend=numpy]" time="0.001" /><testcase classname="tests.test_geometries.TestToroidalGeometry" name="test_toroidal_from_dict_invalid[backend=torch]" time="0.001" /><testcase classname="tests.test_geometries.TestToroidalGeometry" name="test_inf_radius_intersect_sphere_normal_incidence[backend=numpy]" time="0.003" /><testcase classname="tests.test_geometries.TestToroidalGeometry" name="test_inf_radius_intersect_sphere_normal_incidence[backend=torch]" time="0.002" /><testcase classname="tests.test_geometries.TestBiconicGeometry" name="test_str[backend=numpy]" time="0.001" /><testcase classname="tests.test_geometries.TestBiconicGeometry" name="test_str[backend=torch]" time="0.004" /><testcase classname="tests.test_geometries.TestBiconicGeometry" name="test_sag_vertex[backend=numpy]" time="0.002" /><testcase classname="tests.test_geometries.TestBiconicGeometry" name="test_sag_vertex[backend=torch]" time="0.003" /><testcase classname="tests.test_geometries.TestBiconicGeometry" name="test_sag_finite_radii[backend=numpy]" time="0.002" /><testcase classname="tests.test_geometries.TestBiconicGeometry" name="test_sag_finite_radii[backend=torch]" time="0.003" /><testcase classname="tests.test_geometries.TestBiconicGeometry" name="test_sag_rx_infinite[backend=numpy]" time="0.001" /><testcase classname="tests.test_geometries.TestBiconicGeometry" name="test_sag_rx_infinite[backend=torch]" time="0.004" /><testcase classname="tests.test_geometries.TestBiconicGeometry" name="test_sag_ry_infinite[backend=numpy]" time="0.002" /><testcase classname="tests.test_geometries.TestBiconicGeometry" name="test_sag_ry_infinite[backend=torch]" time="0.003" /><testcase classname="tests.test_geometries.TestBiconicGeometry" name="test_sag_both_infinite_plane[backend=numpy]" time="0.001" /><testcase classname="tests.test_geometries.TestBiconicGeometry" name="test_sag_both_infinite_plane[backend=torch]" time="0.001" /><testcase classname="tests.test_geometries.TestBiconicGeometry" name="test_sag_with_conics[backend=numpy]" time="0.001" /><testcase classname="tests.test_geometries.TestBiconicGeometry" name="test_sag_with_conics[backend=torch]" time="0.003" /><testcase classname="tests.test_geometries.TestBiconicGeometry" name="test_sag_array_input[backend=numpy]" time="0.001" /><testcase classname="tests.test_geometries.TestBiconicGeometry" name="test_sag_array_input[backend=torch]" time="0.001" /><testcase classname="tests.test_geometries.TestBiconicGeometry" name="test_surface_normal_vertex[backend=numpy]" time="0.001" /><testcase classname="tests.test_geometries.TestBiconicGeometry" name="test_surface_normal_vertex[backend=torch]" time="0.001" /><testcase classname="tests.test_geometries.TestBiconicGeometry" name="test_surface_normal_spherical_case[backend=numpy]" time="0.001" /><testcase classname="tests.test_geometries.TestBiconicGeometry" name="test_surface_normal_spherical_case[backend=torch]" time="0.001" /><testcase classname="tests.test_geometries.TestBiconicGeometry" name="test_surface_normal_cylindrical_rx_inf[backend=numpy]" time="0.002" /><testcase classname="tests.test_geometries.TestBiconicGeometry" name="test_surface_normal_cylindrical_rx_inf[backend=torch]" time="0.003" /><testcase classname="tests.test_geometries.TestBiconicGeometry" name="test_surface_normal_array_input[backend=numpy]" time="0.001" /><testcase classname="tests.test_geometries.TestBiconicGeometry" name="test_surface_normal_array_input[backend=torch]" time="0.003" /><testcase classname="tests.test_geometries.TestBiconicGeometry" name="test_distance_simple[backend=numpy]" time="0.001" /><testcase classname="tests.test_geometries.TestBiconicGeometry" name="test_distance_simple[backend=torch]" time="0.003" /><testcase classname="tests.test_geometries.TestBiconicGeometry" name="test_distance_planar_biconic[backend=numpy]" time="0.001" /><testcase classname="tests.test_geometries.TestBiconicGeometry" name="test_distance_planar_biconic[backend=torch]" time="0.003" /><testcase classname="tests.test_geometries.TestBiconicGeometry" name="test_to_dict_from_dict[backend=numpy]" time="0.001" /><testcase classname="tests.test_geometries.TestBiconicGeometry" name="test_to_dict_from_dict[backend=torch]" time="0.001" /><testcase classname="tests.test_geometries.TestBiconicGeometry" name="test_from_dict_missing_keys[backend=numpy]" time="0.001" /><testcase classname="tests.test_geometries.TestBiconicGeometry" name="test_from_dict_missing_keys[backend=torch]" time="0.001" /><testcase classname="tests.test_geometries.TestBiconicGeometry" name="test_from_dict_default_conics_tol_max_iter[backend=numpy]" time="0.002" /><testcase classname="tests.test_geometries.TestBiconicGeometry" name="test_from_dict_default_conics_tol_max_iter[backend=torch]" time="0.002" /><testcase classname="tests.test_geometries.TestForbesQbfsGeometry" name="test_str[backend=numpy]" time="0.001" /><testcase classname="tests.test_geometries.TestForbesQbfsGeometry" name="test_str[backend=torch]" time="0.001" /><testcase classname="tests.test_geometries.TestForbesQbfsGeometry" name="test_sag_with_infinite_radius[backend=numpy]" time="0.001" /><testcase classname="tests.test_geometries.TestForbesQbfsGeometry" name="test_sag_with_infinite_radius[backend=torch]" time="0.002" /><testcase classname="tests.test_geometries.TestForbesQbfsGeometry" name="test_sag_outside_norm_radius[backend=numpy]" time="0.002" /><testcase classname="tests.test_geometries.TestForbesQbfsGeometry" name="test_sag_outside_norm_radius[backend=torch]" time="0.007" /><testcase classname="tests.test_geometries.TestForbesQbfsGeometry" name="test_analytical_normal_vs_autodiff[backend=numpy]" time="0.001"><skipped type="pytest.skip" message="This test requires both numpy and torch backends to compare.">C:\Users\golde\code\optiland\tests\test_geometries.py:2193: This test requires both numpy and torch backends to compare.</skipped></testcase><testcase classname="tests.test_geometries.TestForbesQbfsGeometry" name="test_analytical_normal_vs_autodiff[backend=torch]" time="1.751" /><testcase classname="tests.test_geometries.TestForbesQbfsGeometry" name="test_sag_vs_zemax[backend=numpy]" time="0.002" /><testcase classname="tests.test_geometries.TestForbesQbfsGeometry" name="test_sag_vs_zemax[backend=torch]" time="0.004" /><testcase classname="tests.test_geometries.TestForbesQbfsGeometry" name="test_surface_normal_at_vertex[backend=numpy]" time="0.002" /><testcase classname="tests.test_geometries.TestForbesQbfsGeometry" name="test_surface_normal_at_vertex[backend=torch]" time="0.005" /><testcase classname="tests.test_geometries.TestForbesQbfsGeometry" name="test_tracing[backend=numpy]" time="0.061" /><testcase classname="tests.test_geometries.TestForbesQbfsGeometry" name="test_tracing[backend=torch]" time="0.127" /><testcase classname="tests.test_geometries.TestForbesQbfsGeometry" name="test_ray_tracing_autodiff_off_axis[torch]" time="0.055" /><testcase classname="tests.test_geometries.TestForbesQbfsGeometry" name="test_ray_tracing_autodiff_at_vertex[torch]" time="0.027" /><testcase classname="tests.test_geometries.TestForbesQbfsGeometry" name="test_forbes_qbfs_autodiff_inplace_modification[torch]" time="0.059" /><testcase classname="tests.test_geometries.TestForbesQbfsGeometry" name="test_to_dict_from_dict[backend=numpy]" time="0.002" /><testcase classname="tests.test_geometries.TestForbesQbfsGeometry" name="test_to_dict_from_dict[backend=torch]" time="0.002" /><testcase classname="tests.test_geometries.TestForbesQ2dGeometry" name="test_str[backend=numpy]" time="0.001" /><testcase classname="tests.test_geometries.TestForbesQ2dGeometry" name="test_str[backend=torch]" time="0.002" /><testcase classname="tests.test_geometries.TestForbesQ2dGeometry" name="test_init_no_coeffs[backend=numpy]" time="0.002" /><testcase classname="tests.test_geometries.TestForbesQ2dGeometry" name="test_init_no_coeffs[backend=torch]" time="0.002" /><testcase classname="tests.test_geometries.TestForbesQ2dGeometry" name="test_sag_symmetric_terms_only[backend=numpy]" time="0.002" /><testcase classname="tests.test_geometries.TestForbesQ2dGeometry" name="test_sag_symmetric_terms_only[backend=torch]" time="0.006" /><testcase classname="tests.test_geometries.TestForbesQ2dGeometry" name="test_sag_with_sine_term[backend=numpy]" time="0.001" /><testcase classname="tests.test_geometries.TestForbesQ2dGeometry" name="test_sag_with_sine_term[backend=torch]" time="0.003" /><testcase classname="tests.test_geometries.TestForbesQ2dGeometry" name="test_prepare_coeffs[backend=numpy]" time="0.003" /><testcase classname="tests.test_geometries.TestForbesQ2dGeometry" name="test_prepare_coeffs[backend=torch]" time="0.003" /><testcase classname="tests.test_geometries.TestForbesQ2dGeometry" name="test_gradient_stability_at_vertex[torch]" time="0.062" /><testcase classname="tests.test_geometries.TestForbesQ2dGeometry" name="test_to_dict_from_dict[backend=numpy]" time="0.002" /><testcase classname="tests.test_geometries.TestForbesQ2dGeometry" name="test_to_dict_from_dict[backend=torch]" time="0.001" /><testcase classname="tests.test_geometries.TestForbesValidation" name="test_qpoly_qnm_against_paper_formulas[2-0-0.5-0.7071067811865475]" time="0.001" /><testcase classname="tests.test_geometries.TestForbesValidation" name="test_qpoly_qnm_against_paper_formulas[1-1-0.25-2.0647416048350555]" time="0.001" /><testcase classname="tests.test_geometries.TestForbesValidation" name="test_qpoly_qnm_against_paper_formulas[0-1-0.75-0.22941573387056174]" time="0.002"><skipped type="pytest.skip" message="Skipping direct Qnm validation; covered by full sag test.">C:\Users\golde\code\optiland\tests\test_geometries.py:2684: Skipping direct Qnm validation; covered by full sag test.</skipped></testcase><testcase classname="tests.test_geometries.TestForbesValidation" name="test_qnm_values_against_analytical_formula[backend=numpy]" time="0.001" /><testcase classname="tests.test_geometries.TestForbesValidation" name="test_qnm_values_against_analytical_formula[backend=torch]" time="0.004" /><testcase classname="tests.test_geometries.TestForbesValidation" name="test_q2d_normal_against_numerical_derivative" time="0.002" /><testcase classname="tests.test_geometries.TestForbesValidation" name="test_complex_ray_tracing[backend=numpy]" time="0.050" /><testcase classname="tests.test_geometries.TestForbesValidation" name="test_complex_ray_tracing[backend=torch]" time="0.168" /><testcase classname="tests.test_gradient_material" name="test_gradient_material_initialization" time="0.001" /><testcase classname="tests.test_gradient_material" name="test_immutability" time="0.001" /><testcase classname="tests.test_gradient_material" name="test_get_index_on_axis" time="0.002" /><testcase classname="tests.test_gradient_material" name="test_get_index_off_axis" time="0.001" /><testcase classname="tests.test_gradient_material" name="test_get_gradient_on_axis" time="0.002" /><testcase classname="tests.test_gradient_material" name="test_get_gradient_off_axis" time="0.002" /><testcase classname="tests.test_gradient_material" name="test_get_index_and_gradient" time="0.001" /><testcase classname="tests.test_gradient_material" name="test_icontract_invariant_violation" time="0.018" /><testcase classname="tests.test_gradient_material" name="test_icontract_require_violation" time="0.006" /><testcase classname="tests.test_gradient_propagation" name="test_propagate_through_radial_grin_lens" time="0.075" /><testcase classname="tests.test_gradient_surface" name="test_gradient_boundary_surface_inheritance" time="0.001" /><testcase classname="tests.test_gradient_surface" name="test_gradient_boundary_surface_default_instantiation" time="0.001" /><testcase classname="tests.test_gradient_surface" name="test_gradient_boundary_surface_specific_instantiation" time="0.001" /><testcase classname="tests.test_gradient_surface" name="test_gradient_boundary_surface_is_a_marker_type" time="0.001" /><testcase classname="tests.test_grating" name="test_flat_grating_transmission[backend=numpy]" time="0.029" /><testcase classname="tests.test_grating" name="test_flat_grating_transmission[backend=torch]" time="0.088" /><testcase classname="tests.test_grating" name="test_curved_grating_transmission[backend=numpy]" time="0.045" /><testcase classname="tests.test_grating" name="test_curved_grating_transmission[backend=torch]" time="0.147" /><testcase classname="tests.test_grating" name="test_curved_grating_reflection[backend=numpy]" time="0.009" /><testcase classname="tests.test_grating" name="test_curved_grating_reflection[backend=torch]" time="0.051" /><testcase classname="tests.test_grating" name="test_paraxial_flat_grating_transmission[backend=numpy]" time="0.023" /><testcase classname="tests.test_grating" name="test_paraxial_flat_grating_transmission[backend=torch]" time="0.050" /><testcase classname="tests.test_huygens_mtf.TestHuygensMTF" name="test_backend_not_numpy_raises" time="0.082" /><testcase classname="tests.test_huygens_mtf.TestHuygensMTF" name="test_init_sets_attributes_cutoff" time="4.301" /><testcase classname="tests.test_huygens_mtf.TestHuygensMTF" name="test_init_non_primary_wavelength" time="1.092" /><testcase classname="tests.test_huygens_mtf.TestHuygensMTF" name="test_init_with_numeric_max_freq" time="1.050" /><testcase classname="tests.test_huygens_mtf.TestHuygensMTF" name="test_get_fno" time="0.931" /><testcase classname="tests.test_huygens_mtf.TestHuygensMTF" name="test_calculate_psf_stores_data" time="1.198" /><testcase classname="tests.test_huygens_mtf.TestHuygensMTF" name="test_generate_mtf_data_normalization" time="0.989" /><testcase classname="tests.test_huygens_mtf.TestHuygensMTF" name="test_generate_mtf_data_divide_by_zero" time="1.092" /><testcase classname="tests.test_huygens_mtf.TestHuygensMTF" name="test_plot_field_mtf_runs" time="1.088" /><testcase classname="tests.test_huygens_mtf.TestHuygensMTF" name="test_get_mtf_units_valid_and_invalid" time="1.153" /><testcase classname="tests.test_huygens_mtf.TestHuygensMTF" name="test_integration_with_doublegauss" time="0.560" /><testcase classname="tests.test_huygens_psf.TestHuygensPSF" name="test_huygens_psf_initialization[field0-cooke_triplet_optic]" time="0.118" /><testcase classname="tests.test_huygens_psf.TestHuygensPSF" name="test_huygens_psf_initialization[field0-double_gauss_optic]" time="0.194" /><testcase classname="tests.test_huygens_psf.TestHuygensPSF" name="test_huygens_psf_initialization[field0-reverse_telephoto_optic]" time="0.385" /><testcase classname="tests.test_huygens_psf.TestHuygensPSF" name="test_huygens_psf_initialization[field1-cooke_triplet_optic]" time="0.083" /><testcase classname="tests.test_huygens_psf.TestHuygensPSF" name="test_huygens_psf_initialization[field1-double_gauss_optic]" time="0.180" /><testcase classname="tests.test_huygens_psf.TestHuygensPSF" name="test_huygens_psf_initialization[field1-reverse_telephoto_optic]" time="0.150" /><testcase classname="tests.test_huygens_psf.TestHuygensPSF" name="test_huygens_psf_initialization[field2-cooke_triplet_optic]" time="0.093" /><testcase classname="tests.test_huygens_psf.TestHuygensPSF" name="test_huygens_psf_initialization[field2-double_gauss_optic]" time="0.185" /><testcase classname="tests.test_huygens_psf.TestHuygensPSF" name="test_huygens_psf_initialization[field2-reverse_telephoto_optic]" time="0.121" /><testcase classname="tests.test_huygens_psf.TestHuygensPSF" name="test_huygens_psf_backend_check" time="0.002" /><testcase classname="tests.test_huygens_psf.TestHuygensPSF" name="test_get_image_extent[cooke_triplet_optic]" time="0.078" /><testcase classname="tests.test_huygens_psf.TestHuygensPSF" name="test_get_image_extent[double_gauss_optic]" time="0.163" /><testcase classname="tests.test_huygens_psf.TestHuygensPSF" name="test_get_image_extent[reverse_telephoto_optic]" time="0.108" /><testcase classname="tests.test_huygens_psf.TestHuygensPSF" name="test_get_image_coordinates[cooke_triplet_optic]" time="0.084" /><testcase classname="tests.test_huygens_psf.TestHuygensPSF" name="test_get_image_coordinates[double_gauss_optic]" time="0.137" /><testcase classname="tests.test_huygens_psf.TestHuygensPSF" name="test_get_image_coordinates[reverse_telephoto_optic]" time="0.112" /><testcase classname="tests.test_huygens_psf.TestHuygensPSF" name="test_compute_psf_properties_and_normalization[cooke_triplet_optic]" time="3.068" /><testcase classname="tests.test_huygens_psf.TestHuygensPSF" name="test_compute_psf_properties_and_normalization[double_gauss_optic]" time="4.559" /><testcase classname="tests.test_huygens_psf.TestHuygensPSF" name="test_compute_psf_properties_and_normalization[reverse_telephoto_optic]" time="4.536" /><testcase classname="tests.test_huygens_psf.TestHuygensPSF" name="test_strehl_ratio_general[field0-0.05-cooke_triplet_optic]" time="6.250" /><testcase classname="tests.test_huygens_psf.TestHuygensPSF" name="test_strehl_ratio_general[field0-0.05-double_gauss_optic]" time="6.201" /><testcase classname="tests.test_huygens_psf.TestHuygensPSF" name="test_strehl_ratio_general[field0-0.05-reverse_telephoto_optic]" time="8.414" /><testcase classname="tests.test_huygens_psf.TestHuygensPSF" name="test_strehl_ratio_general[field1-0.005-cooke_triplet_optic]" time="12.227" /><testcase classname="tests.test_huygens_psf.TestHuygensPSF" name="test_strehl_ratio_general[field1-0.005-double_gauss_optic]" time="13.102" /><testcase classname="tests.test_huygens_psf.TestHuygensPSF" name="test_strehl_ratio_general[field1-0.005-reverse_telephoto_optic]" time="3.190" /><testcase classname="tests.test_huygens_psf.TestHuygensPSF" name="test_strehl_ratio_specific_values" time="16.550" /><testcase classname="tests.test_huygens_psf.TestHuygensPSF" name="test_get_psf_units[cooke_triplet_optic]" time="0.067" /><testcase classname="tests.test_huygens_psf.TestHuygensPSF" name="test_get_psf_units[double_gauss_optic]" time="0.131" /><testcase classname="tests.test_huygens_psf.TestHuygensPSF" name="test_get_psf_units[reverse_telephoto_optic]" time="0.099" /><testcase classname="tests.test_huygens_psf.TestHuygensPSF" name="test_view_runs_without_error[True-2d-cooke_triplet_optic]" time="0.123" /><testcase classname="tests.test_huygens_psf.TestHuygensPSF" name="test_view_runs_without_error[True-2d-double_gauss_optic]" time="0.145" /><testcase classname="tests.test_huygens_psf.TestHuygensPSF" name="test_view_runs_without_error[True-2d-reverse_telephoto_optic]" time="0.121" /><testcase classname="tests.test_huygens_psf.TestHuygensPSF" name="test_view_runs_without_error[True-3d-cooke_triplet_optic]" time="0.169" /><testcase classname="tests.test_huygens_psf.TestHuygensPSF" name="test_view_runs_without_error[True-3d-double_gauss_optic]" time="0.173" /><testcase classname="tests.test_huygens_psf.TestHuygensPSF" name="test_view_runs_without_error[True-3d-reverse_telephoto_optic]" time="0.485" /><testcase classname="tests.test_huygens_psf.TestHuygensPSF" name="test_view_runs_without_error[False-2d-cooke_triplet_optic]" time="0.070" /><testcase classname="tests.test_huygens_psf.TestHuygensPSF" name="test_view_runs_without_error[False-2d-double_gauss_optic]" time="0.128" /><testcase classname="tests.test_huygens_psf.TestHuygensPSF" name="test_view_runs_without_error[False-2d-reverse_telephoto_optic]" time="0.119" /><testcase classname="tests.test_huygens_psf.TestHuygensPSF" name="test_view_runs_without_error[False-3d-cooke_triplet_optic]" time="0.195" /><testcase classname="tests.test_huygens_psf.TestHuygensPSF" name="test_view_runs_without_error[False-3d-double_gauss_optic]" time="0.175" /><testcase classname="tests.test_huygens_psf.TestHuygensPSF" name="test_view_runs_without_error[False-3d-reverse_telephoto_optic]" time="0.203" /><testcase classname="tests.test_huygens_psf.TestHuygensPSF" name="test_view_invalid_projection" time="0.089" /><testcase classname="tests.test_huygens_psf.TestHuygensPSF" name="test_view_annotate_sampling[2d]" time="0.133" /><testcase classname="tests.test_huygens_psf.TestHuygensPSF" name="test_view_annotate_sampling[3d]" time="0.217" /><testcase classname="tests.test_huygens_psf.TestHuygensPSF" name="test_view_oversampling[2d]" time="0.116" /><testcase classname="tests.test_huygens_psf.TestHuygensPSF" name="test_view_oversampling[3d]" time="0.233" /><testcase classname="tests.test_huygens_psf.TestHuygensPSF" name="test_get_normalization_value_positive[cooke_triplet_optic]" time="0.055" /><testcase classname="tests.test_huygens_psf.TestHuygensPSF" name="test_get_normalization_value_positive[double_gauss_optic]" time="0.114" /><testcase classname="tests.test_huygens_psf.TestHuygensPSF" name="test_get_normalization_value_positive[reverse_telephoto_optic]" time="0.092" /><testcase classname="tests.test_huygens_psf.TestHuygensPSF" name="test_view_psf_not_computed_error_case_not_directly_triggerable" time="0.060" /><testcase classname="tests.test_huygens_psf.TestHuygensPSF" name="test_strehl_ratio_psf_not_computed_error_case_not_directly_triggerable" time="0.065" /><testcase classname="tests.test_huygens_psf.TestHuygensPSF" name="test_pixel_pitch_override" time="0.067" /><testcase classname="tests.test_image_surface" name="test_initialization[backend=numpy]" time="0.002" /><testcase classname="tests.test_image_surface" name="test_initialization[backend=torch]" time="0.002" /><testcase classname="tests.test_image_surface" name="test_trace_paraxial[backend=numpy]" time="0.002" /><testcase classname="tests.test_image_surface" name="test_trace_paraxial[backend=torch]" time="0.003" /><testcase classname="tests.test_image_surface" name="test_interact[backend=numpy]" time="0.002" /><testcase classname="tests.test_image_surface" name="test_interact[backend=torch]" time="0.002" /><testcase classname="tests.test_jones.TestJonesFresnel" name="test_normal_incidence[backend=numpy]" time="0.002" /><testcase classname="tests.test_jones.TestJonesFresnel" name="test_normal_incidence[backend=torch]" time="0.004" /><testcase classname="tests.test_jones.TestJonesFresnel" name="test_non_normal_incidence[backend=numpy]" time="0.003" /><testcase classname="tests.test_jones.TestJonesFresnel" name="test_non_normal_incidence[backend=torch]" time="0.007" /><testcase classname="tests.test_jones" name="test_jones_polarizer_H[backend=numpy]" time="0.001" /><testcase classname="tests.test_jones" name="test_jones_polarizer_H[backend=torch]" time="0.002" /><testcase classname="tests.test_jones" name="test_jones_polarizer_V[backend=numpy]" time="0.001" /><testcase classname="tests.test_jones" name="test_jones_polarizer_V[backend=torch]" time="0.002" /><testcase classname="tests.test_jones" name="test_jones_polarizer_L45[backend=numpy]" time="0.001" /><testcase classname="tests.test_jones" name="test_jones_polarizer_L45[backend=torch]" time="0.003" /><testcase classname="tests.test_jones" name="test_jones_polarizer_L135[backend=numpy]" time="0.001" /><testcase classname="tests.test_jones" name="test_jones_polarizer_L135[backend=torch]" time="0.002" /><testcase classname="tests.test_jones" name="test_jones_polarizer_rcp[backend=numpy]" time="0.001" /><testcase classname="tests.test_jones" name="test_jones_polarizer_rcp[backend=torch]" time="0.003" /><testcase classname="tests.test_jones" name="test_jones_polarizer_lcp[backend=numpy]" time="0.001" /><testcase classname="tests.test_jones" name="test_jones_polarizer_lcp[backend=torch]" time="0.003" /><testcase classname="tests.test_jones" name="test_jones_linear_diattenuator[backend=numpy]" time="0.002" /><testcase classname="tests.test_jones" name="test_jones_linear_diattenuator[backend=torch]" time="0.008" /><testcase classname="tests.test_jones" name="test_jones_linear_retarder[backend=numpy]" time="0.004" /><testcase classname="tests.test_jones" name="test_jones_linear_retarder[backend=torch]" time="0.010" /><testcase classname="tests.test_jones" name="test_jones_quarter_wave_retarder[backend=numpy]" time="0.002" /><testcase classname="tests.test_jones" name="test_jones_quarter_wave_retarder[backend=torch]" time="0.006" /><testcase classname="tests.test_jones" name="test_jones_half_wave_retarder[backend=numpy]" time="0.003" /><testcase classname="tests.test_jones" name="test_jones_half_wave_retarder[backend=torch]" time="0.006" /><testcase classname="tests.test_material_thermal.TestMaterialFileThermal" name="test_nair_calculation[backend=numpy]" time="0.019" /><testcase classname="tests.test_material_thermal.TestMaterialFileThermal" name="test_nair_calculation[backend=torch]" time="0.023" /><testcase classname="tests.test_material_thermal.TestMaterialFileThermal" name="test_no_correction_if_temp_is_none[backend=numpy]" time="0.024" /><testcase classname="tests.test_material_thermal.TestMaterialFileThermal" name="test_no_correction_if_temp_is_none[backend=torch]" time="0.018" /><testcase classname="tests.test_material_thermal.TestMaterialFileThermal" name="test_no_correction_if_no_thermal_data[backend=numpy]" time="0.027" /><testcase classname="tests.test_material_thermal.TestMaterialFileThermal" name="test_no_correction_if_no_thermal_data[backend=torch]" time="0.023" /><testcase classname="tests.test_material_thermal.TestMaterialFileThermal" name="test_correction_with_temp_and_default_pressure[backend=numpy]" time="0.023" /><testcase classname="tests.test_material_thermal.TestMaterialFileThermal" name="test_correction_with_temp_and_default_pressure[backend=torch]" time="0.022" /><testcase classname="tests.test_material_thermal.TestMaterialFileThermal" name="test_correction_at_reference_temp[backend=numpy]" time="0.020" /><testcase classname="tests.test_material_thermal.TestMaterialFileThermal" name="test_correction_at_reference_temp[backend=torch]" time="0.024" /><testcase classname="tests.test_material_thermal.TestMaterialFileThermal" name="test_full_correction_with_array_input[backend=numpy]" time="0.021" /><testcase classname="tests.test_material_thermal.TestMaterialFileThermal" name="test_full_correction_with_array_input[backend=torch]" time="0.033" /><testcase classname="tests.test_material_thermal.TestMaterialFileThermal" name="test_full_correction_calculation[backend=numpy]" time="0.053" /><testcase classname="tests.test_material_thermal.TestMaterialFileThermal" name="test_full_correction_calculation[backend=torch]" time="0.020" /><testcase classname="tests.test_materials.TestBaseMaterial" name="test_caching[backend=numpy]" time="0.002" /><testcase classname="tests.test_materials.TestBaseMaterial" name="test_caching[backend=torch]" time="0.002" /><testcase classname="tests.test_materials.TestIdealMaterial" name="test_ideal_material_n[backend=numpy]" time="0.001" /><testcase classname="tests.test_materials.TestIdealMaterial" name="test_ideal_material_n[backend=torch]" time="0.001" /><testcase classname="tests.test_materials.TestIdealMaterial" name="test_ideal_material_k[backend=numpy]" time="0.001" /><testcase classname="tests.test_materials.TestIdealMaterial" name="test_ideal_material_k[backend=torch]" time="0.001" /><testcase classname="tests.test_materials.TestIdealMaterial" name="test_ideal_to_dict[backend=numpy]" time="0.001" /><testcase classname="tests.test_materials.TestIdealMaterial" name="test_ideal_to_dict[backend=torch]" time="0.001" /><testcase classname="tests.test_materials.TestIdealMaterial" name="test_ideal_from_dict[backend=numpy]" time="0.002" /><testcase classname="tests.test_materials.TestIdealMaterial" name="test_ideal_from_dict[backend=torch]" time="0.002" /><testcase classname="tests.test_materials.TestMaterialFile" name="test_formula_1[backend=numpy]" time="0.025" /><testcase classname="tests.test_materials.TestMaterialFile" name="test_formula_1[backend=torch]" time="0.006" /><testcase classname="tests.test_materials.TestMaterialFile" name="test_formula_2[backend=numpy]" time="0.012" /><testcase classname="tests.test_materials.TestMaterialFile" name="test_formula_2[backend=torch]" time="0.006" /><testcase classname="tests.test_materials.TestMaterialFile" name="test_formula_3[backend=numpy]" time="0.010" /><testcase classname="tests.test_materials.TestMaterialFile" name="test_formula_3[backend=torch]" time="0.005" /><testcase classname="tests.test_materials.TestMaterialFile" name="test_formula_4[backend=numpy]" time="0.019" /><testcase classname="tests.test_materials.TestMaterialFile" name="test_formula_4[backend=torch]" time="0.008" /><testcase classname="tests.test_materials.TestMaterialFile" name="test_formula_5[backend=numpy]" time="0.045" /><testcase classname="tests.test_materials.TestMaterialFile" name="test_formula_5[backend=torch]" time="0.017" /><testcase classname="tests.test_materials.TestMaterialFile" name="test_formula_6[backend=numpy]" time="0.031" /><testcase classname="tests.test_materials.TestMaterialFile" name="test_formula_6[backend=torch]" time="0.012" /><testcase classname="tests.test_materials.TestMaterialFile" name="test_formula_7[backend=numpy]" time="0.026" /><testcase classname="tests.test_materials.TestMaterialFile" name="test_formula_7[backend=torch]" time="0.004" /><testcase classname="tests.test_materials.TestMaterialFile" name="test_formula_8[backend=numpy]" time="0.021" /><testcase classname="tests.test_materials.TestMaterialFile" name="test_formula_8[backend=torch]" time="0.004" /><testcase classname="tests.test_materials.TestMaterialFile" name="test_formula_9[backend=numpy]" time="0.007" /><testcase classname="tests.test_materials.TestMaterialFile" name="test_formula_9[backend=torch]" time="0.006" /><testcase classname="tests.test_materials.TestMaterialFile" name="test_tabulated_n[backend=numpy]" time="0.007" /><testcase classname="tests.test_materials.TestMaterialFile" name="test_tabulated_n[backend=torch]" time="0.023" /><testcase classname="tests.test_materials.TestMaterialFile" name="test_tabulated_nk[backend=numpy]" time="0.063" /><testcase classname="tests.test_materials.TestMaterialFile" name="test_tabulated_nk[backend=torch]" time="0.050" /><testcase classname="tests.test_materials.TestMaterialFile" name="test_set_formula_type_twice[backend=numpy]" time="0.003" /><testcase classname="tests.test_materials.TestMaterialFile" name="test_set_formula_type_twice[backend=torch]" time="0.003" /><testcase classname="tests.test_materials.TestMaterialFile" name="test_to_dict[backend=numpy]" time="0.002" /><testcase classname="tests.test_materials.TestMaterialFile" name="test_to_dict[backend=torch]" time="0.004" /><testcase classname="tests.test_materials.TestMaterialFile" name="test_from_dict[backend=numpy]" time="0.002" /><testcase classname="tests.test_materials.TestMaterialFile" name="test_from_dict[backend=torch]" time="0.002" /><testcase classname="tests.test_materials.TestMaterial" name="test_standard_material[backend=numpy]" time="0.014" /><testcase classname="tests.test_materials.TestMaterial" name="test_standard_material[backend=torch]" time="0.018" /><testcase classname="tests.test_materials.TestMaterial" name="test_nonexistent_material[backend=numpy]" time="0.020" /><testcase classname="tests.test_materials.TestMaterial" name="test_nonexistent_material[backend=torch]" time="0.016" /><testcase classname="tests.test_materials.TestMaterial" name="test_non_robust_failure[backend=numpy]" time="0.023" /><testcase classname="tests.test_materials.TestMaterial" name="test_non_robust_failure[backend=torch]" time="0.021" /><testcase classname="tests.test_materials.TestMaterial" name="test_min_wavelength_filtering[backend=numpy]" time="0.028" /><testcase classname="tests.test_materials.TestMaterial" name="test_min_wavelength_filtering[backend=torch]" time="0.025" /><testcase classname="tests.test_materials.TestMaterial" name="test_max_wavelength_filtering[backend=numpy]" time="0.018" /><testcase classname="tests.test_materials.TestMaterial" name="test_max_wavelength_filtering[backend=torch]" time="0.016" /><testcase classname="tests.test_materials.TestMaterial" name="test_raise_material_error_method[backend=numpy]" time="0.024" /><testcase classname="tests.test_materials.TestMaterial" name="test_raise_material_error_method[backend=torch]" time="0.024" /><testcase classname="tests.test_materials.TestMaterial" name="test_to_dict[backend=numpy]" time="0.011" /><testcase classname="tests.test_materials.TestMaterial" name="test_to_dict[backend=torch]" time="0.023" /><testcase classname="tests.test_materials.TestMaterial" name="test_from_dict[backend=numpy]" time="0.022" /><testcase classname="tests.test_materials.TestMaterial" name="test_from_dict[backend=torch]" time="0.015" /><testcase classname="tests.test_materials.TestMaterial" name="test_raise_warning[backend=numpy]" time="0.038" /><testcase classname="tests.test_materials.TestMaterial" name="test_raise_warning[backend=torch]" time="0.010" /><testcase classname="tests.test_materials" name="test_refractive_index[backend=numpy]" time="0.005" /><testcase classname="tests.test_materials" name="test_refractive_index[backend=torch]" time="0.005" /><testcase classname="tests.test_materials" name="test_extinction_coefficient[backend=numpy]" time="0.002" /><testcase classname="tests.test_materials" name="test_extinction_coefficient[backend=torch]" time="0.002" /><testcase classname="tests.test_materials" name="test_coefficients[backend=numpy]" time="0.002" /><testcase classname="tests.test_materials" name="test_coefficients[backend=torch]" time="0.003" /><testcase classname="tests.test_materials" name="test_abbe_to_dict[backend=numpy]" time="0.001" /><testcase classname="tests.test_materials" name="test_abbe_to_dict[backend=torch]" time="0.002" /><testcase classname="tests.test_materials" name="test_abbe_from_dict[backend=numpy]" time="0.001" /><testcase classname="tests.test_materials" name="test_abbe_from_dict[backend=torch]" time="0.003" /><testcase classname="tests.test_materials" name="test_abbe_out_of_bounds_wavelength[backend=numpy]" time="0.001" /><testcase classname="tests.test_materials" name="test_abbe_out_of_bounds_wavelength[backend=torch]" time="0.002" /><testcase classname="tests.test_materials" name="test_glasses_selection[backend=numpy]" time="0.021" /><testcase classname="tests.test_materials" name="test_glasses_selection[backend=torch]" time="0.015" /><testcase classname="tests.test_materials" name="test_get_nd_vd[backend=numpy]" time="0.024" /><testcase classname="tests.test_materials" name="test_get_nd_vd[backend=torch]" time="0.029" /><testcase classname="tests.test_materials" name="test_downsample_glass_map[backend=numpy]" time="0.140" /><testcase classname="tests.test_materials" name="test_downsample_glass_map[backend=torch]" time="0.126" /><testcase classname="tests.test_materials" name="test_find_closest_glass[backend=numpy]" time="0.125" /><testcase classname="tests.test_materials" name="test_find_closest_glass[backend=torch]" time="0.090" /><testcase classname="tests.test_materials" name="test_plot_nk" time="0.033" /><testcase classname="tests.test_ml.TestOpticalSystemModule" name="test_init_runtime_error_wrong_backend" time="0.037" /><testcase classname="tests.test_ml.TestOpticalSystemModule" name="test_init_enables_gradients" time="0.040" /><testcase classname="tests.test_ml.TestOpticalSystemModule" name="test_init_parameter_creation" time="0.041" /><testcase classname="tests.test_ml.TestOpticalSystemModule" name="test_default_loss_function" time="0.037" /><testcase classname="tests.test_ml.TestOpticalSystemModule" name="test_sync_params_to_problem_and_bounds" time="0.045" /><testcase classname="tests.test_ml.TestOpticalSystemModule" name="test_forward_pass_and_optimization" time="1.406" /><testcase classname="tests.test_ml.TestOpticalSystemModule" name="test_custom_objective_function" time="0.037" /><testcase classname="tests.test_mmdft_psf" name="test_initialization[backend=numpy]" time="0.147" /><testcase classname="tests.test_mmdft_psf" name="test_initialization[backend=torch]" time="0.229" /><testcase classname="tests.test_mmdft_psf" name="test_calcs_from_num_rays[backend=numpy-32-32-1.32622273171]" time="0.072" /><testcase classname="tests.test_mmdft_psf" name="test_calcs_from_num_rays[backend=numpy-64-45-0.94119032573]" time="0.089" /><testcase classname="tests.test_mmdft_psf" name="test_calcs_from_num_rays[backend=numpy-128-64-0.67380671047]" time="0.079" /><testcase classname="tests.test_mmdft_psf" name="test_calcs_from_num_rays[backend=numpy-256-90-0.47594283517]" time="0.117" /><testcase classname="tests.test_mmdft_psf" name="test_calcs_from_num_rays[backend=numpy-1024-181-0.24064525374]" time="0.333" /><testcase classname="tests.test_mmdft_psf" name="test_calcs_from_num_rays[backend=torch-32-32-1.32622273171]" time="0.178" /><testcase classname="tests.test_mmdft_psf" name="test_calcs_from_num_rays[backend=torch-64-45-0.94119032573]" time="0.171" /><testcase classname="tests.test_mmdft_psf" name="test_calcs_from_num_rays[backend=torch-128-64-0.67380671047]" time="0.205" /><testcase classname="tests.test_mmdft_psf" name="test_calcs_from_num_rays[backend=torch-256-90-0.47594283517]" time="0.223" /><testcase classname="tests.test_mmdft_psf" name="test_calcs_from_num_rays[backend=torch-1024-181-0.24064525374]" time="0.392" /><testcase classname="tests.test_mmdft_psf" name="test_calcs_from_pixel_pitch[backend=numpy-0.25-1390]" time="0.226" /><testcase classname="tests.test_mmdft_psf" name="test_calcs_from_pixel_pitch[backend=numpy-0.5-695]" time="0.134" /><testcase classname="tests.test_mmdft_psf" name="test_calcs_from_pixel_pitch[backend=numpy-0.75-463]" time="0.146" /><testcase classname="tests.test_mmdft_psf" name="test_calcs_from_pixel_pitch[backend=numpy-1.0-347]" time="0.117" /><testcase classname="tests.test_mmdft_psf" name="test_calcs_from_pixel_pitch[backend=numpy-1.5-231]" time="0.098" /><testcase classname="tests.test_mmdft_psf" name="test_calcs_from_pixel_pitch[backend=numpy-2.0-173]" time="0.112" /><testcase classname="tests.test_mmdft_psf" name="test_calcs_from_pixel_pitch[backend=torch-0.25-1390]" time="0.327" /><testcase classname="tests.test_mmdft_psf" name="test_calcs_from_pixel_pitch[backend=torch-0.5-695]" time="0.221" /><testcase classname="tests.test_mmdft_psf" name="test_calcs_from_pixel_pitch[backend=torch-0.75-463]" time="0.276" /><testcase classname="tests.test_mmdft_psf" name="test_calcs_from_pixel_pitch[backend=torch-1.0-347]" time="0.309" /><testcase classname="tests.test_mmdft_psf" name="test_calcs_from_pixel_pitch[backend=torch-1.5-231]" time="0.236" /><testcase classname="tests.test_mmdft_psf" name="test_calcs_from_pixel_pitch[backend=torch-2.0-173]" time="0.233" /><testcase classname="tests.test_mmdft_psf" name="test_calcs_from_image_size[backend=numpy-128-2.71661753109]" time="0.099" /><testcase classname="tests.test_mmdft_psf" name="test_calcs_from_image_size[backend=numpy-256-1.35830876554]" time="0.097" /><testcase classname="tests.test_mmdft_psf" name="test_calcs_from_image_size[backend=numpy-512-0.67915438277]" time="0.108" /><testcase classname="tests.test_mmdft_psf" name="test_calcs_from_image_size[backend=numpy-1024-0.33957719139]" time="0.142" /><testcase classname="tests.test_mmdft_psf" name="test_calcs_from_image_size[backend=numpy-2048-0.16978859569]" time="0.256" /><testcase classname="tests.test_mmdft_psf" name="test_calcs_from_image_size[backend=numpy-4096-0.08489429785]" time="0.751" /><testcase classname="tests.test_mmdft_psf" name="test_calcs_from_image_size[backend=torch-128-2.71661753109]" time="0.267" /><testcase classname="tests.test_mmdft_psf" name="test_calcs_from_image_size[backend=torch-256-1.35830876554]" time="0.172" /><testcase classname="tests.test_mmdft_psf" name="test_calcs_from_image_size[backend=torch-512-0.67915438277]" time="0.183" /><testcase classname="tests.test_mmdft_psf" name="test_calcs_from_image_size[backend=torch-1024-0.33957719139]" time="0.239" /><testcase classname="tests.test_mmdft_psf" name="test_calcs_from_image_size[backend=torch-2048-0.16978859569]" time="0.308" /><testcase classname="tests.test_mmdft_psf" name="test_calcs_from_image_size[backend=torch-4096-0.08489429785]" time="0.494" /><testcase classname="tests.test_mmdft_psf" name="test_num_rays_below_32[backend=numpy-32-None-expectation0]" time="0.131" /><testcase classname="tests.test_mmdft_psf" name="test_num_rays_below_32[backend=numpy-64-None-expectation1]" time="0.154" /><testcase classname="tests.test_mmdft_psf" name="test_num_rays_below_32[backend=numpy-12-16-expectation2]" time="0.086" /><testcase classname="tests.test_mmdft_psf" name="test_num_rays_below_32[backend=numpy-16-None-expectation3]" time="0.044" /><testcase classname="tests.test_mmdft_psf" name="test_num_rays_below_32[backend=torch-32-None-expectation0]" time="0.283" /><testcase classname="tests.test_mmdft_psf" name="test_num_rays_below_32[backend=torch-64-None-expectation1]" time="0.164" /><testcase classname="tests.test_mmdft_psf" name="test_num_rays_below_32[backend=torch-12-16-expectation2]" time="0.113" /><testcase classname="tests.test_mmdft_psf" name="test_num_rays_below_32[backend=torch-16-None-expectation3]" time="0.032" /><testcase classname="tests.test_mmdft_psf" name="test_image_size[backend=numpy-64-128]" time="0.064" /><testcase classname="tests.test_mmdft_psf" name="test_image_size[backend=numpy-65-256]" time="0.066" /><testcase classname="tests.test_mmdft_psf" name="test_image_size[backend=numpy-64-257]" time="0.064" /><testcase classname="tests.test_mmdft_psf" name="test_image_size[backend=torch-64-128]" time="0.153" /><testcase classname="tests.test_mmdft_psf" name="test_image_size[backend=torch-65-256]" time="0.146" /><testcase classname="tests.test_mmdft_psf" name="test_image_size[backend=torch-64-257]" time="0.155" /><testcase classname="tests.test_mmdft_psf" name="test_invalid_image_size[backend=numpy]" time="0.086" /><testcase classname="tests.test_mmdft_psf" name="test_invalid_image_size[backend=torch]" time="0.254" /><testcase classname="tests.test_mmdft_psf" name="test_strehl_ratio[backend=numpy]" time="0.107" /><testcase classname="tests.test_mmdft_psf" name="test_strehl_ratio[backend=torch]" time="0.216" /><testcase classname="tests.test_mmdft_psf" name="test_view[backend=numpy-2d-False]" time="0.159" /><testcase classname="tests.test_mmdft_psf" name="test_view[backend=numpy-3d-False]" time="0.236" /><testcase classname="tests.test_mmdft_psf" name="test_view[backend=numpy-2d-True]" time="0.149" /><testcase classname="tests.test_mmdft_psf" name="test_view[backend=numpy-3d-True]" time="0.568" /><testcase classname="tests.test_mmdft_psf" name="test_view[backend=torch-2d-False]" time="0.218" /><testcase classname="tests.test_mmdft_psf" name="test_view[backend=torch-3d-False]" time="0.296" /><testcase classname="tests.test_mmdft_psf" name="test_view[backend=torch-2d-True]" time="0.195" /><testcase classname="tests.test_mmdft_psf" name="test_view[backend=torch-3d-True]" time="0.257" /><testcase classname="tests.test_mmdft_psf" name="test_find_bounds[backend=numpy]" time="0.160" /><testcase classname="tests.test_mmdft_psf" name="test_find_bounds[backend=torch]" time="0.244" /><testcase classname="tests.test_mmdft_psf" name="test_view_invalid_projection[backend=numpy]" time="0.121" /><testcase classname="tests.test_mmdft_psf" name="test_view_invalid_projection[backend=torch]" time="0.193" /><testcase classname="tests.test_mmdft_psf" name="test_view_annotate_sampling[backend=numpy-2d]" time="0.157" /><testcase classname="tests.test_mmdft_psf" name="test_view_annotate_sampling[backend=numpy-3d]" time="0.163" /><testcase classname="tests.test_mmdft_psf" name="test_view_annotate_sampling[backend=torch-2d]" time="0.187" /><testcase classname="tests.test_mmdft_psf" name="test_view_annotate_sampling[backend=torch-3d]" time="0.343" /><testcase classname="tests.test_mmdft_psf" name="test_view_oversampling[backend=numpy-2d]" time="0.148" /><testcase classname="tests.test_mmdft_psf" name="test_view_oversampling[backend=numpy-3d]" time="0.204" /><testcase classname="tests.test_mmdft_psf" name="test_view_oversampling[backend=torch-2d]" time="0.233" /><testcase classname="tests.test_mmdft_psf" name="test_view_oversampling[backend=torch-3d]" time="0.240" /><testcase classname="tests.test_mmdft_psf" name="test_get_units_finite_obj[backend=numpy]" time="0.099" /><testcase classname="tests.test_mmdft_psf" name="test_get_units_finite_obj[backend=torch]" time="0.257" /><testcase classname="tests.test_mmdft_psf" name="test_psf_log_tick_formatter[backend=numpy]" time="0.119" /><testcase classname="tests.test_mmdft_psf" name="test_psf_log_tick_formatter[backend=torch]" time="0.191" /><testcase classname="tests.test_mmdft_psf" name="test_invalid_working_FNO[backend=numpy]" time="0.081" /><testcase classname="tests.test_mmdft_psf" name="test_invalid_working_FNO[backend=torch]" time="0.189" /><testcase classname="tests.test_mmdft_psf" name="test_interpolate_zoom_factor_one[backend=numpy]" time="0.102" /><testcase classname="tests.test_mmdft_psf" name="test_interpolate_zoom_factor_one[backend=torch]" time="0.184" /><testcase classname="tests.test_mmdft_psf" name="test_large_threshold[backend=numpy]" time="0.094" /><testcase classname="tests.test_mmdft_psf" name="test_large_threshold[backend=torch]" time="0.272" /><testcase classname="tests.test_mmdft_psf" name="test_fft_agreement[backend=numpy-32-64]" time="0.094" /><testcase classname="tests.test_mmdft_psf" name="test_fft_agreement[backend=numpy-45-128]" time="0.082" /><testcase classname="tests.test_mmdft_psf" name="test_fft_agreement[backend=numpy-64-256]" time="0.092" /><testcase classname="tests.test_mmdft_psf" name="test_fft_agreement[backend=numpy-90-512]" time="0.146" /><testcase classname="tests.test_mmdft_psf" name="test_fft_agreement[backend=numpy-181-2048]" time="1.097" /><testcase classname="tests.test_mmdft_psf" name="test_fft_agreement[backend=numpy-128-128]" time="0.238" /><testcase classname="tests.test_mmdft_psf" name="test_fft_agreement[backend=numpy-256-256]" time="0.685" /><testcase classname="tests.test_mmdft_psf" name="test_fft_agreement[backend=numpy-512-512]" time="3.351" /><testcase classname="tests.test_mmdft_psf" name="test_fft_agreement[backend=torch-32-64]" time="0.369" /><testcase classname="tests.test_mmdft_psf" name="test_fft_agreement[backend=torch-45-128]" time="0.218" /><testcase classname="tests.test_mmdft_psf" name="test_fft_agreement[backend=torch-64-256]" time="0.422" /><testcase classname="tests.test_mmdft_psf" name="test_fft_agreement[backend=torch-90-512]" time="0.302" /><testcase classname="tests.test_mmdft_psf" name="test_fft_agreement[backend=torch-181-2048]" time="0.719" /><testcase classname="tests.test_mmdft_psf" name="test_fft_agreement[backend=torch-128-128]" time="0.454" /><testcase classname="tests.test_mmdft_psf" name="test_fft_agreement[backend=torch-256-256]" time="0.843" /><testcase classname="tests.test_mmdft_psf" name="test_fft_agreement[backend=torch-512-512]" time="3.166" /><testcase classname="tests.test_monte_carlo" name="test_run" time="0.497" /><testcase classname="tests.test_monte_carlo" name="test_run_no_compensator" time="0.111" /><testcase classname="tests.test_monte_carlo" name="test_view_histogram" time="0.235" /><testcase classname="tests.test_monte_carlo" name="test_view_histogram_no_kde" time="0.207" /><testcase classname="tests.test_monte_carlo" name="test_view_cdf" time="0.154" /><testcase classname="tests.test_monte_carlo" name="test_view_heatmap" time="0.160" /><testcase classname="tests.test_monte_carlo" name="test_invalid_plot_type" time="0.082" /><testcase classname="tests.test_monte_carlo" name="test_validate_no_operands" time="0.073" /><testcase classname="tests.test_monte_carlo" name="test_validate_no_perturbations" time="0.061" /><testcase classname="tests.test_mtf.TestGeometricMTF" name="test_view_mtf_defaults[backend=numpy]" time="0.278" /><testcase classname="tests.test_mtf.TestGeometricMTF" name="test_view_mtf_defaults[backend=torch]" time="0.718" /><testcase classname="tests.test_mtf.TestGeometricMTF" name="test_view_mtf_custom_fig[backend=numpy]" time="0.253" /><testcase classname="tests.test_mtf.TestGeometricMTF" name="test_view_mtf_custom_fig[backend=torch]" time="0.629" /><testcase classname="tests.test_mtf.TestGeometricMTF" name="test_generate_data_scaled[backend=numpy]" time="0.364" /><testcase classname="tests.test_mtf.TestGeometricMTF" name="test_generate_data_scaled[backend=torch]" time="0.878" /><testcase classname="tests.test_mtf.TestGeometricMTF" name="test_generate_data_unscaled[backend=numpy]" time="0.323" /><testcase classname="tests.test_mtf.TestGeometricMTF" name="test_generate_data_unscaled[backend=torch]" time="0.868" /><testcase classname="tests.test_mtf.TestGeometricMTF" name="test_max_freq_specification[backend=numpy]" time="0.395" /><testcase classname="tests.test_mtf.TestGeometricMTF" name="test_max_freq_specification[backend=torch]" time="1.364" /><testcase classname="tests.test_mtf.TestFFTMTF" name="test_view_mtf_defaults[backend=numpy]" time="0.154" /><testcase classname="tests.test_mtf.TestFFTMTF" name="test_view_mtf_defaults[backend=torch]" time="0.460" /><testcase classname="tests.test_mtf.TestFFTMTF" name="test_view_mtf_custom_fig[backend=numpy]" time="0.169" /><testcase classname="tests.test_mtf.TestFFTMTF" name="test_view_mtf_custom_fig[backend=torch]" time="0.473" /><testcase classname="tests.test_mtf.TestFFTMTF" name="test_generate_data_infinite_object[backend=numpy]" time="0.147" /><testcase classname="tests.test_mtf.TestFFTMTF" name="test_generate_data_infinite_object[backend=torch]" time="0.388" /><testcase classname="tests.test_mtf.TestFFTMTF" name="test_generate_data_finite_object[backend=numpy]" time="0.157" /><testcase classname="tests.test_mtf.TestFFTMTF" name="test_generate_data_finite_object[backend=torch]" time="0.507" /><testcase classname="tests.test_mtf.TestFFTMTF" name="test_num_rays_and_grid_size[32-32-backend=numpy]" time="0.110" /><testcase classname="tests.test_mtf.TestFFTMTF" name="test_num_rays_and_grid_size[32-32-backend=torch]" time="0.280" /><testcase classname="tests.test_mtf.TestFFTMTF" name="test_num_rays_and_grid_size[64-45-backend=numpy]" time="0.103" /><testcase classname="tests.test_mtf.TestFFTMTF" name="test_num_rays_and_grid_size[64-45-backend=torch]" time="0.334" /><testcase classname="tests.test_mtf.TestFFTMTF" name="test_num_rays_and_grid_size[128-64-backend=numpy]" time="0.160" /><testcase classname="tests.test_mtf.TestFFTMTF" name="test_num_rays_and_grid_size[128-64-backend=torch]" time="0.456" /><testcase classname="tests.test_mtf.TestFFTMTF" name="test_num_rays_and_grid_size[256-90-backend=numpy]" time="0.247" /><testcase classname="tests.test_mtf.TestFFTMTF" name="test_num_rays_and_grid_size[256-90-backend=torch]" time="0.445" /><testcase classname="tests.test_mtf.TestFFTMTF" name="test_num_rays_and_grid_size[1024-181-backend=numpy]" time="3.021" /><testcase classname="tests.test_mtf.TestFFTMTF" name="test_num_rays_and_grid_size[1024-181-backend=torch]" time="1.293" /><testcase classname="tests.test_object_surface" name="test_is_infinite[backend=numpy]" time="0.002" /><testcase classname="tests.test_object_surface" name="test_is_infinite[backend=torch]" time="0.002" /><testcase classname="tests.test_object_surface" name="test_set_aperture[backend=numpy]" time="0.002" /><testcase classname="tests.test_object_surface" name="test_set_aperture[backend=torch]" time="0.002" /><testcase classname="tests.test_object_surface" name="test_trace[backend=numpy]" time="0.004" /><testcase classname="tests.test_object_surface" name="test_trace[backend=torch]" time="0.003" /><testcase classname="tests.test_object_surface" name="test_trace_paraxial[backend=numpy]" time="0.002" /><testcase classname="tests.test_object_surface" name="test_trace_paraxial[backend=torch]" time="0.003" /><testcase classname="tests.test_object_surface" name="test_trace_real[backend=numpy]" time="0.002" /><testcase classname="tests.test_object_surface" name="test_trace_real[backend=torch]" time="0.002" /><testcase classname="tests.test_object_surface" name="test_interact[backend=numpy]" time="0.002" /><testcase classname="tests.test_object_surface" name="test_interact[backend=torch]" time="0.002" /><testcase classname="tests.test_operand.TestParaxialOperand" name="test_f1[backend=numpy]" time="0.004" /><testcase classname="tests.test_operand.TestParaxialOperand" name="test_f1[backend=torch]" time="0.008" /><testcase classname="tests.test_operand.TestParaxialOperand" name="test_f2[backend=numpy]" time="0.004" /><testcase classname="tests.test_operand.TestParaxialOperand" name="test_f2[backend=torch]" time="0.012" /><testcase classname="tests.test_operand.TestParaxialOperand" name="test_F1[backend=numpy]" time="0.003" /><testcase classname="tests.test_operand.TestParaxialOperand" name="test_F1[backend=torch]" time="0.006" /><testcase classname="tests.test_operand.TestParaxialOperand" name="test_F2[backend=numpy]" time="0.004" /><testcase classname="tests.test_operand.TestParaxialOperand" name="test_F2[backend=torch]" time="0.011" /><testcase classname="tests.test_operand.TestParaxialOperand" name="test_P1[backend=numpy]" time="0.007" /><testcase classname="tests.test_operand.TestParaxialOperand" name="test_P1[backend=torch]" time="0.015" /><testcase classname="tests.test_operand.TestParaxialOperand" name="test_P2[backend=numpy]" time="0.005" /><testcase classname="tests.test_operand.TestParaxialOperand" name="test_P2[backend=torch]" time="0.009" /><testcase classname="tests.test_operand.TestParaxialOperand" name="test_N1[backend=numpy]" time="0.003" /><testcase classname="tests.test_operand.TestParaxialOperand" name="test_N1[backend=torch]" time="0.016" /><testcase classname="tests.test_operand.TestParaxialOperand" name="test_N2[backend=numpy]" time="0.006" /><testcase classname="tests.test_operand.TestParaxialOperand" name="test_N2[backend=torch]" time="0.015" /><testcase classname="tests.test_operand.TestParaxialOperand" name="test_EPL[backend=numpy]" time="0.004" /><testcase classname="tests.test_operand.TestParaxialOperand" name="test_EPL[backend=torch]" time="0.009" /><testcase classname="tests.test_operand.TestParaxialOperand" name="test_EPD[backend=numpy]" time="0.003" /><testcase classname="tests.test_operand.TestParaxialOperand" name="test_EPD[backend=torch]" time="0.005" /><testcase classname="tests.test_operand.TestParaxialOperand" name="test_XPL[backend=numpy]" time="0.003" /><testcase classname="tests.test_operand.TestParaxialOperand" name="test_XPL[backend=torch]" time="0.010" /><testcase classname="tests.test_operand.TestParaxialOperand" name="test_XPD[backend=numpy]" time="0.006" /><testcase classname="tests.test_operand.TestParaxialOperand" name="test_XPD[backend=torch]" time="0.014" /><testcase classname="tests.test_operand.TestParaxialOperand" name="test_magnification[backend=numpy]" time="0.004" /><testcase classname="tests.test_operand.TestParaxialOperand" name="test_magnification[backend=torch]" time="0.007" /><testcase classname="tests.test_operand.TestAberrationOperand" name="test_seidel[backend=numpy]" time="0.016" /><testcase classname="tests.test_operand.TestAberrationOperand" name="test_seidel[backend=torch]" time="0.063" /><testcase classname="tests.test_operand.TestAberrationOperand" name="test_TSC[backend=numpy]" time="0.013" /><testcase classname="tests.test_operand.TestAberrationOperand" name="test_TSC[backend=torch]" time="0.043" /><testcase classname="tests.test_operand.TestAberrationOperand" name="test_SC[backend=numpy]" time="0.012" /><testcase classname="tests.test_operand.TestAberrationOperand" name="test_SC[backend=torch]" time="0.078" /><testcase classname="tests.test_operand.TestAberrationOperand" name="test_CC[backend=numpy]" time="0.009" /><testcase classname="tests.test_operand.TestAberrationOperand" name="test_CC[backend=torch]" time="0.031" /><testcase classname="tests.test_operand.TestAberrationOperand" name="test_TCC[backend=numpy]" time="0.011" /><testcase classname="tests.test_operand.TestAberrationOperand" name="test_TCC[backend=torch]" time="0.046" /><testcase classname="tests.test_operand.TestAberrationOperand" name="test_TAC[backend=numpy]" time="0.012" /><testcase classname="tests.test_operand.TestAberrationOperand" name="test_TAC[backend=torch]" time="0.040" /><testcase classname="tests.test_operand.TestAberrationOperand" name="test_AC[backend=numpy]" time="0.011" /><testcase classname="tests.test_operand.TestAberrationOperand" name="test_AC[backend=torch]" time="0.028" /><testcase classname="tests.test_operand.TestAberrationOperand" name="test_TPC[backend=numpy]" time="0.008" /><testcase classname="tests.test_operand.TestAberrationOperand" name="test_TPC[backend=torch]" time="0.047" /><testcase classname="tests.test_operand.TestAberrationOperand" name="test_PC[backend=numpy]" time="0.011" /><testcase classname="tests.test_operand.TestAberrationOperand" name="test_PC[backend=torch]" time="0.052" /><testcase classname="tests.test_operand.TestAberrationOperand" name="test_DC[backend=numpy]" time="0.015" /><testcase classname="tests.test_operand.TestAberrationOperand" name="test_DC[backend=torch]" time="0.049" /><testcase classname="tests.test_operand.TestAberrationOperand" name="test_TAchC[backend=numpy]" time="0.011" /><testcase classname="tests.test_operand.TestAberrationOperand" name="test_TAchC[backend=torch]" time="0.045" /><testcase classname="tests.test_operand.TestAberrationOperand" name="test_LchC[backend=numpy]" time="0.006" /><testcase classname="tests.test_operand.TestAberrationOperand" name="test_LchC[backend=torch]" time="0.037" /><testcase classname="tests.test_operand.TestAberrationOperand" name="test_TchC[backend=numpy]" time="0.014" /><testcase classname="tests.test_operand.TestAberrationOperand" name="test_TchC[backend=torch]" time="0.036" /><testcase classname="tests.test_operand.TestAberrationOperand" name="test_TSC_sum[backend=numpy]" time="0.015" /><testcase classname="tests.test_operand.TestAberrationOperand" name="test_TSC_sum[backend=torch]" time="0.053" /><testcase classname="tests.test_operand.TestAberrationOperand" name="test_SC_sum[backend=numpy]" time="0.015" /><testcase classname="tests.test_operand.TestAberrationOperand" name="test_SC_sum[backend=torch]" time="0.052" /><testcase classname="tests.test_operand.TestAberrationOperand" name="test_CC_sum[backend=numpy]" time="0.013" /><testcase classname="tests.test_operand.TestAberrationOperand" name="test_CC_sum[backend=torch]" time="0.052" /><testcase classname="tests.test_operand.TestAberrationOperand" name="test_TCC_sum[backend=numpy]" time="0.004" /><testcase classname="tests.test_operand.TestAberrationOperand" name="test_TCC_sum[backend=torch]" time="0.050" /><testcase classname="tests.test_operand.TestAberrationOperand" name="test_TAC_sum[backend=numpy]" time="0.013" /><testcase classname="tests.test_operand.TestAberrationOperand" name="test_TAC_sum[backend=torch]" time="0.044" /><testcase classname="tests.test_operand.TestAberrationOperand" name="test_AC_sum[backend=numpy]" time="0.012" /><testcase classname="tests.test_operand.TestAberrationOperand" name="test_AC_sum[backend=torch]" time="0.057" /><testcase classname="tests.test_operand.TestAberrationOperand" name="test_TPC_sum[backend=numpy]" time="0.013" /><testcase classname="tests.test_operand.TestAberrationOperand" name="test_TPC_sum[backend=torch]" time="0.046" /><testcase classname="tests.test_operand.TestAberrationOperand" name="test_PC_sum[backend=numpy]" time="0.012" /><testcase classname="tests.test_operand.TestAberrationOperand" name="test_PC_sum[backend=torch]" time="0.039" /><testcase classname="tests.test_operand.TestAberrationOperand" name="test_DC_sum[backend=numpy]" time="0.010" /><testcase classname="tests.test_operand.TestAberrationOperand" name="test_DC_sum[backend=torch]" time="0.023" /><testcase classname="tests.test_operand.TestAberrationOperand" name="test_TAchC_sum[backend=numpy]" time="0.012" /><testcase classname="tests.test_operand.TestAberrationOperand" name="test_TAchC_sum[backend=torch]" time="0.045" /><testcase classname="tests.test_operand.TestAberrationOperand" name="test_LchC_sum[backend=numpy]" time="0.011" /><testcase classname="tests.test_operand.TestAberrationOperand" name="test_LchC_sum[backend=torch]" time="0.024" /><testcase classname="tests.test_operand.TestAberrationOperand" name="test_TchC_sum[backend=numpy]" time="0.009" /><testcase classname="tests.test_operand.TestAberrationOperand" name="test_TchC_sum[backend=torch]" time="0.054" /><testcase classname="tests.test_operand.TestRayOperand" name="test_x_intercept[backend=numpy]" time="0.009" /><testcase classname="tests.test_operand.TestRayOperand" name="test_x_intercept[backend=torch]" time="0.027" /><testcase classname="tests.test_operand.TestRayOperand" name="test_y_intercept[backend=numpy]" time="0.010" /><testcase classname="tests.test_operand.TestRayOperand" name="test_y_intercept[backend=torch]" time="0.022" /><testcase classname="tests.test_operand.TestRayOperand" name="test_z_intercept[backend=numpy]" time="0.010" /><testcase classname="tests.test_operand.TestRayOperand" name="test_z_intercept[backend=torch]" time="0.030" /><testcase classname="tests.test_operand.TestRayOperand" name="test_x_intercept_lcs[backend=numpy]" time="0.008" /><testcase classname="tests.test_operand.TestRayOperand" name="test_x_intercept_lcs[backend=torch]" time="0.026" /><testcase classname="tests.test_operand.TestRayOperand" name="test_y_intercept_lcs[backend=numpy]" time="0.009" /><testcase classname="tests.test_operand.TestRayOperand" name="test_y_intercept_lcs[backend=torch]" time="0.029" /><testcase classname="tests.test_operand.TestRayOperand" name="test_z_intercept_lcs[backend=numpy]" time="0.008" /><testcase classname="tests.test_operand.TestRayOperand" name="test_z_intercept_lcs[backend=torch]" time="0.029" /><testcase classname="tests.test_operand.TestRayOperand" name="test_L[backend=numpy]" time="0.005" /><testcase classname="tests.test_operand.TestRayOperand" name="test_L[backend=torch]" time="0.032" /><testcase classname="tests.test_operand.TestRayOperand" name="test_M[backend=numpy]" time="0.007" /><testcase classname="tests.test_operand.TestRayOperand" name="test_M[backend=torch]" time="0.019" /><testcase classname="tests.test_operand.TestRayOperand" name="test_N[backend=numpy]" time="0.006" /><testcase classname="tests.test_operand.TestRayOperand" name="test_N[backend=torch]" time="0.028" /><testcase classname="tests.test_operand.TestRayOperand" name="test_rms_spot_size[backend=numpy]" time="0.105" /><testcase classname="tests.test_operand.TestRayOperand" name="test_rms_spot_size[backend=torch]" time="0.139" /><testcase classname="tests.test_operand.TestRayOperand" name="test_rms_spot_size_all_wave[backend=numpy]" time="0.118" /><testcase classname="tests.test_operand.TestRayOperand" name="test_rms_spot_size_all_wave[backend=torch]" time="0.159" /><testcase classname="tests.test_operand.TestRayOperand" name="test_opd_diff[backend=numpy]" time="0.013" /><testcase classname="tests.test_operand.TestRayOperand" name="test_opd_diff[backend=torch]" time="0.057" /><testcase classname="tests.test_operand.TestRayOperand" name="test_opd_diff_on_axis[backend=numpy]" time="0.014" /><testcase classname="tests.test_operand.TestRayOperand" name="test_opd_diff_on_axis[backend=torch]" time="0.052" /><testcase classname="tests.test_operand.TestRayOperand" name="test_opd_diff_new_dist[backend=numpy]" time="0.095" /><testcase classname="tests.test_operand.TestRayOperand" name="test_opd_diff_new_dist[backend=torch]" time="0.133" /><testcase classname="tests.test_operand.TestRayOperand" name="test_clearance[backend=numpy]" time="0.020" /><testcase classname="tests.test_operand.TestRayOperand" name="test_clearance[backend=torch]" time="0.097" /><testcase classname="tests.test_operand.TestRayOperand" name="test_AOI[backend=numpy]" time="0.059" /><testcase classname="tests.test_operand.TestRayOperand" name="test_AOI[backend=torch]" time="0.149" /><testcase classname="tests.test_operand.TestLensOperand" name="test_edge_thickness_simple_biconvex[backend=numpy]" time="0.018" /><testcase classname="tests.test_operand.TestLensOperand" name="test_edge_thickness_simple_biconvex[backend=torch]" time="0.033" /><testcase classname="tests.test_operand.TestLensOperand" name="test_edge_thickness_plano_concave[backend=numpy]" time="0.020" /><testcase classname="tests.test_operand.TestLensOperand" name="test_edge_thickness_plano_concave[backend=torch]" time="0.032" /><testcase classname="tests.test_operand.TestLensOperand" name="test_edge_thickness_different_semi_apertures[backend=numpy]" time="0.016" /><testcase classname="tests.test_operand.TestLensOperand" name="test_edge_thickness_different_semi_apertures[backend=torch]" time="0.027" /><testcase classname="tests.test_operand.TestLensOperand" name="test_edge_thickness_aspheric_surface[backend=numpy]" time="0.017" /><testcase classname="tests.test_operand.TestLensOperand" name="test_edge_thickness_aspheric_surface[backend=torch]" time="0.044" /><testcase classname="tests.test_operand.TestOperand" name="test_get_value[backend=numpy]" time="0.003" /><testcase classname="tests.test_operand.TestOperand" name="test_get_value[backend=torch]" time="0.006" /><testcase classname="tests.test_operand.TestOperand" name="test_invalid_operand[backend=numpy]" time="0.002" /><testcase classname="tests.test_operand.TestOperand" name="test_invalid_operand[backend=torch]" time="0.002" /><testcase classname="tests.test_operand.TestOperand" name="test_delta[backend=numpy]" time="0.001" /><testcase classname="tests.test_operand.TestOperand" name="test_delta[backend=torch]" time="0.007" /><testcase classname="tests.test_operand.TestOperand" name="test_fun[backend=numpy]" time="0.003" /><testcase classname="tests.test_operand.TestOperand" name="test_fun[backend=torch]" time="0.007" /><testcase classname="tests.test_operand.TestOperand" name="test_reregister_operand[backend=numpy]" time="0.001" /><testcase classname="tests.test_operand.TestOperand" name="test_reregister_operand[backend=torch]" time="0.001" /><testcase classname="tests.test_operand.TestOperand" name="test_contains[backend=numpy]" time="0.001" /><testcase classname="tests.test_operand.TestOperand" name="test_contains[backend=torch]" time="0.001" /><testcase classname="tests.test_operand.TestOperand" name="test_repr[backend=numpy]" time="0.001" /><testcase classname="tests.test_operand.TestOperand" name="test_repr[backend=torch]" time="0.001" /><testcase classname="tests.test_operand.TestOperand" name="test_invalid_bounds[backend=numpy]" time="0.001" /><testcase classname="tests.test_operand.TestOperand" name="test_invalid_bounds[backend=torch]" time="0.001" /><testcase classname="tests.test_operand.TestOperand" name="test_invalid_bounds_and_target[backend=numpy]" time="0.001" /><testcase classname="tests.test_operand.TestOperand" name="test_invalid_bounds_and_target[backend=torch]" time="0.001" /><testcase classname="tests.test_operand.TestOperand" name="test_delta_ineq[backend=numpy]" time="0.005" /><testcase classname="tests.test_operand.TestOperand" name="test_delta_ineq[backend=torch]" time="0.016" /><testcase classname="tests.test_operand.TestOperand" name="test_delta_ineq_no_bounds[backend=numpy]" time="0.002" /><testcase classname="tests.test_operand.TestOperand" name="test_delta_ineq_no_bounds[backend=torch]" time="0.009" /><testcase classname="tests.test_operand.TestOperand" name="test_delta_with_bounds[backend=numpy]" time="0.004" /><testcase classname="tests.test_operand.TestOperand" name="test_delta_with_bounds[backend=torch]" time="0.016" /><testcase classname="tests.test_operand.TestOperand" name="test_invalid_delta[backend=numpy]" time="0.003" /><testcase classname="tests.test_operand.TestOperand" name="test_invalid_delta[backend=torch]" time="0.003" /><testcase classname="tests.test_operand.TestOperandManager" name="test_add[backend=numpy]" time="0.001" /><testcase classname="tests.test_operand.TestOperandManager" name="test_add[backend=torch]" time="0.002" /><testcase classname="tests.test_operand.TestOperandManager" name="test_clear[backend=numpy]" time="0.001" /><testcase classname="tests.test_operand.TestOperandManager" name="test_clear[backend=torch]" time="0.002" /><testcase classname="tests.test_operand.TestOperandManager" name="test_iter[backend=numpy]" time="0.002" /><testcase classname="tests.test_operand.TestOperandManager" name="test_iter[backend=torch]" time="0.001" /><testcase classname="tests.test_operand.TestOperandManager" name="test_getitem[backend=numpy]" time="0.001" /><testcase classname="tests.test_operand.TestOperandManager" name="test_getitem[backend=torch]" time="0.001" /><testcase classname="tests.test_operand.TestOperandManager" name="test_setitem[backend=numpy]" time="0.001" /><testcase classname="tests.test_operand.TestOperandManager" name="test_setitem[backend=torch]" time="0.001" /><testcase classname="tests.test_operand.TestOperandManager" name="test_len[backend=numpy]" time="0.001" /><testcase classname="tests.test_operand.TestOperandManager" name="test_len[backend=torch]" time="0.001" /><testcase classname="tests.test_operand.TestOperandManager" name="test_getitem_error[backend=numpy]" time="0.001" /><testcase classname="tests.test_operand.TestOperandManager" name="test_getitem_error[backend=torch]" time="0.001" /><testcase classname="tests.test_operand.TestOperandManager" name="test_setitem_invalid_type[backend=numpy]" time="0.001" /><testcase classname="tests.test_operand.TestOperandManager" name="test_setitem_invalid_type[backend=torch]" time="0.001" /><testcase classname="tests.test_operand.TestOperandManager" name="test_delitem[backend=numpy]" time="0.001" /><testcase classname="tests.test_operand.TestOperandManager" name="test_delitem[backend=torch]" time="0.001" /><testcase classname="tests.test_optic.TestOptic" name="test_initialization[backend=numpy]" time="0.001" /><testcase classname="tests.test_optic.TestOptic" name="test_initialization[backend=torch]" time="0.001" /><testcase classname="tests.test_optic.TestOptic" name="test_add_surface[backend=numpy]" time="0.012" /><testcase classname="tests.test_optic.TestOptic" name="test_add_surface[backend=torch]" time="0.020" /><testcase classname="tests.test_optic.TestOptic" name="test_add_field[backend=numpy]" time="0.001" /><testcase classname="tests.test_optic.TestOptic" name="test_add_field[backend=torch]" time="0.001" /><testcase classname="tests.test_optic.TestOptic" name="test_add_wavelength[backend=numpy]" time="0.001" /><testcase classname="tests.test_optic.TestOptic" name="test_add_wavelength[backend=torch]" time="0.001" /><testcase classname="tests.test_optic.TestOptic" name="test_set_aperture[backend=numpy]" time="0.001" /><testcase classname="tests.test_optic.TestOptic" name="test_set_aperture[backend=torch]" time="0.001" /><testcase classname="tests.test_optic.TestOptic" name="test_set_field_type[backend=numpy]" time="0.002" /><testcase classname="tests.test_optic.TestOptic" name="test_set_field_type[backend=torch]" time="0.001" /><testcase classname="tests.test_optic.TestOptic" name="test_set_comment[backend=numpy]" time="0.030" /><testcase classname="tests.test_optic.TestOptic" name="test_set_comment[backend=torch]" time="0.033" /><testcase classname="tests.test_optic.TestOptic" name="test_set_radius[backend=numpy]" time="0.025" /><testcase classname="tests.test_optic.TestOptic" name="test_set_radius[backend=torch]" time="0.014" /><testcase classname="tests.test_optic.TestOptic" name="test_set_conic[backend=numpy]" time="0.018" /><testcase classname="tests.test_optic.TestOptic" name="test_set_conic[backend=torch]" time="0.015" /><testcase classname="tests.test_optic.TestOptic" name="test_set_thickness[backend=numpy]" time="0.017" /><testcase classname="tests.test_optic.TestOptic" name="test_set_thickness[backend=torch]" time="0.016" /><testcase classname="tests.test_optic.TestOptic" name="test_set_index[backend=numpy]" time="0.002" /><testcase classname="tests.test_optic.TestOptic" name="test_set_index[backend=torch]" time="0.002" /><testcase classname="tests.test_optic.TestOptic" name="test_set_material[backend=numpy]" time="0.012" /><testcase classname="tests.test_optic.TestOptic" name="test_set_material[backend=torch]" time="0.018" /><testcase classname="tests.test_optic.TestOptic" name="test_set_asphere_coeff[backend=numpy]" time="0.001" /><testcase classname="tests.test_optic.TestOptic" name="test_set_asphere_coeff[backend=torch]" time="0.002" /><testcase classname="tests.test_optic.TestOptic" name="test_set_polarization[backend=numpy]" time="0.001" /><testcase classname="tests.test_optic.TestOptic" name="test_set_polarization[backend=torch]" time="0.001" /><testcase classname="tests.test_optic.TestOptic" name="test_optic_default_apodization[backend=numpy]" time="0.001" /><testcase classname="tests.test_optic.TestOptic" name="test_optic_default_apodization[backend=torch]" time="0.001" /><testcase classname="tests.test_optic.TestOptic" name="test_optic_set_apodization[backend=numpy]" time="0.001" /><testcase classname="tests.test_optic.TestOptic" name="test_optic_set_apodization[backend=torch]" time="0.001" /><testcase classname="tests.test_optic.TestOptic" name="test_set_invalid_polarization[backend=numpy]" time="0.001" /><testcase classname="tests.test_optic.TestOptic" name="test_set_invalid_polarization[backend=torch]" time="0.001" /><testcase classname="tests.test_optic.TestOptic" name="test_set_pickup[backend=numpy]" time="0.001" /><testcase classname="tests.test_optic.TestOptic" name="test_set_pickup[backend=torch]" time="0.002" /><testcase classname="tests.test_optic.TestOptic" name="test_clear_pickups[backend=numpy]" time="0.001" /><testcase classname="tests.test_optic.TestOptic" name="test_clear_pickups[backend=torch]" time="0.002" /><testcase classname="tests.test_optic.TestOptic" name="test_set_solve[backend=numpy]" time="0.051" /><testcase classname="tests.test_optic.TestOptic" name="test_set_solve[backend=torch]" time="0.064" /><testcase classname="tests.test_optic.TestOptic" name="test_clear_solves[backend=numpy]" time="0.058" /><testcase classname="tests.test_optic.TestOptic" name="test_clear_solves[backend=torch]" time="0.066" /><testcase classname="tests.test_optic.TestOptic" name="test_scale_system[backend=numpy]" time="0.001" /><testcase classname="tests.test_optic.TestOptic" name="test_scale_system[backend=torch]" time="0.002" /><testcase classname="tests.test_optic.TestOptic" name="test_reset[backend=numpy]" time="0.002" /><testcase classname="tests.test_optic.TestOptic" name="test_reset[backend=torch]" time="0.003" /><testcase classname="tests.test_optic.TestOptic" name="test_n[backend=numpy]" time="0.001" /><testcase classname="tests.test_optic.TestOptic" name="test_n[backend=torch]" time="0.002" /><testcase classname="tests.test_optic.TestOptic" name="test_update_paraxial[backend=numpy]" time="0.057" /><testcase classname="tests.test_optic.TestOptic" name="test_update_paraxial[backend=torch]" time="0.069" /><testcase classname="tests.test_optic.TestOptic" name="test_update[backend=numpy]" time="0.049" /><testcase classname="tests.test_optic.TestOptic" name="test_update[backend=torch]" time="0.052" /><testcase classname="tests.test_optic.TestOptic" name="test_image_solve[backend=numpy]" time="0.056" /><testcase classname="tests.test_optic.TestOptic" name="test_image_solve[backend=torch]" time="0.061" /><testcase classname="tests.test_optic.TestOptic" name="test_trace[backend=numpy]" time="0.210" /><testcase classname="tests.test_optic.TestOptic" name="test_trace[backend=torch]" time="0.370" /><testcase classname="tests.test_optic.TestOptic" name="test_trace_generic[backend=numpy]" time="0.083" /><testcase classname="tests.test_optic.TestOptic" name="test_trace_generic[backend=torch]" time="0.111" /><testcase classname="tests.test_optic.TestOptic" name="test_trace_invalid_field[backend=numpy]" time="0.053" /><testcase classname="tests.test_optic.TestOptic" name="test_trace_invalid_field[backend=torch]" time="0.049" /><testcase classname="tests.test_optic.TestOptic" name="test_trace_generic_invalid_field[backend=numpy]" time="0.074" /><testcase classname="tests.test_optic.TestOptic" name="test_trace_generic_invalid_field[backend=torch]" time="0.064" /><testcase classname="tests.test_optic.TestOptic" name="test_trace_generic_invalid_pupil[backend=numpy]" time="0.049" /><testcase classname="tests.test_optic.TestOptic" name="test_trace_generic_invalid_pupil[backend=torch]" time="0.048" /><testcase classname="tests.test_optic.TestOptic" name="test_trace_polarized[backend=numpy]" time="0.344" /><testcase classname="tests.test_optic.TestOptic" name="test_trace_polarized[backend=torch]" time="0.480" /><testcase classname="tests.test_optic.TestOptic" name="test_object_property[backend=numpy]" time="0.001" /><testcase classname="tests.test_optic.TestOptic" name="test_object_property[backend=torch]" time="0.001" /><testcase classname="tests.test_optic.TestOptic" name="test_image_surface_property[backend=numpy]" time="0.001" /><testcase classname="tests.test_optic.TestOptic" name="test_image_surface_property[backend=torch]" time="0.001" /><testcase classname="tests.test_optic.TestOptic" name="test_total_track_property[backend=numpy]" time="0.056" /><testcase classname="tests.test_optic.TestOptic" name="test_total_track_property[backend=torch]" time="0.054" /><testcase classname="tests.test_optic.TestOptic" name="test_total_track_error[backend=numpy]" time="0.051" /><testcase classname="tests.test_optic.TestOptic" name="test_total_track_error[backend=torch]" time="0.062" /><testcase classname="tests.test_optic.TestOptic" name="test_polarization_state_property[backend=numpy]" time="0.088" /><testcase classname="tests.test_optic.TestOptic" name="test_polarization_state_property[backend=torch]" time="0.058" /><testcase classname="tests.test_optic.TestOptic" name="test_polarization_state_error[backend=numpy]" time="0.054" /><testcase classname="tests.test_optic.TestOptic" name="test_polarization_state_error[backend=torch]" time="0.056" /><testcase classname="tests.test_optic.TestOptic" name="test_to_dict[backend=numpy]" time="0.069" /><testcase classname="tests.test_optic.TestOptic" name="test_to_dict[backend=torch]" time="0.086" /><testcase classname="tests.test_optic.TestOptic" name="test_from_dict[backend=numpy]" time="0.291" /><testcase classname="tests.test_optic.TestOptic" name="test_from_dict[backend=torch]" time="0.287" /><testcase classname="tests.test_optic.TestOptic" name="test_invalid_field_type[backend=numpy]" time="0.001" /><testcase classname="tests.test_optic.TestOptic" name="test_invalid_field_type[backend=torch]" time="0.001" /><testcase classname="tests.test_optic.TestOptic" name="test_no_stop[backend=numpy]" time="0.001" /><testcase classname="tests.test_optic.TestOptic" name="test_no_stop[backend=torch]" time="0.001" /><testcase classname="tests.test_optic.TestOptic" name="test_add_infinite_object" time="0.033" /><testcase classname="tests.test_optic.TestOptic" name="test_add_finite_object" time="0.029" /><testcase classname="tests.test_optic.TestOptic" name="test_invalid_coordinate_system[backend=numpy]" time="0.001" /><testcase classname="tests.test_optic.TestOptic" name="test_invalid_coordinate_system[backend=torch]" time="0.001" /><testcase classname="tests.test_optic.TestOptic" name="test_flip_optic[backend=numpy]" time="0.055" /><testcase classname="tests.test_optic.TestOptic" name="test_flip_optic[backend=torch]" time="0.058" /><testcase classname="tests.test_optic.TestOptic" name="test_invalid_flip[backend=numpy]" time="0.001" /><testcase classname="tests.test_optic.TestOptic" name="test_invalid_flip[backend=torch]" time="0.001" /><testcase classname="tests.test_optic.TestOptic" name="test_flip_solves_pickups[backend=numpy]" time="0.020" /><testcase classname="tests.test_optic.TestOptic" name="test_flip_solves_pickups[backend=torch]" time="0.052" /><testcase classname="tests.test_optic.TestOptic" name="test_plot_surface_sag[backend=numpy]" time="0.012" /><testcase classname="tests.test_optic.TestOptic" name="test_plot_surface_sag[backend=torch]" time="0.018" /><testcase classname="tests.test_optimization.TestOptimizationProblem" name="test_add_operand" time="0.200" /><testcase classname="tests.test_optimization.TestOptimizationProblem" name="test_add_variable" time="0.103" /><testcase classname="tests.test_optimization.TestOptimizationProblem" name="test_clear_operands" time="0.119" /><testcase classname="tests.test_optimization.TestOptimizationProblem" name="test_clear_variables" time="0.089" /><testcase classname="tests.test_optimization.TestOptimizationProblem" name="test_fun_array" time="0.134" /><testcase classname="tests.test_optimization.TestOptimizationProblem" name="test_sum_squared" time="0.139" /><testcase classname="tests.test_optimization.TestOptimizationProblem" name="test_rss" time="0.026" /><testcase classname="tests.test_optimization.TestOptimizationProblem" name="test_update_optics" time="0.028" /><testcase classname="tests.test_optimization.TestOptimizationProblem" name="test_operand_info" time="0.065" /><testcase classname="tests.test_optimization.TestOptimizationProblem" name="test_variable_info" time="0.105" /><testcase classname="tests.test_optimization.TestOptimizationProblem" name="test_merit_info" time="0.116" /><testcase classname="tests.test_optimization.TestOptimizationProblem" name="test_info" time="0.031" /><testcase classname="tests.test_optimization.TestOptimizerGeneric" name="test_optimize" time="0.110" /><testcase classname="tests.test_optimization.TestOptimizerGeneric" name="test_undo" time="0.105" /><testcase classname="tests.test_optimization.TestOptimizerGeneric" name="test_fun_nan_rss" time="0.379" /><testcase classname="tests.test_optimization.TestLeastSquares" name="test_optimize" time="0.084" /><testcase classname="tests.test_optimization.TestLeastSquares" name="test_no_bounds" time="0.080" /><testcase classname="tests.test_optimization.TestLeastSquares" name="test_verbose" time="0.103" /><testcase classname="tests.test_optimization.TestLeastSquares" name="test_method_trf_with_bounds" time="0.129" /><testcase classname="tests.test_optimization.TestLeastSquares" name="test_method_dogbox_with_bounds" time="0.115" /><testcase classname="tests.test_optimization.TestLeastSquares" name="test_method_lm_with_bounds_warning" time="0.116" /><testcase classname="tests.test_optimization.TestLeastSquares" name="test_unknown_method_choice_warning" time="0.085" /><testcase classname="tests.test_optimization.TestLeastSquaresErrorHandling" name="test_nan_residual_handling" time="0.072" /><testcase classname="tests.test_optimization.TestLeastSquaresErrorHandling" name="test_exception_in_residual_handling" time="0.076" /><testcase classname="tests.test_optimization.TestLeastSquaresErrorHandling" name="test_optimize_no_operands" time="0.077" /><testcase classname="tests.test_optimization.TestDualAnnealing" name="test_optimize" time="0.102" /><testcase classname="tests.test_optimization.TestDualAnnealing" name="test_raise_error_no_bounds" time="0.081" /><testcase classname="tests.test_optimization.TestDifferentialEvolution" name="test_optimize" time="0.122" /><testcase classname="tests.test_optimization.TestDifferentialEvolution" name="test_raise_error_no_bounds" time="0.079" /><testcase classname="tests.test_optimization.TestDifferentialEvolution" name="test_workers" time="0.157" /><testcase classname="tests.test_optimization.TestSHGO" name="test_optimize" time="10.065" /><testcase classname="tests.test_optimization.TestSHGO" name="test_raise_error_no_bounds" time="0.133" /><testcase classname="tests.test_optimization.TestBasinHopping" name="test_optimize" time="1.008" /><testcase classname="tests.test_optimization.TestBasinHopping" name="test_raise_error_with_bounds" time="0.083" /><testcase classname="tests.test_optimization.TestGlassExpert" name="test_optimize" time="0.197" /><testcase classname="tests.test_optimization.TestGlassExpert" name="test_optimize_fail_num_neighbours" time="0.090" /><testcase classname="tests.test_optimization.TestGlassExpert" name="test_vprint_verbose_true" time="0.047" /><testcase classname="tests.test_optimization.TestGlassExpert" name="test_vprint_verbose_false" time="0.035" /><testcase classname="tests.test_optimization.TestOptimizerWithBounds" name="test_optimize_with_reciprocal_scaler_and_min_bounds" time="0.111" /><testcase classname="tests.test_optimization.TestOptimizerWithBounds" name="test_optimize_with_reciprocal_scaler_and_max_bounds" time="0.090" /><testcase classname="tests.test_optimization.TestOptimizerWithBounds" name="test_optimize_with_reciprocal_scaler_and_crossing_bounds" time="0.112" /><testcase classname="tests.test_optimization_scaling.TestIdentityScaler" name="test_scale[backend=numpy]" time="0.001" /><testcase classname="tests.test_optimization_scaling.TestIdentityScaler" name="test_scale[backend=torch]" time="0.001" /><testcase classname="tests.test_optimization_scaling.TestIdentityScaler" name="test_inverse_scale[backend=numpy]" time="0.002" /><testcase classname="tests.test_optimization_scaling.TestIdentityScaler" name="test_inverse_scale[backend=torch]" time="0.001" /><testcase classname="tests.test_optimization_scaling.TestLinearScaler" name="test_scale[backend=numpy]" time="0.002" /><testcase classname="tests.test_optimization_scaling.TestLinearScaler" name="test_scale[backend=torch]" time="0.001" /><testcase classname="tests.test_optimization_scaling.TestLinearScaler" name="test_inverse_scale[backend=numpy]" time="0.001" /><testcase classname="tests.test_optimization_scaling.TestLinearScaler" name="test_inverse_scale[backend=torch]" time="0.001" /><testcase classname="tests.test_optimization_scaling.TestReciprocalScaler" name="test_scale[backend=numpy]" time="0.001" /><testcase classname="tests.test_optimization_scaling.TestReciprocalScaler" name="test_scale[backend=torch]" time="0.001" /><testcase classname="tests.test_optimization_scaling.TestReciprocalScaler" name="test_inverse_scale[backend=numpy]" time="0.001" /><testcase classname="tests.test_optimization_scaling.TestReciprocalScaler" name="test_inverse_scale[backend=torch]" time="0.001" /><testcase classname="tests.test_optimization_scaling.TestReciprocalScaler" name="test_scale_zero[backend=numpy]" time="0.001" /><testcase classname="tests.test_optimization_scaling.TestReciprocalScaler" name="test_scale_zero[backend=torch]" time="0.001" /><testcase classname="tests.test_optimization_scaling.TestReciprocalScaler" name="test_inverse_scale_zero[backend=numpy]" time="0.001" /><testcase classname="tests.test_optimization_scaling.TestReciprocalScaler" name="test_inverse_scale_zero[backend=torch]" time="0.001" /><testcase classname="tests.test_optimization_scaling.TestPowerScaler" name="test_scale[backend=numpy]" time="0.001" /><testcase classname="tests.test_optimization_scaling.TestPowerScaler" name="test_scale[backend=torch]" time="0.001" /><testcase classname="tests.test_optimization_scaling.TestPowerScaler" name="test_inverse_scale[backend=numpy]" time="0.001" /><testcase classname="tests.test_optimization_scaling.TestPowerScaler" name="test_inverse_scale[backend=torch]" time="0.001" /><testcase classname="tests.test_optimization_scaling.TestLogScaler" name="test_scale[backend=numpy]" time="0.001" /><testcase classname="tests.test_optimization_scaling.TestLogScaler" name="test_scale[backend=torch]" time="0.007" /><testcase classname="tests.test_optimization_scaling.TestLogScaler" name="test_inverse_scale[backend=numpy]" time="0.001" /><testcase classname="tests.test_optimization_scaling.TestLogScaler" name="test_inverse_scale[backend=torch]" time="0.001" /><testcase classname="tests.test_paraxial" name="test_paraxial_init[backend=numpy]" time="0.001" /><testcase classname="tests.test_paraxial" name="test_paraxial_init[backend=torch]" time="0.002" /><testcase classname="tests.test_paraxial" name="test_calculate_f1[backend=numpy-optic_and_values0]" time="0.144" /><testcase classname="tests.test_paraxial" name="test_calculate_f1[backend=numpy-optic_and_values1]" time="0.002" /><testcase classname="tests.test_paraxial" name="test_calculate_f1[backend=numpy-optic_and_values2]" time="0.002" /><testcase classname="tests.test_paraxial" name="test_calculate_f1[backend=numpy-optic_and_values3]" time="0.003" /><testcase classname="tests.test_paraxial" name="test_calculate_f1[backend=numpy-optic_and_values4]" time="0.013" /><testcase classname="tests.test_paraxial" name="test_calculate_f1[backend=numpy-optic_and_values5]" time="0.014" /><testcase classname="tests.test_paraxial" name="test_calculate_f1[backend=numpy-optic_and_values6]" time="0.058" /><testcase classname="tests.test_paraxial" name="test_calculate_f1[backend=numpy-optic_and_values7]" time="0.050" /><testcase classname="tests.test_paraxial" name="test_calculate_f1[backend=numpy-optic_and_values8]" time="0.036" /><testcase classname="tests.test_paraxial" name="test_calculate_f1[backend=numpy-optic_and_values9]" time="0.034" /><testcase classname="tests.test_paraxial" name="test_calculate_f1[backend=numpy-optic_and_values10]" time="0.062" /><testcase classname="tests.test_paraxial" name="test_calculate_f1[backend=numpy-optic_and_values11]" time="0.062" /><testcase classname="tests.test_paraxial" name="test_calculate_f1[backend=numpy-optic_and_values12]" time="0.267" /><testcase classname="tests.test_paraxial" name="test_calculate_f1[backend=numpy-optic_and_values13]" time="0.086" /><testcase classname="tests.test_paraxial" name="test_calculate_f1[backend=numpy-optic_and_values14]" time="0.052" /><testcase classname="tests.test_paraxial" name="test_calculate_f1[backend=numpy-optic_and_values15]" time="0.059" /><testcase classname="tests.test_paraxial" name="test_calculate_f1[backend=numpy-optic_and_values16]" time="0.116" /><testcase classname="tests.test_paraxial" name="test_calculate_f1[backend=numpy-optic_and_values17]" time="0.068" /><testcase classname="tests.test_paraxial" name="test_calculate_f1[backend=numpy-optic_and_values18]" time="0.182" /><testcase classname="tests.test_paraxial" name="test_calculate_f1[backend=numpy-optic_and_values19]" time="0.003" /><testcase classname="tests.test_paraxial" name="test_calculate_f1[backend=torch-optic_and_values0]" time="0.071" /><testcase classname="tests.test_paraxial" name="test_calculate_f1[backend=torch-optic_and_values1]" time="0.005" /><testcase classname="tests.test_paraxial" name="test_calculate_f1[backend=torch-optic_and_values2]" time="0.010" /><testcase classname="tests.test_paraxial" name="test_calculate_f1[backend=torch-optic_and_values3]" time="0.008" /><testcase classname="tests.test_paraxial" name="test_calculate_f1[backend=torch-optic_and_values4]" time="0.019" /><testcase classname="tests.test_paraxial" name="test_calculate_f1[backend=torch-optic_and_values5]" time="0.016" /><testcase classname="tests.test_paraxial" name="test_calculate_f1[backend=torch-optic_and_values6]" time="0.036" /><testcase classname="tests.test_paraxial" name="test_calculate_f1[backend=torch-optic_and_values7]" time="0.041" /><testcase classname="tests.test_paraxial" name="test_calculate_f1[backend=torch-optic_and_values8]" time="0.044" /><testcase classname="tests.test_paraxial" name="test_calculate_f1[backend=torch-optic_and_values9]" time="0.044" /><testcase classname="tests.test_paraxial" name="test_calculate_f1[backend=torch-optic_and_values10]" time="0.071" /><testcase classname="tests.test_paraxial" name="test_calculate_f1[backend=torch-optic_and_values11]" time="0.076" /><testcase classname="tests.test_paraxial" name="test_calculate_f1[backend=torch-optic_and_values12]" time="0.165" /><testcase classname="tests.test_paraxial" name="test_calculate_f1[backend=torch-optic_and_values13]" time="0.057" /><testcase classname="tests.test_paraxial" name="test_calculate_f1[backend=torch-optic_and_values14]" time="0.055" /><testcase classname="tests.test_paraxial" name="test_calculate_f1[backend=torch-optic_and_values15]" time="0.052" /><testcase classname="tests.test_paraxial" name="test_calculate_f1[backend=torch-optic_and_values16]" time="0.097" /><testcase classname="tests.test_paraxial" name="test_calculate_f1[backend=torch-optic_and_values17]" time="0.104" /><testcase classname="tests.test_paraxial" name="test_calculate_f1[backend=torch-optic_and_values18]" time="0.119" /><testcase classname="tests.test_paraxial" name="test_calculate_f1[backend=torch-optic_and_values19]" time="0.005" /><testcase classname="tests.test_paraxial" name="test_calculate_f2[backend=numpy-optic_and_values0]" time="0.069" /><testcase classname="tests.test_paraxial" name="test_calculate_f2[backend=numpy-optic_and_values1]" time="0.003" /><testcase classname="tests.test_paraxial" name="test_calculate_f2[backend=numpy-optic_and_values2]" time="0.005" /><testcase classname="tests.test_paraxial" name="test_calculate_f2[backend=numpy-optic_and_values3]" time="0.006" /><testcase classname="tests.test_paraxial" name="test_calculate_f2[backend=numpy-optic_and_values4]" time="0.017" /><testcase classname="tests.test_paraxial" name="test_calculate_f2[backend=numpy-optic_and_values5]" time="0.020" /><testcase classname="tests.test_paraxial" name="test_calculate_f2[backend=numpy-optic_and_values6]" time="0.044" /><testcase classname="tests.test_paraxial" name="test_calculate_f2[backend=numpy-optic_and_values7]" time="0.040" /><testcase classname="tests.test_paraxial" name="test_calculate_f2[backend=numpy-optic_and_values8]" time="0.053" /><testcase classname="tests.test_paraxial" name="test_calculate_f2[backend=numpy-optic_and_values9]" time="0.050" /><testcase classname="tests.test_paraxial" name="test_calculate_f2[backend=numpy-optic_and_values10]" time="0.080" /><testcase classname="tests.test_paraxial" name="test_calculate_f2[backend=numpy-optic_and_values11]" time="0.085" /><testcase classname="tests.test_paraxial" name="test_calculate_f2[backend=numpy-optic_and_values12]" time="0.136" /><testcase classname="tests.test_paraxial" name="test_calculate_f2[backend=numpy-optic_and_values13]" time="0.045" /><testcase classname="tests.test_paraxial" name="test_calculate_f2[backend=numpy-optic_and_values14]" time="0.049" /><testcase classname="tests.test_paraxial" name="test_calculate_f2[backend=numpy-optic_and_values15]" time="0.046" /><testcase classname="tests.test_paraxial" name="test_calculate_f2[backend=numpy-optic_and_values16]" time="0.058" /><testcase classname="tests.test_paraxial" name="test_calculate_f2[backend=numpy-optic_and_values17]" time="0.050" /><testcase classname="tests.test_paraxial" name="test_calculate_f2[backend=numpy-optic_and_values18]" time="0.059" /><testcase classname="tests.test_paraxial" name="test_calculate_f2[backend=numpy-optic_and_values19]" time="0.002" /><testcase classname="tests.test_paraxial" name="test_calculate_f2[backend=torch-optic_and_values0]" time="0.062" /><testcase classname="tests.test_paraxial" name="test_calculate_f2[backend=torch-optic_and_values1]" time="0.005" /><testcase classname="tests.test_paraxial" name="test_calculate_f2[backend=torch-optic_and_values2]" time="0.008" /><testcase classname="tests.test_paraxial" name="test_calculate_f2[backend=torch-optic_and_values3]" time="0.004" /><testcase classname="tests.test_paraxial" name="test_calculate_f2[backend=torch-optic_and_values4]" time="0.016" /><testcase classname="tests.test_paraxial" name="test_calculate_f2[backend=torch-optic_and_values5]" time="0.015" /><testcase classname="tests.test_paraxial" name="test_calculate_f2[backend=torch-optic_and_values6]" time="0.034" /><testcase classname="tests.test_paraxial" name="test_calculate_f2[backend=torch-optic_and_values7]" time="0.034" /><testcase classname="tests.test_paraxial" name="test_calculate_f2[backend=torch-optic_and_values8]" time="0.041" /><testcase classname="tests.test_paraxial" name="test_calculate_f2[backend=torch-optic_and_values9]" time="0.037" /><testcase classname="tests.test_paraxial" name="test_calculate_f2[backend=torch-optic_and_values10]" time="0.082" /><testcase classname="tests.test_paraxial" name="test_calculate_f2[backend=torch-optic_and_values11]" time="0.102" /><testcase classname="tests.test_paraxial" name="test_calculate_f2[backend=torch-optic_and_values12]" time="0.178" /><testcase classname="tests.test_paraxial" name="test_calculate_f2[backend=torch-optic_and_values13]" time="0.061" /><testcase classname="tests.test_paraxial" name="test_calculate_f2[backend=torch-optic_and_values14]" time="0.111" /><testcase classname="tests.test_paraxial" name="test_calculate_f2[backend=torch-optic_and_values15]" time="0.077" /><testcase classname="tests.test_paraxial" name="test_calculate_f2[backend=torch-optic_and_values16]" time="0.102" /><testcase classname="tests.test_paraxial" name="test_calculate_f2[backend=torch-optic_and_values17]" time="0.081" /><testcase classname="tests.test_paraxial" name="test_calculate_f2[backend=torch-optic_and_values18]" time="0.088" /><testcase classname="tests.test_paraxial" name="test_calculate_f2[backend=torch-optic_and_values19]" time="0.004" /><testcase classname="tests.test_paraxial" name="test_calculate_F1[backend=numpy-optic_and_values0]" time="0.059" /><testcase classname="tests.test_paraxial" name="test_calculate_F1[backend=numpy-optic_and_values1]" time="0.002" /><testcase classname="tests.test_paraxial" name="test_calculate_F1[backend=numpy-optic_and_values2]" time="0.002" /><testcase classname="tests.test_paraxial" name="test_calculate_F1[backend=numpy-optic_and_values3]" time="0.004" /><testcase classname="tests.test_paraxial" name="test_calculate_F1[backend=numpy-optic_and_values4]" time="0.013" /><testcase classname="tests.test_paraxial" name="test_calculate_F1[backend=numpy-optic_and_values5]" time="0.014" /><testcase classname="tests.test_paraxial" name="test_calculate_F1[backend=numpy-optic_and_values6]" time="0.032" /><testcase classname="tests.test_paraxial" name="test_calculate_F1[backend=numpy-optic_and_values7]" time="0.023" /><testcase classname="tests.test_paraxial" name="test_calculate_F1[backend=numpy-optic_and_values8]" time="0.043" /><testcase classname="tests.test_paraxial" name="test_calculate_F1[backend=numpy-optic_and_values9]" time="0.035" /><testcase classname="tests.test_paraxial" name="test_calculate_F1[backend=numpy-optic_and_values10]" time="0.077" /><testcase classname="tests.test_paraxial" name="test_calculate_F1[backend=numpy-optic_and_values11]" time="0.063" /><testcase classname="tests.test_paraxial" name="test_calculate_F1[backend=numpy-optic_and_values12]" time="0.145" /><testcase classname="tests.test_paraxial" name="test_calculate_F1[backend=numpy-optic_and_values13]" time="0.057" /><testcase classname="tests.test_paraxial" name="test_calculate_F1[backend=numpy-optic_and_values14]" time="0.066" /><testcase classname="tests.test_paraxial" name="test_calculate_F1[backend=numpy-optic_and_values15]" time="0.054" /><testcase classname="tests.test_paraxial" name="test_calculate_F1[backend=numpy-optic_and_values16]" time="0.091" /><testcase classname="tests.test_paraxial" name="test_calculate_F1[backend=numpy-optic_and_values17]" time="0.075" /><testcase classname="tests.test_paraxial" name="test_calculate_F1[backend=numpy-optic_and_values18]" time="0.087" /><testcase classname="tests.test_paraxial" name="test_calculate_F1[backend=numpy-optic_and_values19]" time="0.003" /><testcase classname="tests.test_paraxial" name="test_calculate_F1[backend=torch-optic_and_values0]" time="0.064" /><testcase classname="tests.test_paraxial" name="test_calculate_F1[backend=torch-optic_and_values1]" time="0.003" /><testcase classname="tests.test_paraxial" name="test_calculate_F1[backend=torch-optic_and_values2]" time="0.010" /><testcase classname="tests.test_paraxial" name="test_calculate_F1[backend=torch-optic_and_values3]" time="0.008" /><testcase classname="tests.test_paraxial" name="test_calculate_F1[backend=torch-optic_and_values4]" time="0.022" /><testcase classname="tests.test_paraxial" name="test_calculate_F1[backend=torch-optic_and_values5]" time="0.019" /><testcase classname="tests.test_paraxial" name="test_calculate_F1[backend=torch-optic_and_values6]" time="0.053" /><testcase classname="tests.test_paraxial" name="test_calculate_F1[backend=torch-optic_and_values7]" time="0.034" /><testcase classname="tests.test_paraxial" name="test_calculate_F1[backend=torch-optic_and_values8]" time="0.057" /><testcase classname="tests.test_paraxial" name="test_calculate_F1[backend=torch-optic_and_values9]" time="0.057" /><testcase classname="tests.test_paraxial" name="test_calculate_F1[backend=torch-optic_and_values10]" time="0.103" /><testcase classname="tests.test_paraxial" name="test_calculate_F1[backend=torch-optic_and_values11]" time="0.084" /><testcase classname="tests.test_paraxial" name="test_calculate_F1[backend=torch-optic_and_values12]" time="0.171" /><testcase classname="tests.test_paraxial" name="test_calculate_F1[backend=torch-optic_and_values13]" time="0.049" /><testcase classname="tests.test_paraxial" name="test_calculate_F1[backend=torch-optic_and_values14]" time="0.065" /><testcase classname="tests.test_paraxial" name="test_calculate_F1[backend=torch-optic_and_values15]" time="0.073" /><testcase classname="tests.test_paraxial" name="test_calculate_F1[backend=torch-optic_and_values16]" time="0.127" /><testcase classname="tests.test_paraxial" name="test_calculate_F1[backend=torch-optic_and_values17]" time="0.075" /><testcase classname="tests.test_paraxial" name="test_calculate_F1[backend=torch-optic_and_values18]" time="0.092" /><testcase classname="tests.test_paraxial" name="test_calculate_F1[backend=torch-optic_and_values19]" time="0.006" /><testcase classname="tests.test_paraxial" name="test_calculate_F2[backend=numpy-optic_and_values0]" time="0.059" /><testcase classname="tests.test_paraxial" name="test_calculate_F2[backend=numpy-optic_and_values1]" time="0.001" /><testcase classname="tests.test_paraxial" name="test_calculate_F2[backend=numpy-optic_and_values2]" time="0.003" /><testcase classname="tests.test_paraxial" name="test_calculate_F2[backend=numpy-optic_and_values3]" time="0.004" /><testcase classname="tests.test_paraxial" name="test_calculate_F2[backend=numpy-optic_and_values4]" time="0.016" /><testcase classname="tests.test_paraxial" name="test_calculate_F2[backend=numpy-optic_and_values5]" time="0.014" /><testcase classname="tests.test_paraxial" name="test_calculate_F2[backend=numpy-optic_and_values6]" time="0.039" /><testcase classname="tests.test_paraxial" name="test_calculate_F2[backend=numpy-optic_and_values7]" time="0.030" /><testcase classname="tests.test_paraxial" name="test_calculate_F2[backend=numpy-optic_and_values8]" time="0.054" /><testcase classname="tests.test_paraxial" name="test_calculate_F2[backend=numpy-optic_and_values9]" time="0.038" /><testcase classname="tests.test_paraxial" name="test_calculate_F2[backend=numpy-optic_and_values10]" time="0.075" /><testcase classname="tests.test_paraxial" name="test_calculate_F2[backend=numpy-optic_and_values11]" time="0.077" /><testcase classname="tests.test_paraxial" name="test_calculate_F2[backend=numpy-optic_and_values12]" time="0.118" /><testcase classname="tests.test_paraxial" name="test_calculate_F2[backend=numpy-optic_and_values13]" time="0.042" /><testcase classname="tests.test_paraxial" name="test_calculate_F2[backend=numpy-optic_and_values14]" time="0.051" /><testcase classname="tests.test_paraxial" name="test_calculate_F2[backend=numpy-optic_and_values15]" time="0.049" /><testcase classname="tests.test_paraxial" name="test_calculate_F2[backend=numpy-optic_and_values16]" time="0.061" /><testcase classname="tests.test_paraxial" name="test_calculate_F2[backend=numpy-optic_and_values17]" time="0.053" /><testcase classname="tests.test_paraxial" name="test_calculate_F2[backend=numpy-optic_and_values18]" time="0.064" /><testcase classname="tests.test_paraxial" name="test_calculate_F2[backend=numpy-optic_and_values19]" time="0.004" /><testcase classname="tests.test_paraxial" name="test_calculate_F2[backend=torch-optic_and_values0]" time="0.095" /><testcase classname="tests.test_paraxial" name="test_calculate_F2[backend=torch-optic_and_values1]" time="0.003" /><testcase classname="tests.test_paraxial" name="test_calculate_F2[backend=torch-optic_and_values2]" time="0.005" /><testcase classname="tests.test_paraxial" name="test_calculate_F2[backend=torch-optic_and_values3]" time="0.010" /><testcase classname="tests.test_paraxial" name="test_calculate_F2[backend=torch-optic_and_values4]" time="0.028" /><testcase classname="tests.test_paraxial" name="test_calculate_F2[backend=torch-optic_and_values5]" time="0.024" /><testcase classname="tests.test_paraxial" name="test_calculate_F2[backend=torch-optic_and_values6]" time="0.051" /><testcase classname="tests.test_paraxial" name="test_calculate_F2[backend=torch-optic_and_values7]" time="0.047" /><testcase classname="tests.test_paraxial" name="test_calculate_F2[backend=torch-optic_and_values8]" time="0.058" /><testcase classname="tests.test_paraxial" name="test_calculate_F2[backend=torch-optic_and_values9]" time="0.037" /><testcase classname="tests.test_paraxial" name="test_calculate_F2[backend=torch-optic_and_values10]" time="0.096" /><testcase classname="tests.test_paraxial" name="test_calculate_F2[backend=torch-optic_and_values11]" time="0.081" /><testcase classname="tests.test_paraxial" name="test_calculate_F2[backend=torch-optic_and_values12]" time="0.172" /><testcase classname="tests.test_paraxial" name="test_calculate_F2[backend=torch-optic_and_values13]" time="0.047" /><testcase classname="tests.test_paraxial" name="test_calculate_F2[backend=torch-optic_and_values14]" time="0.056" /><testcase classname="tests.test_paraxial" name="test_calculate_F2[backend=torch-optic_and_values15]" time="0.062" /><testcase classname="tests.test_paraxial" name="test_calculate_F2[backend=torch-optic_and_values16]" time="0.126" /><testcase classname="tests.test_paraxial" name="test_calculate_F2[backend=torch-optic_and_values17]" time="0.109" /><testcase classname="tests.test_paraxial" name="test_calculate_F2[backend=torch-optic_and_values18]" time="0.097" /><testcase classname="tests.test_paraxial" name="test_calculate_F2[backend=torch-optic_and_values19]" time="0.009" /><testcase classname="tests.test_paraxial" name="test_calculate_P1[backend=numpy-optic_and_values0]" time="0.068" /><testcase classname="tests.test_paraxial" name="test_calculate_P1[backend=numpy-optic_and_values1]" time="0.002" /><testcase classname="tests.test_paraxial" name="test_calculate_P1[backend=numpy-optic_and_values2]" time="0.004" /><testcase classname="tests.test_paraxial" name="test_calculate_P1[backend=numpy-optic_and_values3]" time="0.007" /><testcase classname="tests.test_paraxial" name="test_calculate_P1[backend=numpy-optic_and_values4]" time="0.021" /><testcase classname="tests.test_paraxial" name="test_calculate_P1[backend=numpy-optic_and_values5]" time="0.020" /><testcase classname="tests.test_paraxial" name="test_calculate_P1[backend=numpy-optic_and_values6]" time="0.048" /><testcase classname="tests.test_paraxial" name="test_calculate_P1[backend=numpy-optic_and_values7]" time="0.039" /><testcase classname="tests.test_paraxial" name="test_calculate_P1[backend=numpy-optic_and_values8]" time="0.051" /><testcase classname="tests.test_paraxial" name="test_calculate_P1[backend=numpy-optic_and_values9]" time="0.052" /><testcase classname="tests.test_paraxial" name="test_calculate_P1[backend=numpy-optic_and_values10]" time="0.089" /><testcase classname="tests.test_paraxial" name="test_calculate_P1[backend=numpy-optic_and_values11]" time="0.065" /><testcase classname="tests.test_paraxial" name="test_calculate_P1[backend=numpy-optic_and_values12]" time="0.120" /><testcase classname="tests.test_paraxial" name="test_calculate_P1[backend=numpy-optic_and_values13]" time="0.043" /><testcase classname="tests.test_paraxial" name="test_calculate_P1[backend=numpy-optic_and_values14]" time="0.050" /><testcase classname="tests.test_paraxial" name="test_calculate_P1[backend=numpy-optic_and_values15]" time="0.046" /><testcase classname="tests.test_paraxial" name="test_calculate_P1[backend=numpy-optic_and_values16]" time="0.068" /><testcase classname="tests.test_paraxial" name="test_calculate_P1[backend=numpy-optic_and_values17]" time="0.057" /><testcase classname="tests.test_paraxial" name="test_calculate_P1[backend=numpy-optic_and_values18]" time="0.061" /><testcase classname="tests.test_paraxial" name="test_calculate_P1[backend=numpy-optic_and_values19]" time="0.002" /><testcase classname="tests.test_paraxial" name="test_calculate_P1[backend=torch-optic_and_values0]" time="0.060" /><testcase classname="tests.test_paraxial" name="test_calculate_P1[backend=torch-optic_and_values1]" time="0.004" /><testcase classname="tests.test_paraxial" name="test_calculate_P1[backend=torch-optic_and_values2]" time="0.010" /><testcase classname="tests.test_paraxial" name="test_calculate_P1[backend=torch-optic_and_values3]" time="0.005" /><testcase classname="tests.test_paraxial" name="test_calculate_P1[backend=torch-optic_and_values4]" time="0.016" /><testcase classname="tests.test_paraxial" name="test_calculate_P1[backend=torch-optic_and_values5]" time="0.016" /><testcase classname="tests.test_paraxial" name="test_calculate_P1[backend=torch-optic_and_values6]" time="0.033" /><testcase classname="tests.test_paraxial" name="test_calculate_P1[backend=torch-optic_and_values7]" time="0.032" /><testcase classname="tests.test_paraxial" name="test_calculate_P1[backend=torch-optic_and_values8]" time="0.045" /><testcase classname="tests.test_paraxial" name="test_calculate_P1[backend=torch-optic_and_values9]" time="0.044" /><testcase classname="tests.test_paraxial" name="test_calculate_P1[backend=torch-optic_and_values10]" time="0.077" /><testcase classname="tests.test_paraxial" name="test_calculate_P1[backend=torch-optic_and_values11]" time="0.073" /><testcase classname="tests.test_paraxial" name="test_calculate_P1[backend=torch-optic_and_values12]" time="0.196" /><testcase classname="tests.test_paraxial" name="test_calculate_P1[backend=torch-optic_and_values13]" time="0.065" /><testcase classname="tests.test_paraxial" name="test_calculate_P1[backend=torch-optic_and_values14]" time="0.085" /><testcase classname="tests.test_paraxial" name="test_calculate_P1[backend=torch-optic_and_values15]" time="0.070" /><testcase classname="tests.test_paraxial" name="test_calculate_P1[backend=torch-optic_and_values16]" time="0.113" /><testcase classname="tests.test_paraxial" name="test_calculate_P1[backend=torch-optic_and_values17]" time="0.084" /><testcase classname="tests.test_paraxial" name="test_calculate_P1[backend=torch-optic_and_values18]" time="0.102" /><testcase classname="tests.test_paraxial" name="test_calculate_P1[backend=torch-optic_and_values19]" time="0.005" /><testcase classname="tests.test_paraxial" name="test_calculate_P2[backend=numpy-optic_and_values0]" time="0.063" /><testcase classname="tests.test_paraxial" name="test_calculate_P2[backend=numpy-optic_and_values1]" time="0.003" /><testcase classname="tests.test_paraxial" name="test_calculate_P2[backend=numpy-optic_and_values2]" time="0.004" /><testcase classname="tests.test_paraxial" name="test_calculate_P2[backend=numpy-optic_and_values3]" time="0.006" /><testcase classname="tests.test_paraxial" name="test_calculate_P2[backend=numpy-optic_and_values4]" time="0.015" /><testcase classname="tests.test_paraxial" name="test_calculate_P2[backend=numpy-optic_and_values5]" time="0.014" /><testcase classname="tests.test_paraxial" name="test_calculate_P2[backend=numpy-optic_and_values6]" time="0.034" /><testcase classname="tests.test_paraxial" name="test_calculate_P2[backend=numpy-optic_and_values7]" time="0.029" /><testcase classname="tests.test_paraxial" name="test_calculate_P2[backend=numpy-optic_and_values8]" time="0.048" /><testcase classname="tests.test_paraxial" name="test_calculate_P2[backend=numpy-optic_and_values9]" time="0.045" /><testcase classname="tests.test_paraxial" name="test_calculate_P2[backend=numpy-optic_and_values10]" time="0.076" /><testcase classname="tests.test_paraxial" name="test_calculate_P2[backend=numpy-optic_and_values11]" time="0.068" /><testcase classname="tests.test_paraxial" name="test_calculate_P2[backend=numpy-optic_and_values12]" time="0.136" /><testcase classname="tests.test_paraxial" name="test_calculate_P2[backend=numpy-optic_and_values13]" time="0.059" /><testcase classname="tests.test_paraxial" name="test_calculate_P2[backend=numpy-optic_and_values14]" time="0.071" /><testcase classname="tests.test_paraxial" name="test_calculate_P2[backend=numpy-optic_and_values15]" time="0.065" /><testcase classname="tests.test_paraxial" name="test_calculate_P2[backend=numpy-optic_and_values16]" time="0.096" /><testcase classname="tests.test_paraxial" name="test_calculate_P2[backend=numpy-optic_and_values17]" time="0.072" /><testcase classname="tests.test_paraxial" name="test_calculate_P2[backend=numpy-optic_and_values18]" time="0.072" /><testcase classname="tests.test_paraxial" name="test_calculate_P2[backend=numpy-optic_and_values19]" time="0.005" /><testcase classname="tests.test_paraxial" name="test_calculate_P2[backend=torch-optic_and_values0]" time="0.080" /><testcase classname="tests.test_paraxial" name="test_calculate_P2[backend=torch-optic_and_values1]" time="0.008" /><testcase classname="tests.test_paraxial" name="test_calculate_P2[backend=torch-optic_and_values2]" time="0.018" /><testcase classname="tests.test_paraxial" name="test_calculate_P2[backend=torch-optic_and_values3]" time="0.015" /><testcase classname="tests.test_paraxial" name="test_calculate_P2[backend=torch-optic_and_values4]" time="0.024" /><testcase classname="tests.test_paraxial" name="test_calculate_P2[backend=torch-optic_and_values5]" time="0.020" /><testcase classname="tests.test_paraxial" name="test_calculate_P2[backend=torch-optic_and_values6]" time="0.048" /><testcase classname="tests.test_paraxial" name="test_calculate_P2[backend=torch-optic_and_values7]" time="0.042" /><testcase classname="tests.test_paraxial" name="test_calculate_P2[backend=torch-optic_and_values8]" time="0.054" /><testcase classname="tests.test_paraxial" name="test_calculate_P2[backend=torch-optic_and_values9]" time="0.041" /><testcase classname="tests.test_paraxial" name="test_calculate_P2[backend=torch-optic_and_values10]" time="0.093" /><testcase classname="tests.test_paraxial" name="test_calculate_P2[backend=torch-optic_and_values11]" time="0.096" /><testcase classname="tests.test_paraxial" name="test_calculate_P2[backend=torch-optic_and_values12]" time="0.155" /><testcase classname="tests.test_paraxial" name="test_calculate_P2[backend=torch-optic_and_values13]" time="0.051" /><testcase classname="tests.test_paraxial" name="test_calculate_P2[backend=torch-optic_and_values14]" time="0.086" /><testcase classname="tests.test_paraxial" name="test_calculate_P2[backend=torch-optic_and_values15]" time="0.079" /><testcase classname="tests.test_paraxial" name="test_calculate_P2[backend=torch-optic_and_values16]" time="0.140" /><testcase classname="tests.test_paraxial" name="test_calculate_P2[backend=torch-optic_and_values17]" time="0.121" /><testcase classname="tests.test_paraxial" name="test_calculate_P2[backend=torch-optic_and_values18]" time="0.098" /><testcase classname="tests.test_paraxial" name="test_calculate_P2[backend=torch-optic_and_values19]" time="0.012" /><testcase classname="tests.test_paraxial" name="test_calculate_P1anti[backend=numpy-optic_and_values0]" time="0.062" /><testcase classname="tests.test_paraxial" name="test_calculate_P1anti[backend=numpy-optic_and_values1]" time="0.002" /><testcase classname="tests.test_paraxial" name="test_calculate_P1anti[backend=numpy-optic_and_values2]" time="0.003" /><testcase classname="tests.test_paraxial" name="test_calculate_P1anti[backend=numpy-optic_and_values3]" time="0.003" /><testcase classname="tests.test_paraxial" name="test_calculate_P1anti[backend=numpy-optic_and_values4]" time="0.012" /><testcase classname="tests.test_paraxial" name="test_calculate_P1anti[backend=numpy-optic_and_values5]" time="0.014" /><testcase classname="tests.test_paraxial" name="test_calculate_P1anti[backend=numpy-optic_and_values6]" time="0.030" /><testcase classname="tests.test_paraxial" name="test_calculate_P1anti[backend=numpy-optic_and_values7]" time="0.030" /><testcase classname="tests.test_paraxial" name="test_calculate_P1anti[backend=numpy-optic_and_values8]" time="0.049" /><testcase classname="tests.test_paraxial" name="test_calculate_P1anti[backend=numpy-optic_and_values9]" time="0.043" /><testcase classname="tests.test_paraxial" name="test_calculate_P1anti[backend=numpy-optic_and_values10]" time="0.087" /><testcase classname="tests.test_paraxial" name="test_calculate_P1anti[backend=numpy-optic_and_values11]" time="0.061" /><testcase classname="tests.test_paraxial" name="test_calculate_P1anti[backend=numpy-optic_and_values12]" time="0.134" /><testcase classname="tests.test_paraxial" name="test_calculate_P1anti[backend=numpy-optic_and_values13]" time="0.040" /><testcase classname="tests.test_paraxial" name="test_calculate_P1anti[backend=numpy-optic_and_values14]" time="0.059" /><testcase classname="tests.test_paraxial" name="test_calculate_P1anti[backend=numpy-optic_and_values15]" time="0.048" /><testcase classname="tests.test_paraxial" name="test_calculate_P1anti[backend=numpy-optic_and_values16]" time="0.073" /><testcase classname="tests.test_paraxial" name="test_calculate_P1anti[backend=numpy-optic_and_values17]" time="0.071" /><testcase classname="tests.test_paraxial" name="test_calculate_P1anti[backend=numpy-optic_and_values18]" time="0.083" /><testcase classname="tests.test_paraxial" name="test_calculate_P1anti[backend=numpy-optic_and_values19]" time="0.002" /><testcase classname="tests.test_paraxial" name="test_calculate_P1anti[backend=torch-optic_and_values0]" time="0.107" /><testcase classname="tests.test_paraxial" name="test_calculate_P1anti[backend=torch-optic_and_values1]" time="0.012" /><testcase classname="tests.test_paraxial" name="test_calculate_P1anti[backend=torch-optic_and_values2]" time="0.015" /><testcase classname="tests.test_paraxial" name="test_calculate_P1anti[backend=torch-optic_and_values3]" time="0.011" /><testcase classname="tests.test_paraxial" name="test_calculate_P1anti[backend=torch-optic_and_values4]" time="0.049" /><testcase classname="tests.test_paraxial" name="test_calculate_P1anti[backend=torch-optic_and_values5]" time="0.037" /><testcase classname="tests.test_paraxial" name="test_calculate_P1anti[backend=torch-optic_and_values6]" time="0.064" /><testcase classname="tests.test_paraxial" name="test_calculate_P1anti[backend=torch-optic_and_values7]" time="0.055" /><testcase classname="tests.test_paraxial" name="test_calculate_P1anti[backend=torch-optic_and_values8]" time="0.063" /><testcase classname="tests.test_paraxial" name="test_calculate_P1anti[backend=torch-optic_and_values9]" time="0.054" /><testcase classname="tests.test_paraxial" name="test_calculate_P1anti[backend=torch-optic_and_values10]" time="0.096" /><testcase classname="tests.test_paraxial" name="test_calculate_P1anti[backend=torch-optic_and_values11]" time="0.102" /><testcase classname="tests.test_paraxial" name="test_calculate_P1anti[backend=torch-optic_and_values12]" time="0.184" /><testcase classname="tests.test_paraxial" name="test_calculate_P1anti[backend=torch-optic_and_values13]" time="0.055" /><testcase classname="tests.test_paraxial" name="test_calculate_P1anti[backend=torch-optic_and_values14]" time="0.068" /><testcase classname="tests.test_paraxial" name="test_calculate_P1anti[backend=torch-optic_and_values15]" time="0.068" /><testcase classname="tests.test_paraxial" name="test_calculate_P1anti[backend=torch-optic_and_values16]" time="0.127" /><testcase classname="tests.test_paraxial" name="test_calculate_P1anti[backend=torch-optic_and_values17]" time="0.105" /><testcase classname="tests.test_paraxial" name="test_calculate_P1anti[backend=torch-optic_and_values18]" time="0.135" /><testcase classname="tests.test_paraxial" name="test_calculate_P1anti[backend=torch-optic_and_values19]" time="0.011" /><testcase classname="tests.test_paraxial" name="test_calculate_P2anti[backend=numpy-optic_and_values0]" time="0.070" /><testcase classname="tests.test_paraxial" name="test_calculate_P2anti[backend=numpy-optic_and_values1]" time="0.003" /><testcase classname="tests.test_paraxial" name="test_calculate_P2anti[backend=numpy-optic_and_values2]" time="0.004" /><testcase classname="tests.test_paraxial" name="test_calculate_P2anti[backend=numpy-optic_and_values3]" time="0.004" /><testcase classname="tests.test_paraxial" name="test_calculate_P2anti[backend=numpy-optic_and_values4]" time="0.016" /><testcase classname="tests.test_paraxial" name="test_calculate_P2anti[backend=numpy-optic_and_values5]" time="0.017" /><testcase classname="tests.test_paraxial" name="test_calculate_P2anti[backend=numpy-optic_and_values6]" time="0.035" /><testcase classname="tests.test_paraxial" name="test_calculate_P2anti[backend=numpy-optic_and_values7]" time="0.033" /><testcase classname="tests.test_paraxial" name="test_calculate_P2anti[backend=numpy-optic_and_values8]" time="0.046" /><testcase classname="tests.test_paraxial" name="test_calculate_P2anti[backend=numpy-optic_and_values9]" time="0.041" /><testcase classname="tests.test_paraxial" name="test_calculate_P2anti[backend=numpy-optic_and_values10]" time="0.084" /><testcase classname="tests.test_paraxial" name="test_calculate_P2anti[backend=numpy-optic_and_values11]" time="0.099" /><testcase classname="tests.test_paraxial" name="test_calculate_P2anti[backend=numpy-optic_and_values12]" time="0.179" /><testcase classname="tests.test_paraxial" name="test_calculate_P2anti[backend=numpy-optic_and_values13]" time="0.064" /><testcase classname="tests.test_paraxial" name="test_calculate_P2anti[backend=numpy-optic_and_values14]" time="0.066" /><testcase classname="tests.test_paraxial" name="test_calculate_P2anti[backend=numpy-optic_and_values15]" time="0.058" /><testcase classname="tests.test_paraxial" name="test_calculate_P2anti[backend=numpy-optic_and_values16]" time="0.067" /><testcase classname="tests.test_paraxial" name="test_calculate_P2anti[backend=numpy-optic_and_values17]" time="0.060" /><testcase classname="tests.test_paraxial" name="test_calculate_P2anti[backend=numpy-optic_and_values18]" time="0.084" /><testcase classname="tests.test_paraxial" name="test_calculate_P2anti[backend=numpy-optic_and_values19]" time="0.002" /><testcase classname="tests.test_paraxial" name="test_calculate_P2anti[backend=torch-optic_and_values0]" time="0.093" /><testcase classname="tests.test_paraxial" name="test_calculate_P2anti[backend=torch-optic_and_values1]" time="0.012" /><testcase classname="tests.test_paraxial" name="test_calculate_P2anti[backend=torch-optic_and_values2]" time="0.017" /><testcase classname="tests.test_paraxial" name="test_calculate_P2anti[backend=torch-optic_and_values3]" time="0.015" /><testcase classname="tests.test_paraxial" name="test_calculate_P2anti[backend=torch-optic_and_values4]" time="0.027" /><testcase classname="tests.test_paraxial" name="test_calculate_P2anti[backend=torch-optic_and_values5]" time="0.027" /><testcase classname="tests.test_paraxial" name="test_calculate_P2anti[backend=torch-optic_and_values6]" time="0.051" /><testcase classname="tests.test_paraxial" name="test_calculate_P2anti[backend=torch-optic_and_values7]" time="0.048" /><testcase classname="tests.test_paraxial" name="test_calculate_P2anti[backend=torch-optic_and_values8]" time="0.048" /><testcase classname="tests.test_paraxial" name="test_calculate_P2anti[backend=torch-optic_and_values9]" time="0.047" /><testcase classname="tests.test_paraxial" name="test_calculate_P2anti[backend=torch-optic_and_values10]" time="0.105" /><testcase classname="tests.test_paraxial" name="test_calculate_P2anti[backend=torch-optic_and_values11]" time="0.090" /><testcase classname="tests.test_paraxial" name="test_calculate_P2anti[backend=torch-optic_and_values12]" time="0.164" /><testcase classname="tests.test_paraxial" name="test_calculate_P2anti[backend=torch-optic_and_values13]" time="0.057" /><testcase classname="tests.test_paraxial" name="test_calculate_P2anti[backend=torch-optic_and_values14]" time="0.078" /><testcase classname="tests.test_paraxial" name="test_calculate_P2anti[backend=torch-optic_and_values15]" time="0.058" /><testcase classname="tests.test_paraxial" name="test_calculate_P2anti[backend=torch-optic_and_values16]" time="0.107" /><testcase classname="tests.test_paraxial" name="test_calculate_P2anti[backend=torch-optic_and_values17]" time="0.098" /><testcase classname="tests.test_paraxial" name="test_calculate_P2anti[backend=torch-optic_and_values18]" time="0.133" /><testcase classname="tests.test_paraxial" name="test_calculate_P2anti[backend=torch-optic_and_values19]" time="0.015" /><testcase classname="tests.test_paraxial" name="test_calculate_N1[backend=numpy-optic_and_values0]" time="0.071" /><testcase classname="tests.test_paraxial" name="test_calculate_N1[backend=numpy-optic_and_values1]" time="0.004" /><testcase classname="tests.test_paraxial" name="test_calculate_N1[backend=numpy-optic_and_values2]" time="0.004" /><testcase classname="tests.test_paraxial" name="test_calculate_N1[backend=numpy-optic_and_values3]" time="0.007" /><testcase classname="tests.test_paraxial" name="test_calculate_N1[backend=numpy-optic_and_values4]" time="0.019" /><testcase classname="tests.test_paraxial" name="test_calculate_N1[backend=numpy-optic_and_values5]" time="0.018" /><testcase classname="tests.test_paraxial" name="test_calculate_N1[backend=numpy-optic_and_values6]" time="0.038" /><testcase classname="tests.test_paraxial" name="test_calculate_N1[backend=numpy-optic_and_values7]" time="0.033" /><testcase classname="tests.test_paraxial" name="test_calculate_N1[backend=numpy-optic_and_values8]" time="0.051" /><testcase classname="tests.test_paraxial" name="test_calculate_N1[backend=numpy-optic_and_values9]" time="0.043" /><testcase classname="tests.test_paraxial" name="test_calculate_N1[backend=numpy-optic_and_values10]" time="0.086" /><testcase classname="tests.test_paraxial" name="test_calculate_N1[backend=numpy-optic_and_values11]" time="0.085" /><testcase classname="tests.test_paraxial" name="test_calculate_N1[backend=numpy-optic_and_values12]" time="0.145" /><testcase classname="tests.test_paraxial" name="test_calculate_N1[backend=numpy-optic_and_values13]" time="0.053" /><testcase classname="tests.test_paraxial" name="test_calculate_N1[backend=numpy-optic_and_values14]" time="0.050" /><testcase classname="tests.test_paraxial" name="test_calculate_N1[backend=numpy-optic_and_values15]" time="0.052" /><testcase classname="tests.test_paraxial" name="test_calculate_N1[backend=numpy-optic_and_values16]" time="0.084" /><testcase classname="tests.test_paraxial" name="test_calculate_N1[backend=numpy-optic_and_values17]" time="0.077" /><testcase classname="tests.test_paraxial" name="test_calculate_N1[backend=numpy-optic_and_values18]" time="0.089" /><testcase classname="tests.test_paraxial" name="test_calculate_N1[backend=numpy-optic_and_values19]" time="0.004" /><testcase classname="tests.test_paraxial" name="test_calculate_N1[backend=torch-optic_and_values0]" time="0.099" /><testcase classname="tests.test_paraxial" name="test_calculate_N1[backend=torch-optic_and_values1]" time="0.010" /><testcase classname="tests.test_paraxial" name="test_calculate_N1[backend=torch-optic_and_values2]" time="0.010" /><testcase classname="tests.test_paraxial" name="test_calculate_N1[backend=torch-optic_and_values3]" time="0.020" /><testcase classname="tests.test_paraxial" name="test_calculate_N1[backend=torch-optic_and_values4]" time="0.029" /><testcase classname="tests.test_paraxial" name="test_calculate_N1[backend=torch-optic_and_values5]" time="0.023" /><testcase classname="tests.test_paraxial" name="test_calculate_N1[backend=torch-optic_and_values6]" time="0.062" /><testcase classname="tests.test_paraxial" name="test_calculate_N1[backend=torch-optic_and_values7]" time="0.051" /><testcase classname="tests.test_paraxial" name="test_calculate_N1[backend=torch-optic_and_values8]" time="0.060" /><testcase classname="tests.test_paraxial" name="test_calculate_N1[backend=torch-optic_and_values9]" time="0.063" /><testcase classname="tests.test_paraxial" name="test_calculate_N1[backend=torch-optic_and_values10]" time="0.137" /><testcase classname="tests.test_paraxial" name="test_calculate_N1[backend=torch-optic_and_values11]" time="0.142" /><testcase classname="tests.test_paraxial" name="test_calculate_N1[backend=torch-optic_and_values12]" time="0.192" /><testcase classname="tests.test_paraxial" name="test_calculate_N1[backend=torch-optic_and_values13]" time="0.076" /><testcase classname="tests.test_paraxial" name="test_calculate_N1[backend=torch-optic_and_values14]" time="0.073" /><testcase classname="tests.test_paraxial" name="test_calculate_N1[backend=torch-optic_and_values15]" time="0.065" /><testcase classname="tests.test_paraxial" name="test_calculate_N1[backend=torch-optic_and_values16]" time="0.112" /><testcase classname="tests.test_paraxial" name="test_calculate_N1[backend=torch-optic_and_values17]" time="0.084" /><testcase classname="tests.test_paraxial" name="test_calculate_N1[backend=torch-optic_and_values18]" time="0.097" /><testcase classname="tests.test_paraxial" name="test_calculate_N1[backend=torch-optic_and_values19]" time="0.005" /><testcase classname="tests.test_paraxial" name="test_calculate_N2[backend=numpy-optic_and_values0]" time="0.082" /><testcase classname="tests.test_paraxial" name="test_calculate_N2[backend=numpy-optic_and_values1]" time="0.003" /><testcase classname="tests.test_paraxial" name="test_calculate_N2[backend=numpy-optic_and_values2]" time="0.004" /><testcase classname="tests.test_paraxial" name="test_calculate_N2[backend=numpy-optic_and_values3]" time="0.005" /><testcase classname="tests.test_paraxial" name="test_calculate_N2[backend=numpy-optic_and_values4]" time="0.019" /><testcase classname="tests.test_paraxial" name="test_calculate_N2[backend=numpy-optic_and_values5]" time="0.014" /><testcase classname="tests.test_paraxial" name="test_calculate_N2[backend=numpy-optic_and_values6]" time="0.036" /><testcase classname="tests.test_paraxial" name="test_calculate_N2[backend=numpy-optic_and_values7]" time="0.043" /><testcase classname="tests.test_paraxial" name="test_calculate_N2[backend=numpy-optic_and_values8]" time="0.058" /><testcase classname="tests.test_paraxial" name="test_calculate_N2[backend=numpy-optic_and_values9]" time="0.054" /><testcase classname="tests.test_paraxial" name="test_calculate_N2[backend=numpy-optic_and_values10]" time="0.104" /><testcase classname="tests.test_paraxial" name="test_calculate_N2[backend=numpy-optic_and_values11]" time="0.091" /><testcase classname="tests.test_paraxial" name="test_calculate_N2[backend=numpy-optic_and_values12]" time="0.150" /><testcase classname="tests.test_paraxial" name="test_calculate_N2[backend=numpy-optic_and_values13]" time="0.047" /><testcase classname="tests.test_paraxial" name="test_calculate_N2[backend=numpy-optic_and_values14]" time="0.074" /><testcase classname="tests.test_paraxial" name="test_calculate_N2[backend=numpy-optic_and_values15]" time="0.077" /><testcase classname="tests.test_paraxial" name="test_calculate_N2[backend=numpy-optic_and_values16]" time="0.086" /><testcase classname="tests.test_paraxial" name="test_calculate_N2[backend=numpy-optic_and_values17]" time="0.075" /><testcase classname="tests.test_paraxial" name="test_calculate_N2[backend=numpy-optic_and_values18]" time="0.078" /><testcase classname="tests.test_paraxial" name="test_calculate_N2[backend=numpy-optic_and_values19]" time="0.003" /><testcase classname="tests.test_paraxial" name="test_calculate_N2[backend=torch-optic_and_values0]" time="0.083" /><testcase classname="tests.test_paraxial" name="test_calculate_N2[backend=torch-optic_and_values1]" time="0.008" /><testcase classname="tests.test_paraxial" name="test_calculate_N2[backend=torch-optic_and_values2]" time="0.015" /><testcase classname="tests.test_paraxial" name="test_calculate_N2[backend=torch-optic_and_values3]" time="0.009" /><testcase classname="tests.test_paraxial" name="test_calculate_N2[backend=torch-optic_and_values4]" time="0.024" /><testcase classname="tests.test_paraxial" name="test_calculate_N2[backend=torch-optic_and_values5]" time="0.013" /><testcase classname="tests.test_paraxial" name="test_calculate_N2[backend=torch-optic_and_values6]" time="0.040" /><testcase classname="tests.test_paraxial" name="test_calculate_N2[backend=torch-optic_and_values7]" time="0.042" /><testcase classname="tests.test_paraxial" name="test_calculate_N2[backend=torch-optic_and_values8]" time="0.063" /><testcase classname="tests.test_paraxial" name="test_calculate_N2[backend=torch-optic_and_values9]" time="0.067" /><testcase classname="tests.test_paraxial" name="test_calculate_N2[backend=torch-optic_and_values10]" time="0.096" /><testcase classname="tests.test_paraxial" name="test_calculate_N2[backend=torch-optic_and_values11]" time="0.096" /><testcase classname="tests.test_paraxial" name="test_calculate_N2[backend=torch-optic_and_values12]" time="0.166" /><testcase classname="tests.test_paraxial" name="test_calculate_N2[backend=torch-optic_and_values13]" time="0.060" /><testcase classname="tests.test_paraxial" name="test_calculate_N2[backend=torch-optic_and_values14]" time="0.082" /><testcase classname="tests.test_paraxial" name="test_calculate_N2[backend=torch-optic_and_values15]" time="0.066" /><testcase classname="tests.test_paraxial" name="test_calculate_N2[backend=torch-optic_and_values16]" time="0.108" /><testcase classname="tests.test_paraxial" name="test_calculate_N2[backend=torch-optic_and_values17]" time="0.093" /><testcase classname="tests.test_paraxial" name="test_calculate_N2[backend=torch-optic_and_values18]" time="0.066" /><testcase classname="tests.test_paraxial" name="test_calculate_N2[backend=torch-optic_and_values19]" time="0.009" /><testcase classname="tests.test_paraxial" name="test_calculate_EPL[backend=numpy-optic_and_values0]" time="0.057" /><testcase classname="tests.test_paraxial" name="test_calculate_EPL[backend=numpy-optic_and_values1]" time="0.002" /><testcase classname="tests.test_paraxial" name="test_calculate_EPL[backend=numpy-optic_and_values2]" time="0.003" /><testcase classname="tests.test_paraxial" name="test_calculate_EPL[backend=numpy-optic_and_values3]" time="0.004" /><testcase classname="tests.test_paraxial" name="test_calculate_EPL[backend=numpy-optic_and_values4]" time="0.014" /><testcase classname="tests.test_paraxial" name="test_calculate_EPL[backend=numpy-optic_and_values5]" time="0.016" /><testcase classname="tests.test_paraxial" name="test_calculate_EPL[backend=numpy-optic_and_values6]" time="0.027" /><testcase classname="tests.test_paraxial" name="test_calculate_EPL[backend=numpy-optic_and_values7]" time="0.035" /><testcase classname="tests.test_paraxial" name="test_calculate_EPL[backend=numpy-optic_and_values8]" time="0.044" /><testcase classname="tests.test_paraxial" name="test_calculate_EPL[backend=numpy-optic_and_values9]" time="0.044" /><testcase classname="tests.test_paraxial" name="test_calculate_EPL[backend=numpy-optic_and_values10]" time="0.095" /><testcase classname="tests.test_paraxial" name="test_calculate_EPL[backend=numpy-optic_and_values11]" time="0.080" /><testcase classname="tests.test_paraxial" name="test_calculate_EPL[backend=numpy-optic_and_values12]" time="0.139" /><testcase classname="tests.test_paraxial" name="test_calculate_EPL[backend=numpy-optic_and_values13]" time="0.043" /><testcase classname="tests.test_paraxial" name="test_calculate_EPL[backend=numpy-optic_and_values14]" time="0.054" /><testcase classname="tests.test_paraxial" name="test_calculate_EPL[backend=numpy-optic_and_values15]" time="0.053" /><testcase classname="tests.test_paraxial" name="test_calculate_EPL[backend=numpy-optic_and_values16]" time="0.083" /><testcase classname="tests.test_paraxial" name="test_calculate_EPL[backend=numpy-optic_and_values17]" time="0.050" /><testcase classname="tests.test_paraxial" name="test_calculate_EPL[backend=numpy-optic_and_values18]" time="0.071" /><testcase classname="tests.test_paraxial" name="test_calculate_EPL[backend=numpy-optic_and_values19]" time="0.003" /><testcase classname="tests.test_paraxial" name="test_calculate_EPL[backend=torch-optic_and_values0]" time="0.063" /><testcase classname="tests.test_paraxial" name="test_calculate_EPL[backend=torch-optic_and_values1]" time="0.004" /><testcase classname="tests.test_paraxial" name="test_calculate_EPL[backend=torch-optic_and_values2]" time="0.003" /><testcase classname="tests.test_paraxial" name="test_calculate_EPL[backend=torch-optic_and_values3]" time="0.010" /><testcase classname="tests.test_paraxial" name="test_calculate_EPL[backend=torch-optic_and_values4]" time="0.015" /><testcase classname="tests.test_paraxial" name="test_calculate_EPL[backend=torch-optic_and_values5]" time="0.017" /><testcase classname="tests.test_paraxial" name="test_calculate_EPL[backend=torch-optic_and_values6]" time="0.037" /><testcase classname="tests.test_paraxial" name="test_calculate_EPL[backend=torch-optic_and_values7]" time="0.034" /><testcase classname="tests.test_paraxial" name="test_calculate_EPL[backend=torch-optic_and_values8]" time="0.041" /><testcase classname="tests.test_paraxial" name="test_calculate_EPL[backend=torch-optic_and_values9]" time="0.050" /><testcase classname="tests.test_paraxial" name="test_calculate_EPL[backend=torch-optic_and_values10]" time="0.092" /><testcase classname="tests.test_paraxial" name="test_calculate_EPL[backend=torch-optic_and_values11]" time="0.084" /><testcase classname="tests.test_paraxial" name="test_calculate_EPL[backend=torch-optic_and_values12]" time="0.166" /><testcase classname="tests.test_paraxial" name="test_calculate_EPL[backend=torch-optic_and_values13]" time="0.068" /><testcase classname="tests.test_paraxial" name="test_calculate_EPL[backend=torch-optic_and_values14]" time="0.079" /><testcase classname="tests.test_paraxial" name="test_calculate_EPL[backend=torch-optic_and_values15]" time="0.088" /><testcase classname="tests.test_paraxial" name="test_calculate_EPL[backend=torch-optic_and_values16]" time="0.195" /><testcase classname="tests.test_paraxial" name="test_calculate_EPL[backend=torch-optic_and_values17]" time="0.087" /><testcase classname="tests.test_paraxial" name="test_calculate_EPL[backend=torch-optic_and_values18]" time="0.103" /><testcase classname="tests.test_paraxial" name="test_calculate_EPL[backend=torch-optic_and_values19]" time="0.007" /><testcase classname="tests.test_paraxial" name="test_calculate_EPD[backend=numpy-optic_and_values0]" time="0.067" /><testcase classname="tests.test_paraxial" name="test_calculate_EPD[backend=numpy-optic_and_values1]" time="0.002" /><testcase classname="tests.test_paraxial" name="test_calculate_EPD[backend=numpy-optic_and_values2]" time="0.004" /><testcase classname="tests.test_paraxial" name="test_calculate_EPD[backend=numpy-optic_and_values3]" time="0.004" /><testcase classname="tests.test_paraxial" name="test_calculate_EPD[backend=numpy-optic_and_values4]" time="0.013" /><testcase classname="tests.test_paraxial" name="test_calculate_EPD[backend=numpy-optic_and_values5]" time="0.016" /><testcase classname="tests.test_paraxial" name="test_calculate_EPD[backend=numpy-optic_and_values6]" time="0.039" /><testcase classname="tests.test_paraxial" name="test_calculate_EPD[backend=numpy-optic_and_values7]" time="0.021" /><testcase classname="tests.test_paraxial" name="test_calculate_EPD[backend=numpy-optic_and_values8]" time="0.046" /><testcase classname="tests.test_paraxial" name="test_calculate_EPD[backend=numpy-optic_and_values9]" time="0.047" /><testcase classname="tests.test_paraxial" name="test_calculate_EPD[backend=numpy-optic_and_values10]" time="0.078" /><testcase classname="tests.test_paraxial" name="test_calculate_EPD[backend=numpy-optic_and_values11]" time="0.071" /><testcase classname="tests.test_paraxial" name="test_calculate_EPD[backend=numpy-optic_and_values12]" time="0.150" /><testcase classname="tests.test_paraxial" name="test_calculate_EPD[backend=numpy-optic_and_values13]" time="0.044" /><testcase classname="tests.test_paraxial" name="test_calculate_EPD[backend=numpy-optic_and_values14]" time="0.076" /><testcase classname="tests.test_paraxial" name="test_calculate_EPD[backend=numpy-optic_and_values15]" time="0.065" /><testcase classname="tests.test_paraxial" name="test_calculate_EPD[backend=numpy-optic_and_values16]" time="0.074" /><testcase classname="tests.test_paraxial" name="test_calculate_EPD[backend=numpy-optic_and_values17]" time="0.067" /><testcase classname="tests.test_paraxial" name="test_calculate_EPD[backend=numpy-optic_and_values18]" time="0.074" /><testcase classname="tests.test_paraxial" name="test_calculate_EPD[backend=numpy-optic_and_values19]" time="0.003" /><testcase classname="tests.test_paraxial" name="test_calculate_EPD[backend=torch-optic_and_values0]" time="0.066" /><testcase classname="tests.test_paraxial" name="test_calculate_EPD[backend=torch-optic_and_values1]" time="0.002" /><testcase classname="tests.test_paraxial" name="test_calculate_EPD[backend=torch-optic_and_values2]" time="0.009" /><testcase classname="tests.test_paraxial" name="test_calculate_EPD[backend=torch-optic_and_values3]" time="0.010" /><testcase classname="tests.test_paraxial" name="test_calculate_EPD[backend=torch-optic_and_values4]" time="0.016" /><testcase classname="tests.test_paraxial" name="test_calculate_EPD[backend=torch-optic_and_values5]" time="0.016" /><testcase classname="tests.test_paraxial" name="test_calculate_EPD[backend=torch-optic_and_values6]" time="0.046" /><testcase classname="tests.test_paraxial" name="test_calculate_EPD[backend=torch-optic_and_values7]" time="0.044" /><testcase classname="tests.test_paraxial" name="test_calculate_EPD[backend=torch-optic_and_values8]" time="0.055" /><testcase classname="tests.test_paraxial" name="test_calculate_EPD[backend=torch-optic_and_values9]" time="0.035" /><testcase classname="tests.test_paraxial" name="test_calculate_EPD[backend=torch-optic_and_values10]" time="0.109" /><testcase classname="tests.test_paraxial" name="test_calculate_EPD[backend=torch-optic_and_values11]" time="0.079" /><testcase classname="tests.test_paraxial" name="test_calculate_EPD[backend=torch-optic_and_values12]" time="0.150" /><testcase classname="tests.test_paraxial" name="test_calculate_EPD[backend=torch-optic_and_values13]" time="0.056" /><testcase classname="tests.test_paraxial" name="test_calculate_EPD[backend=torch-optic_and_values14]" time="0.067" /><testcase classname="tests.test_paraxial" name="test_calculate_EPD[backend=torch-optic_and_values15]" time="0.053" /><testcase classname="tests.test_paraxial" name="test_calculate_EPD[backend=torch-optic_and_values16]" time="0.122" /><testcase classname="tests.test_paraxial" name="test_calculate_EPD[backend=torch-optic_and_values17]" time="0.111" /><testcase classname="tests.test_paraxial" name="test_calculate_EPD[backend=torch-optic_and_values18]" time="0.108" /><testcase classname="tests.test_paraxial" name="test_calculate_EPD[backend=torch-optic_and_values19]" time="0.008" /><testcase classname="tests.test_paraxial" name="test_calculate_XPL[backend=numpy-optic_and_values0]" time="0.057" /><testcase classname="tests.test_paraxial" name="test_calculate_XPL[backend=numpy-optic_and_values1]" time="0.002" /><testcase classname="tests.test_paraxial" name="test_calculate_XPL[backend=numpy-optic_and_values2]" time="0.003" /><testcase classname="tests.test_paraxial" name="test_calculate_XPL[backend=numpy-optic_and_values3]" time="0.006" /><testcase classname="tests.test_paraxial" name="test_calculate_XPL[backend=numpy-optic_and_values4]" time="0.014" /><testcase classname="tests.test_paraxial" name="test_calculate_XPL[backend=numpy-optic_and_values5]" time="0.015" /><testcase classname="tests.test_paraxial" name="test_calculate_XPL[backend=numpy-optic_and_values6]" time="0.036" /><testcase classname="tests.test_paraxial" name="test_calculate_XPL[backend=numpy-optic_and_values7]" time="0.030" /><testcase classname="tests.test_paraxial" name="test_calculate_XPL[backend=numpy-optic_and_values8]" time="0.049" /><testcase classname="tests.test_paraxial" name="test_calculate_XPL[backend=numpy-optic_and_values9]" time="0.038" /><testcase classname="tests.test_paraxial" name="test_calculate_XPL[backend=numpy-optic_and_values10]" time="0.070" /><testcase classname="tests.test_paraxial" name="test_calculate_XPL[backend=numpy-optic_and_values11]" time="0.078" /><testcase classname="tests.test_paraxial" name="test_calculate_XPL[backend=numpy-optic_and_values12]" time="0.133" /><testcase classname="tests.test_paraxial" name="test_calculate_XPL[backend=numpy-optic_and_values13]" time="0.038" /><testcase classname="tests.test_paraxial" name="test_calculate_XPL[backend=numpy-optic_and_values14]" time="0.063" /><testcase classname="tests.test_paraxial" name="test_calculate_XPL[backend=numpy-optic_and_values15]" time="0.056" /><testcase classname="tests.test_paraxial" name="test_calculate_XPL[backend=numpy-optic_and_values16]" time="0.078" /><testcase classname="tests.test_paraxial" name="test_calculate_XPL[backend=numpy-optic_and_values17]" time="0.061" /><testcase classname="tests.test_paraxial" name="test_calculate_XPL[backend=numpy-optic_and_values18]" time="0.079" /><testcase classname="tests.test_paraxial" name="test_calculate_XPL[backend=numpy-optic_and_values19]" time="0.003" /><testcase classname="tests.test_paraxial" name="test_calculate_XPL[backend=torch-optic_and_values0]" time="0.075" /><testcase classname="tests.test_paraxial" name="test_calculate_XPL[backend=torch-optic_and_values1]" time="0.007" /><testcase classname="tests.test_paraxial" name="test_calculate_XPL[backend=torch-optic_and_values2]" time="0.007" /><testcase classname="tests.test_paraxial" name="test_calculate_XPL[backend=torch-optic_and_values3]" time="0.004" /><testcase classname="tests.test_paraxial" name="test_calculate_XPL[backend=torch-optic_and_values4]" time="0.022" /><testcase classname="tests.test_paraxial" name="test_calculate_XPL[backend=torch-optic_and_values5]" time="0.022" /><testcase classname="tests.test_paraxial" name="test_calculate_XPL[backend=torch-optic_and_values6]" time="0.055" /><testcase classname="tests.test_paraxial" name="test_calculate_XPL[backend=torch-optic_and_values7]" time="0.047" /><testcase classname="tests.test_paraxial" name="test_calculate_XPL[backend=torch-optic_and_values8]" time="0.043" /><testcase classname="tests.test_paraxial" name="test_calculate_XPL[backend=torch-optic_and_values9]" time="0.044" /><testcase classname="tests.test_paraxial" name="test_calculate_XPL[backend=torch-optic_and_values10]" time="0.086" /><testcase classname="tests.test_paraxial" name="test_calculate_XPL[backend=torch-optic_and_values11]" time="0.072" /><testcase classname="tests.test_paraxial" name="test_calculate_XPL[backend=torch-optic_and_values12]" time="0.155" /><testcase classname="tests.test_paraxial" name="test_calculate_XPL[backend=torch-optic_and_values13]" time="0.057" /><testcase classname="tests.test_paraxial" name="test_calculate_XPL[backend=torch-optic_and_values14]" time="0.068" /><testcase classname="tests.test_paraxial" name="test_calculate_XPL[backend=torch-optic_and_values15]" time="0.050" /><testcase classname="tests.test_paraxial" name="test_calculate_XPL[backend=torch-optic_and_values16]" time="0.113" /><testcase classname="tests.test_paraxial" name="test_calculate_XPL[backend=torch-optic_and_values17]" time="0.075" /><testcase classname="tests.test_paraxial" name="test_calculate_XPL[backend=torch-optic_and_values18]" time="0.107" /><testcase classname="tests.test_paraxial" name="test_calculate_XPL[backend=torch-optic_and_values19]" time="0.005" /><testcase classname="tests.test_paraxial" name="test_calculate_XPD[backend=numpy-optic_and_values0]" time="0.061" /><testcase classname="tests.test_paraxial" name="test_calculate_XPD[backend=numpy-optic_and_values1]" time="0.002" /><testcase classname="tests.test_paraxial" name="test_calculate_XPD[backend=numpy-optic_and_values2]" time="0.003" /><testcase classname="tests.test_paraxial" name="test_calculate_XPD[backend=numpy-optic_and_values3]" time="0.004" /><testcase classname="tests.test_paraxial" name="test_calculate_XPD[backend=numpy-optic_and_values4]" time="0.016" /><testcase classname="tests.test_paraxial" name="test_calculate_XPD[backend=numpy-optic_and_values5]" time="0.012" /><testcase classname="tests.test_paraxial" name="test_calculate_XPD[backend=numpy-optic_and_values6]" time="0.024" /><testcase classname="tests.test_paraxial" name="test_calculate_XPD[backend=numpy-optic_and_values7]" time="0.023" /><testcase classname="tests.test_paraxial" name="test_calculate_XPD[backend=numpy-optic_and_values8]" time="0.057" /><testcase classname="tests.test_paraxial" name="test_calculate_XPD[backend=numpy-optic_and_values9]" time="0.046" /><testcase classname="tests.test_paraxial" name="test_calculate_XPD[backend=numpy-optic_and_values10]" time="0.096" /><testcase classname="tests.test_paraxial" name="test_calculate_XPD[backend=numpy-optic_and_values11]" time="0.090" /><testcase classname="tests.test_paraxial" name="test_calculate_XPD[backend=numpy-optic_and_values12]" time="0.134" /><testcase classname="tests.test_paraxial" name="test_calculate_XPD[backend=numpy-optic_and_values13]" time="0.046" /><testcase classname="tests.test_paraxial" name="test_calculate_XPD[backend=numpy-optic_and_values14]" time="0.063" /><testcase classname="tests.test_paraxial" name="test_calculate_XPD[backend=numpy-optic_and_values15]" time="0.063" /><testcase classname="tests.test_paraxial" name="test_calculate_XPD[backend=numpy-optic_and_values16]" time="0.074" /><testcase classname="tests.test_paraxial" name="test_calculate_XPD[backend=numpy-optic_and_values17]" time="0.058" /><testcase classname="tests.test_paraxial" name="test_calculate_XPD[backend=numpy-optic_and_values18]" time="0.073" /><testcase classname="tests.test_paraxial" name="test_calculate_XPD[backend=numpy-optic_and_values19]" time="0.003" /><testcase classname="tests.test_paraxial" name="test_calculate_XPD[backend=torch-optic_and_values0]" time="0.084" /><testcase classname="tests.test_paraxial" name="test_calculate_XPD[backend=torch-optic_and_values1]" time="0.010" /><testcase classname="tests.test_paraxial" name="test_calculate_XPD[backend=torch-optic_and_values2]" time="0.024" /><testcase classname="tests.test_paraxial" name="test_calculate_XPD[backend=torch-optic_and_values3]" time="0.024" /><testcase classname="tests.test_paraxial" name="test_calculate_XPD[backend=torch-optic_and_values4]" time="0.020" /><testcase classname="tests.test_paraxial" name="test_calculate_XPD[backend=torch-optic_and_values5]" time="0.025" /><testcase classname="tests.test_paraxial" name="test_calculate_XPD[backend=torch-optic_and_values6]" time="0.057" /><testcase classname="tests.test_paraxial" name="test_calculate_XPD[backend=torch-optic_and_values7]" time="0.055" /><testcase classname="tests.test_paraxial" name="test_calculate_XPD[backend=torch-optic_and_values8]" time="0.071" /><testcase classname="tests.test_paraxial" name="test_calculate_XPD[backend=torch-optic_and_values9]" time="0.060" /><testcase classname="tests.test_paraxial" name="test_calculate_XPD[backend=torch-optic_and_values10]" time="0.152" /><testcase classname="tests.test_paraxial" name="test_calculate_XPD[backend=torch-optic_and_values11]" time="0.096" /><testcase classname="tests.test_paraxial" name="test_calculate_XPD[backend=torch-optic_and_values12]" time="0.202" /><testcase classname="tests.test_paraxial" name="test_calculate_XPD[backend=torch-optic_and_values13]" time="0.068" /><testcase classname="tests.test_paraxial" name="test_calculate_XPD[backend=torch-optic_and_values14]" time="0.088" /><testcase classname="tests.test_paraxial" name="test_calculate_XPD[backend=torch-optic_and_values15]" time="0.059" /><testcase classname="tests.test_paraxial" name="test_calculate_XPD[backend=torch-optic_and_values16]" time="0.135" /><testcase classname="tests.test_paraxial" name="test_calculate_XPD[backend=torch-optic_and_values17]" time="0.105" /><testcase classname="tests.test_paraxial" name="test_calculate_XPD[backend=torch-optic_and_values18]" time="0.090" /><testcase classname="tests.test_paraxial" name="test_calculate_XPD[backend=torch-optic_and_values19]" time="0.006" /><testcase classname="tests.test_paraxial" name="test_calculate_FNO[backend=numpy-optic_and_values0]" time="0.048" /><testcase classname="tests.test_paraxial" name="test_calculate_FNO[backend=numpy-optic_and_values1]" time="0.002" /><testcase classname="tests.test_paraxial" name="test_calculate_FNO[backend=numpy-optic_and_values2]" time="0.002" /><testcase classname="tests.test_paraxial" name="test_calculate_FNO[backend=numpy-optic_and_values3]" time="0.004" /><testcase classname="tests.test_paraxial" name="test_calculate_FNO[backend=numpy-optic_and_values4]" time="0.011" /><testcase classname="tests.test_paraxial" name="test_calculate_FNO[backend=numpy-optic_and_values5]" time="0.015" /><testcase classname="tests.test_paraxial" name="test_calculate_FNO[backend=numpy-optic_and_values6]" time="0.035" /><testcase classname="tests.test_paraxial" name="test_calculate_FNO[backend=numpy-optic_and_values7]" time="0.025" /><testcase classname="tests.test_paraxial" name="test_calculate_FNO[backend=numpy-optic_and_values8]" time="0.037" /><testcase classname="tests.test_paraxial" name="test_calculate_FNO[backend=numpy-optic_and_values9]" time="0.032" /><testcase classname="tests.test_paraxial" name="test_calculate_FNO[backend=numpy-optic_and_values10]" time="0.073" /><testcase classname="tests.test_paraxial" name="test_calculate_FNO[backend=numpy-optic_and_values11]" time="0.091" /><testcase classname="tests.test_paraxial" name="test_calculate_FNO[backend=numpy-optic_and_values12]" time="0.151" /><testcase classname="tests.test_paraxial" name="test_calculate_FNO[backend=numpy-optic_and_values13]" time="0.037" /><testcase classname="tests.test_paraxial" name="test_calculate_FNO[backend=numpy-optic_and_values14]" time="0.059" /><testcase classname="tests.test_paraxial" name="test_calculate_FNO[backend=numpy-optic_and_values15]" time="0.064" /><testcase classname="tests.test_paraxial" name="test_calculate_FNO[backend=numpy-optic_and_values16]" time="0.067" /><testcase classname="tests.test_paraxial" name="test_calculate_FNO[backend=numpy-optic_and_values17]" time="0.066" /><testcase classname="tests.test_paraxial" name="test_calculate_FNO[backend=numpy-optic_and_values18]" time="0.065" /><testcase classname="tests.test_paraxial" name="test_calculate_FNO[backend=numpy-optic_and_values19]" time="0.004" /><testcase classname="tests.test_paraxial" name="test_calculate_FNO[backend=torch-optic_and_values0]" time="0.068" /><testcase classname="tests.test_paraxial" name="test_calculate_FNO[backend=torch-optic_and_values1]" time="0.006" /><testcase classname="tests.test_paraxial" name="test_calculate_FNO[backend=torch-optic_and_values2]" time="0.006" /><testcase classname="tests.test_paraxial" name="test_calculate_FNO[backend=torch-optic_and_values3]" time="0.004" /><testcase classname="tests.test_paraxial" name="test_calculate_FNO[backend=torch-optic_and_values4]" time="0.017" /><testcase classname="tests.test_paraxial" name="test_calculate_FNO[backend=torch-optic_and_values5]" time="0.020" /><testcase classname="tests.test_paraxial" name="test_calculate_FNO[backend=torch-optic_and_values6]" time="0.037" /><testcase classname="tests.test_paraxial" name="test_calculate_FNO[backend=torch-optic_and_values7]" time="0.040" /><testcase classname="tests.test_paraxial" name="test_calculate_FNO[backend=torch-optic_and_values8]" time="0.045" /><testcase classname="tests.test_paraxial" name="test_calculate_FNO[backend=torch-optic_and_values9]" time="0.046" /><testcase classname="tests.test_paraxial" name="test_calculate_FNO[backend=torch-optic_and_values10]" time="0.075" /><testcase classname="tests.test_paraxial" name="test_calculate_FNO[backend=torch-optic_and_values11]" time="0.077" /><testcase classname="tests.test_paraxial" name="test_calculate_FNO[backend=torch-optic_and_values12]" time="0.136" /><testcase classname="tests.test_paraxial" name="test_calculate_FNO[backend=torch-optic_and_values13]" time="0.042" /><testcase classname="tests.test_paraxial" name="test_calculate_FNO[backend=torch-optic_and_values14]" time="0.061" /><testcase classname="tests.test_paraxial" name="test_calculate_FNO[backend=torch-optic_and_values15]" time="0.054" /><testcase classname="tests.test_paraxial" name="test_calculate_FNO[backend=torch-optic_and_values16]" time="0.140" /><testcase classname="tests.test_paraxial" name="test_calculate_FNO[backend=torch-optic_and_values17]" time="0.092" /><testcase classname="tests.test_paraxial" name="test_calculate_FNO[backend=torch-optic_and_values18]" time="0.077" /><testcase classname="tests.test_paraxial" name="test_calculate_FNO[backend=torch-optic_and_values19]" time="0.008" /><testcase classname="tests.test_paraxial" name="test_calculate_invariant[backend=numpy-optic_and_values0]" time="0.058" /><testcase classname="tests.test_paraxial" name="test_calculate_invariant[backend=numpy-optic_and_values1]" time="0.002" /><testcase classname="tests.test_paraxial" name="test_calculate_invariant[backend=numpy-optic_and_values2]" time="0.007" /><testcase classname="tests.test_paraxial" name="test_calculate_invariant[backend=numpy-optic_and_values3]" time="0.009" /><testcase classname="tests.test_paraxial" name="test_calculate_invariant[backend=numpy-optic_and_values4]" time="0.017" /><testcase classname="tests.test_paraxial" name="test_calculate_invariant[backend=numpy-optic_and_values5]" time="0.016" /><testcase classname="tests.test_paraxial" name="test_calculate_invariant[backend=numpy-optic_and_values6]" time="0.034" /><testcase classname="tests.test_paraxial" name="test_calculate_invariant[backend=numpy-optic_and_values7]" time="0.028" /><testcase classname="tests.test_paraxial" name="test_calculate_invariant[backend=numpy-optic_and_values8]" time="0.055" /><testcase classname="tests.test_paraxial" name="test_calculate_invariant[backend=numpy-optic_and_values9]" time="0.041" /><testcase classname="tests.test_paraxial" name="test_calculate_invariant[backend=numpy-optic_and_values10]" time="0.077" /><testcase classname="tests.test_paraxial" name="test_calculate_invariant[backend=numpy-optic_and_values11]" time="0.078" /><testcase classname="tests.test_paraxial" name="test_calculate_invariant[backend=numpy-optic_and_values12]" time="0.139" /><testcase classname="tests.test_paraxial" name="test_calculate_invariant[backend=numpy-optic_and_values13]" time="0.044" /><testcase classname="tests.test_paraxial" name="test_calculate_invariant[backend=numpy-optic_and_values14]" time="0.064" /><testcase classname="tests.test_paraxial" name="test_calculate_invariant[backend=numpy-optic_and_values15]" time="0.065" /><testcase classname="tests.test_paraxial" name="test_calculate_invariant[backend=numpy-optic_and_values16]" time="0.087" /><testcase classname="tests.test_paraxial" name="test_calculate_invariant[backend=numpy-optic_and_values17]" time="0.082" /><testcase classname="tests.test_paraxial" name="test_calculate_invariant[backend=numpy-optic_and_values18]" time="0.105" /><testcase classname="tests.test_paraxial" name="test_calculate_invariant[backend=numpy-optic_and_values19]" time="0.009" /><testcase classname="tests.test_paraxial" name="test_calculate_invariant[backend=torch-optic_and_values0]" time="0.136" /><testcase classname="tests.test_paraxial" name="test_calculate_invariant[backend=torch-optic_and_values1]" time="0.026" /><testcase classname="tests.test_paraxial" name="test_calculate_invariant[backend=torch-optic_and_values2]" time="0.041" /><testcase classname="tests.test_paraxial" name="test_calculate_invariant[backend=torch-optic_and_values3]" time="0.031" /><testcase classname="tests.test_paraxial" name="test_calculate_invariant[backend=torch-optic_and_values4]" time="0.031" /><testcase classname="tests.test_paraxial" name="test_calculate_invariant[backend=torch-optic_and_values5]" time="0.029" /><testcase classname="tests.test_paraxial" name="test_calculate_invariant[backend=torch-optic_and_values6]" time="0.059" /><testcase classname="tests.test_paraxial" name="test_calculate_invariant[backend=torch-optic_and_values7]" time="0.064" /><testcase classname="tests.test_paraxial" name="test_calculate_invariant[backend=torch-optic_and_values8]" time="0.080" /><testcase classname="tests.test_paraxial" name="test_calculate_invariant[backend=torch-optic_and_values9]" time="0.056" /><testcase classname="tests.test_paraxial" name="test_calculate_invariant[backend=torch-optic_and_values10]" time="0.085" /><testcase classname="tests.test_paraxial" name="test_calculate_invariant[backend=torch-optic_and_values11]" time="0.100" /><testcase classname="tests.test_paraxial" name="test_calculate_invariant[backend=torch-optic_and_values12]" time="0.208" /><testcase classname="tests.test_paraxial" name="test_calculate_invariant[backend=torch-optic_and_values13]" time="0.091" /><testcase classname="tests.test_paraxial" name="test_calculate_invariant[backend=torch-optic_and_values14]" time="0.118" /><testcase classname="tests.test_paraxial" name="test_calculate_invariant[backend=torch-optic_and_values15]" time="0.084" /><testcase classname="tests.test_paraxial" name="test_calculate_invariant[backend=torch-optic_and_values16]" time="0.165" /><testcase classname="tests.test_paraxial" name="test_calculate_invariant[backend=torch-optic_and_values17]" time="0.135" /><testcase classname="tests.test_paraxial" name="test_calculate_invariant[backend=torch-optic_and_values18]" time="0.099" /><testcase classname="tests.test_paraxial" name="test_calculate_invariant[backend=torch-optic_and_values19]" time="0.017" /><testcase classname="tests.test_paraxial" name="test_EPD_float_by_stop_size_finite[backend=numpy]" time="0.038" /><testcase classname="tests.test_paraxial" name="test_EPD_float_by_stop_size_finite[backend=torch]" time="0.050" /><testcase classname="tests.test_paraxial" name="test_EPD_float_by_stop_size_infinite[backend=numpy]" time="0.045" /><testcase classname="tests.test_paraxial" name="test_EPD_float_by_stop_size_infinite[backend=torch]" time="0.048" /><testcase classname="tests.test_paraxial_to_thick.TestParaxialToThickLensConverter" name="test_init_with_invalid_surface_type[backend=numpy]" time="0.001" /><testcase classname="tests.test_paraxial_to_thick.TestParaxialToThickLensConverter" name="test_init_with_invalid_surface_type[backend=torch]" time="0.002" /><testcase classname="tests.test_paraxial_to_thick.TestParaxialToThickLensConverter" name="test_missing_paraxial_surface[backend=numpy]" time="0.021" /><testcase classname="tests.test_paraxial_to_thick.TestParaxialToThickLensConverter" name="test_missing_paraxial_surface[backend=torch]" time="0.021" /><testcase classname="tests.test_paraxial_to_thick.TestParaxialToThickLensConverter" name="test_resolve_material_string_success[backend=numpy]" time="0.016" /><testcase classname="tests.test_paraxial_to_thick.TestParaxialToThickLensConverter" name="test_resolve_material_string_success[backend=torch]" time="0.023" /><testcase classname="tests.test_paraxial_to_thick.TestParaxialToThickLensConverter" name="test_resolve_material_string_failure[backend=numpy]" time="0.014" /><testcase classname="tests.test_paraxial_to_thick.TestParaxialToThickLensConverter" name="test_resolve_material_string_failure[backend=torch]" time="0.012" /><testcase classname="tests.test_paraxial_to_thick.TestParaxialToThickLensConverter" name="test_resolve_material_float[backend=numpy]" time="0.002" /><testcase classname="tests.test_paraxial_to_thick.TestParaxialToThickLensConverter" name="test_resolve_material_float[backend=torch]" time="0.002" /><testcase classname="tests.test_paraxial_to_thick.TestParaxialToThickLensConverter" name="test_resolve_material_basematerial[backend=numpy]" time="0.001" /><testcase classname="tests.test_paraxial_to_thick.TestParaxialToThickLensConverter" name="test_resolve_material_basematerial[backend=torch]" time="0.002" /><testcase classname="tests.test_paraxial_to_thick.TestParaxialToThickLensConverter" name="test_resolve_material_invalid_type[backend=numpy]" time="0.002" /><testcase classname="tests.test_paraxial_to_thick.TestParaxialToThickLensConverter" name="test_resolve_material_invalid_type[backend=torch]" time="0.003" /><testcase classname="tests.test_paraxial_to_thick.TestParaxialToThickLensConverter" name="test_get_paraxial_surface_index_found[backend=numpy]" time="0.018" /><testcase classname="tests.test_paraxial_to_thick.TestParaxialToThickLensConverter" name="test_get_paraxial_surface_index_found[backend=torch]" time="0.017" /><testcase classname="tests.test_paraxial_to_thick.TestParaxialToThickLensConverter" name="test_get_paraxial_surface_index_not_found[backend=numpy]" time="0.016" /><testcase classname="tests.test_paraxial_to_thick.TestParaxialToThickLensConverter" name="test_get_paraxial_surface_index_not_found[backend=torch]" time="0.018" /><testcase classname="tests.test_paraxial_to_thick.TestParaxialToThickLensConverter" name="test_calculate_radii_zero_focal_length[backend=numpy]" time="0.002" /><testcase classname="tests.test_paraxial_to_thick.TestParaxialToThickLensConverter" name="test_calculate_radii_zero_focal_length[backend=torch]" time="0.002" /><testcase classname="tests.test_paraxial_to_thick.TestParaxialToThickLensConverter" name="test_calculate_radii_positive_and_negative[backend=numpy]" time="0.002" /><testcase classname="tests.test_paraxial_to_thick.TestParaxialToThickLensConverter" name="test_calculate_radii_positive_and_negative[backend=torch]" time="0.004" /><testcase classname="tests.test_paraxial_to_thick.TestParaxialToThickLensConverter" name="test_remove_paraxial_surface_valid_and_invalid[backend=numpy]" time="0.018" /><testcase classname="tests.test_paraxial_to_thick.TestParaxialToThickLensConverter" name="test_remove_paraxial_surface_valid_and_invalid[backend=torch]" time="0.017" /><testcase classname="tests.test_paraxial_to_thick.TestParaxialToThickLensConverter" name="test_convert_replaces_surface[backend=numpy]" time="0.002" /><testcase classname="tests.test_paraxial_to_thick.TestParaxialToThickLensConverter" name="test_convert_replaces_surface[backend=torch]" time="0.002" /><testcase classname="tests.test_paraxial_to_thick.TestParaxialToThickLensConverter" name="test_convert_to_thick_lens_function[backend=numpy]" time="0.079" /><testcase classname="tests.test_paraxial_to_thick.TestParaxialToThickLensConverter" name="test_convert_to_thick_lens_function[backend=torch]" time="0.079" /><testcase classname="tests.test_paraxial_to_thick.TestParaxialToThickLensConverter" name="test_biconvex_unsolvable_linear_case[backend=numpy]" time="0.002" /><testcase classname="tests.test_paraxial_to_thick.TestParaxialToThickLensConverter" name="test_biconvex_unsolvable_linear_case[backend=torch]" time="0.003" /><testcase classname="tests.test_paraxial_to_thick.TestParaxialToThickLensConverter" name="test_biconvex_discriminant_negative[backend=numpy]" time="0.001" /><testcase classname="tests.test_paraxial_to_thick.TestParaxialToThickLensConverter" name="test_biconvex_discriminant_negative[backend=torch]" time="0.002" /><testcase classname="tests.test_paraxial_to_thick.TestParaxialToThickLensConverter" name="test_biconvex_no_positive_solution[backend=numpy]" time="0.001" /><testcase classname="tests.test_paraxial_to_thick.TestParaxialToThickLensConverter" name="test_biconvex_no_positive_solution[backend=torch]" time="0.002" /><testcase classname="tests.test_paraxial_to_thick.TestParaxialToThickLensConverter" name="test_biconcave_unsolvable_linear_case[backend=numpy]" time="0.001" /><testcase classname="tests.test_paraxial_to_thick.TestParaxialToThickLensConverter" name="test_biconcave_unsolvable_linear_case[backend=torch]" time="0.003" /><testcase classname="tests.test_paraxial_to_thick.TestParaxialToThickLensConverter" name="test_biconcave_discriminant_negative[backend=numpy]" time="0.001" /><testcase classname="tests.test_paraxial_to_thick.TestParaxialToThickLensConverter" name="test_biconcave_discriminant_negative[backend=torch]" time="0.001" /><testcase classname="tests.test_paraxial_to_thick.TestParaxialToThickLensConverter" name="test_biconcave_no_negative_solution[backend=numpy]" time="0.001" /><testcase classname="tests.test_paraxial_to_thick.TestParaxialToThickLensConverter" name="test_biconcave_no_negative_solution[backend=torch]" time="0.001" /><testcase classname="tests.test_perturbation" name="test_scalar_sampler[backend=numpy]" time="0.000" /><testcase classname="tests.test_perturbation" name="test_scalar_sampler[backend=torch]" time="0.001" /><testcase classname="tests.test_perturbation" name="test_range_sampler[backend=numpy]" time="0.001" /><testcase classname="tests.test_perturbation" name="test_range_sampler[backend=torch]" time="0.002" /><testcase classname="tests.test_perturbation" name="test_range_cycle_twice[backend=numpy]" time="0.001" /><testcase classname="tests.test_perturbation" name="test_range_cycle_twice[backend=torch]" time="0.002" /><testcase classname="tests.test_perturbation" name="test_distribution_sampler_normal[backend=numpy]" time="0.001" /><testcase classname="tests.test_perturbation" name="test_distribution_sampler_normal[backend=torch]" time="0.004" /><testcase classname="tests.test_perturbation" name="test_distribution_sampler_uniform[backend=numpy]" time="0.001" /><testcase classname="tests.test_perturbation" name="test_distribution_sampler_uniform[backend=torch]" time="0.001" /><testcase classname="tests.test_perturbation" name="test_distribution_sampler_unknown[backend=numpy]" time="0.001" /><testcase classname="tests.test_perturbation" name="test_distribution_sampler_unknown[backend=torch]" time="0.000" /><testcase classname="tests.test_perturbation" name="test_perturbation_apply[backend=numpy]" time="0.073" /><testcase classname="tests.test_perturbation" name="test_perturbation_apply[backend=torch]" time="0.069" /><testcase classname="tests.test_perturbation" name="test_range_sampler_reset[backend=numpy]" time="0.001" /><testcase classname="tests.test_perturbation" name="test_range_sampler_reset[backend=torch]" time="0.001" /><testcase classname="tests.test_perturbation" name="test_distribution_sampler_seed[backend=numpy]" time="0.002" /><testcase classname="tests.test_perturbation" name="test_distribution_sampler_seed[backend=torch]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestRadialAperture" name="test_clip[backend=numpy]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestRadialAperture" name="test_clip[backend=torch]" time="0.002" /><testcase classname="tests.test_physical_apertures.TestRadialAperture" name="test_scale[backend=numpy]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestRadialAperture" name="test_scale[backend=torch]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestRadialAperture" name="test_to_dict[backend=numpy]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestRadialAperture" name="test_to_dict[backend=torch]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestRadialAperture" name="test_from_dict[backend=numpy]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestRadialAperture" name="test_from_dict[backend=torch]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestRadialAperture" name="test_view" time="0.053" /><testcase classname="tests.test_physical_apertures.TestRadialAperture" name="test_extent[backend=numpy]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestRadialAperture" name="test_extent[backend=torch]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestOffsetRadialAperture" name="test_clip[backend=numpy]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestOffsetRadialAperture" name="test_clip[backend=torch]" time="0.002" /><testcase classname="tests.test_physical_apertures.TestOffsetRadialAperture" name="test_scale[backend=numpy]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestOffsetRadialAperture" name="test_scale[backend=torch]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestOffsetRadialAperture" name="test_to_dict[backend=numpy]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestOffsetRadialAperture" name="test_to_dict[backend=torch]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestOffsetRadialAperture" name="test_from_dict[backend=numpy]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestOffsetRadialAperture" name="test_from_dict[backend=torch]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestOffsetRadialAperture" name="test_extent[backend=numpy]" time="0.002" /><testcase classname="tests.test_physical_apertures.TestOffsetRadialAperture" name="test_extent[backend=torch]" time="0.002" /><testcase classname="tests.test_physical_apertures.TestOffsetRadialAperture" name="test_view" time="0.022" /><testcase classname="tests.test_physical_apertures.TestBooleanApertures" name="test_union_aperture[backend=numpy]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestBooleanApertures" name="test_union_aperture[backend=torch]" time="0.002" /><testcase classname="tests.test_physical_apertures.TestBooleanApertures" name="test_intersection_aperture[backend=numpy]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestBooleanApertures" name="test_intersection_aperture[backend=torch]" time="0.002" /><testcase classname="tests.test_physical_apertures.TestBooleanApertures" name="test_difference_aperture[backend=numpy]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestBooleanApertures" name="test_difference_aperture[backend=torch]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestBooleanApertures" name="test_union_type[backend=numpy]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestBooleanApertures" name="test_union_type[backend=torch]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestBooleanApertures" name="test_intersection_type[backend=numpy]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestBooleanApertures" name="test_intersection_type[backend=torch]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestBooleanApertures" name="test_difference_type[backend=numpy]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestBooleanApertures" name="test_difference_type[backend=torch]" time="0.002" /><testcase classname="tests.test_physical_apertures.TestBooleanApertures" name="test_extent[backend=numpy]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestBooleanApertures" name="test_extent[backend=torch]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestBooleanApertures" name="test_view[backend=numpy]" time="0.062" /><testcase classname="tests.test_physical_apertures.TestBooleanApertures" name="test_view[backend=torch]" time="0.059" /><testcase classname="tests.test_physical_apertures.TestRectangularAperture" name="test_clip[backend=numpy]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestRectangularAperture" name="test_clip[backend=torch]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestRectangularAperture" name="test_scale[backend=numpy]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestRectangularAperture" name="test_scale[backend=torch]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestRectangularAperture" name="test_to_dict[backend=numpy]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestRectangularAperture" name="test_to_dict[backend=torch]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestRectangularAperture" name="test_from_dict[backend=numpy]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestRectangularAperture" name="test_from_dict[backend=torch]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestRectangularAperture" name="test_extent[backend=numpy]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestRectangularAperture" name="test_extent[backend=torch]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestRectangularAperture" name="test_view[backend=numpy]" time="0.016" /><testcase classname="tests.test_physical_apertures.TestRectangularAperture" name="test_view[backend=torch]" time="0.022" /><testcase classname="tests.test_physical_apertures.TestEllipticalAperture" name="test_clip[backend=numpy]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestEllipticalAperture" name="test_clip[backend=torch]" time="0.002" /><testcase classname="tests.test_physical_apertures.TestEllipticalAperture" name="test_scale[backend=numpy]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestEllipticalAperture" name="test_scale[backend=torch]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestEllipticalAperture" name="test_to_dict[backend=numpy]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestEllipticalAperture" name="test_to_dict[backend=torch]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestEllipticalAperture" name="test_from_dict[backend=numpy]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestEllipticalAperture" name="test_from_dict[backend=torch]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestEllipticalAperture" name="test_extent[backend=numpy]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestEllipticalAperture" name="test_extent[backend=torch]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestEllipticalAperture" name="test_view[backend=numpy]" time="0.015" /><testcase classname="tests.test_physical_apertures.TestEllipticalAperture" name="test_view[backend=torch]" time="0.016" /><testcase classname="tests.test_physical_apertures.TestPolygonAperture" name="test_clip[backend=numpy]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestPolygonAperture" name="test_clip[backend=torch]" time="0.007" /><testcase classname="tests.test_physical_apertures.TestPolygonAperture" name="test_scale[backend=numpy]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestPolygonAperture" name="test_scale[backend=torch]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestPolygonAperture" name="test_to_dict[backend=numpy]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestPolygonAperture" name="test_to_dict[backend=torch]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestPolygonAperture" name="test_from_dict[backend=numpy]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestPolygonAperture" name="test_from_dict[backend=torch]" time="0.002" /><testcase classname="tests.test_physical_apertures.TestPolygonAperture" name="test_extent[backend=numpy]" time="0.002" /><testcase classname="tests.test_physical_apertures.TestPolygonAperture" name="test_extent[backend=torch]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestPolygonAperture" name="test_view[backend=numpy]" time="0.020" /><testcase classname="tests.test_physical_apertures.TestPolygonAperture" name="test_view[backend=torch]" time="0.028" /><testcase classname="tests.test_physical_apertures.TestFileAperture" name="test_clip[backend=numpy]" time="0.033" /><testcase classname="tests.test_physical_apertures.TestFileAperture" name="test_clip[backend=torch]" time="0.009" /><testcase classname="tests.test_physical_apertures.TestFileAperture" name="test_scale[backend=numpy]" time="0.003" /><testcase classname="tests.test_physical_apertures.TestFileAperture" name="test_scale[backend=torch]" time="0.004" /><testcase classname="tests.test_physical_apertures.TestFileAperture" name="test_to_dict[backend=numpy]" time="0.004" /><testcase classname="tests.test_physical_apertures.TestFileAperture" name="test_to_dict[backend=torch]" time="0.005" /><testcase classname="tests.test_physical_apertures.TestFileAperture" name="test_from_dict" time="0.004" /><testcase classname="tests.test_physical_apertures.TestFileAperture" name="test_extent[backend=numpy]" time="0.003" /><testcase classname="tests.test_physical_apertures.TestFileAperture" name="test_extent[backend=torch]" time="0.003" /><testcase classname="tests.test_physical_apertures.TestConfigureAperture" name="test_none_input[backend=numpy]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestConfigureAperture" name="test_none_input[backend=torch]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestConfigureAperture" name="test_scalar_input[backend=numpy-2-1.0]" time="0.002" /><testcase classname="tests.test_physical_apertures.TestConfigureAperture" name="test_scalar_input[backend=numpy-0.0-0.0]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestConfigureAperture" name="test_scalar_input[backend=numpy-3.5-1.75]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestConfigureAperture" name="test_scalar_input[backend=torch-2-1.0]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestConfigureAperture" name="test_scalar_input[backend=torch-0.0-0.0]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestConfigureAperture" name="test_scalar_input[backend=torch-3.5-1.75]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestConfigureAperture" name="test_valid_base_aperture_instance[backend=numpy]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestConfigureAperture" name="test_valid_base_aperture_instance[backend=torch]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestConfigureAperture" name="test_invalid_input_raises_value_error[backend=numpy-circle]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestConfigureAperture" name="test_invalid_input_raises_value_error[backend=numpy-invalid_input1]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestConfigureAperture" name="test_invalid_input_raises_value_error[backend=numpy-invalid_input2]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestConfigureAperture" name="test_invalid_input_raises_value_error[backend=numpy-invalid_input3]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestConfigureAperture" name="test_invalid_input_raises_value_error[backend=numpy-invalid_input4]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestConfigureAperture" name="test_invalid_input_raises_value_error[backend=torch-circle]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestConfigureAperture" name="test_invalid_input_raises_value_error[backend=torch-invalid_input1]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestConfigureAperture" name="test_invalid_input_raises_value_error[backend=torch-invalid_input2]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestConfigureAperture" name="test_invalid_input_raises_value_error[backend=torch-invalid_input3]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestConfigureAperture" name="test_invalid_input_raises_value_error[backend=torch-invalid_input4]" time="0.001" /><testcase classname="tests.test_physical_apertures.TestConfigureAperture" name="test_custom_base_aperture_subclass[backend=numpy]" time="0.005" /><testcase classname="tests.test_physical_apertures.TestConfigureAperture" name="test_custom_base_aperture_subclass[backend=torch]" time="0.001" /><testcase classname="tests.test_pickup.TestPickup" name="test_apply_radius[backend=numpy]" time="0.038" /><testcase classname="tests.test_pickup.TestPickup" name="test_apply_radius[backend=torch]" time="0.042" /><testcase classname="tests.test_pickup.TestPickup" name="test_apply_conic[backend=numpy]" time="0.036" /><testcase classname="tests.test_pickup.TestPickup" name="test_apply_conic[backend=torch]" time="0.045" /><testcase classname="tests.test_pickup.TestPickup" name="test_apply_thickness[backend=numpy]" time="0.046" /><testcase classname="tests.test_pickup.TestPickup" name="test_apply_thickness[backend=torch]" time="0.045" /><testcase classname="tests.test_pickup.TestPickup" name="test_invalid_attr_type[backend=numpy]" time="0.034" /><testcase classname="tests.test_pickup.TestPickup" name="test_invalid_attr_type[backend=torch]" time="0.034" /><testcase classname="tests.test_pickup.TestPickup" name="test_invalid_set_attr[backend=numpy]" time="0.033" /><testcase classname="tests.test_pickup.TestPickup" name="test_invalid_set_attr[backend=torch]" time="0.039" /><testcase classname="tests.test_pickup.TestPickup" name="test_to_dict[backend=numpy]" time="0.042" /><testcase classname="tests.test_pickup.TestPickup" name="test_to_dict[backend=torch]" time="0.046" /><testcase classname="tests.test_pickup.TestPickup" name="test_from_dict[backend=numpy]" time="0.040" /><testcase classname="tests.test_pickup.TestPickup" name="test_from_dict[backend=torch]" time="0.045" /><testcase classname="tests.test_pickup.TestPickupManager" name="test_add_pickup[backend=numpy]" time="0.042" /><testcase classname="tests.test_pickup.TestPickupManager" name="test_add_pickup[backend=torch]" time="0.051" /><testcase classname="tests.test_pickup.TestPickupManager" name="test_apply_pickups[backend=numpy]" time="0.051" /><testcase classname="tests.test_pickup.TestPickupManager" name="test_apply_pickups[backend=torch]" time="0.052" /><testcase classname="tests.test_pickup.TestPickupManager" name="test_clear_pickups[backend=numpy]" time="0.049" /><testcase classname="tests.test_pickup.TestPickupManager" name="test_clear_pickups[backend=torch]" time="0.042" /><testcase classname="tests.test_pickup.TestPickupManager" name="test_to_dict[backend=numpy]" time="0.043" /><testcase classname="tests.test_pickup.TestPickupManager" name="test_to_dict[backend=torch]" time="0.046" /><testcase classname="tests.test_pickup.TestPickupManager" name="test_from_dict[backend=numpy]" time="0.040" /><testcase classname="tests.test_pickup.TestPickupManager" name="test_from_dict[backend=torch]" time="0.050" /><testcase classname="tests.test_rays" name="test_translate[backend=numpy]" time="0.002" /><testcase classname="tests.test_rays" name="test_translate[backend=torch]" time="0.002" /><testcase classname="tests.test_rays" name="test__process_input[backend=numpy]" time="0.001" /><testcase classname="tests.test_rays" name="test__process_input[backend=torch]" time="0.002" /><testcase classname="tests.test_rays" name="test_real_rays_init[backend=numpy]" time="0.002" /><testcase classname="tests.test_rays" name="test_real_rays_init[backend=torch]" time="0.002" /><testcase classname="tests.test_rays" name="test_rotate_x[backend=numpy]" time="0.002" /><testcase classname="tests.test_rays" name="test_rotate_x[backend=torch]" time="0.005" /><testcase classname="tests.test_rays" name="test_rotate_y[backend=numpy]" time="0.003" /><testcase classname="tests.test_rays" name="test_rotate_y[backend=torch]" time="0.005" /><testcase classname="tests.test_rays" name="test_rotate_z[backend=numpy]" time="0.003" /><testcase classname="tests.test_rays" name="test_rotate_z[backend=torch]" time="0.004" /><testcase classname="tests.test_rays" name="test_propagate[backend=numpy]" time="0.002" /><testcase classname="tests.test_rays" name="test_propagate[backend=torch]" time="0.004" /><testcase classname="tests.test_rays" name="test_clip[backend=numpy]" time="0.001" /><testcase classname="tests.test_rays" name="test_clip[backend=torch]" time="0.002" /><testcase classname="tests.test_rays" name="test_paraxial_rays_init[backend=numpy]" time="0.001" /><testcase classname="tests.test_rays" name="test_paraxial_rays_init[backend=torch]" time="0.002" /><testcase classname="tests.test_rays" name="test_paraxial_propagate[backend=numpy]" time="0.001" /><testcase classname="tests.test_rays" name="test_paraxial_propagate[backend=torch]" time="0.003" /><testcase classname="tests.test_rays" name="test_reflect[backend=numpy]" time="0.002" /><testcase classname="tests.test_rays" name="test_reflect[backend=torch]" time="0.003" /><testcase classname="tests.test_rays" name="test_real_rays_str[backend=numpy]" time="0.002" /><testcase classname="tests.test_rays" name="test_real_rays_str[backend=torch]" time="0.003" /><testcase classname="tests.test_rays.TestPolarizationState" name="test_constructor[backend=numpy]" time="0.001" /><testcase classname="tests.test_rays.TestPolarizationState" name="test_constructor[backend=torch]" time="0.002" /><testcase classname="tests.test_rays.TestPolarizationState" name="test_constructor_invalid[backend=numpy]" time="0.001" /><testcase classname="tests.test_rays.TestPolarizationState" name="test_constructor_invalid[backend=torch]" time="0.001" /><testcase classname="tests.test_rays.TestPolarizationState" name="test_str[backend=numpy]" time="0.001" /><testcase classname="tests.test_rays.TestPolarizationState" name="test_str[backend=torch]" time="0.004" /><testcase classname="tests.test_rays.TestPolarizationState" name="test_str_unpolarized[backend=numpy]" time="0.001" /><testcase classname="tests.test_rays.TestPolarizationState" name="test_str_unpolarized[backend=torch]" time="0.001" /><testcase classname="tests.test_rays.TestPolarizationState" name="test_repr[backend=numpy]" time="0.001" /><testcase classname="tests.test_rays.TestPolarizationState" name="test_repr[backend=torch]" time="0.001" /><testcase classname="tests.test_rays.TestCreatePolarization" name="test_create_polarization_unpolarized[backend=numpy]" time="0.001" /><testcase classname="tests.test_rays.TestCreatePolarization" name="test_create_polarization_unpolarized[backend=torch]" time="0.001" /><testcase classname="tests.test_rays.TestCreatePolarization" name="test_create_polarization_horizontal[backend=numpy]" time="0.001" /><testcase classname="tests.test_rays.TestCreatePolarization" name="test_create_polarization_horizontal[backend=torch]" time="0.001" /><testcase classname="tests.test_rays.TestCreatePolarization" name="test_create_polarization_vertical[backend=numpy]" time="0.001" /><testcase classname="tests.test_rays.TestCreatePolarization" name="test_create_polarization_vertical[backend=torch]" time="0.001" /><testcase classname="tests.test_rays.TestCreatePolarization" name="test_create_polarization_linear_45[backend=numpy]" time="0.001" /><testcase classname="tests.test_rays.TestCreatePolarization" name="test_create_polarization_linear_45[backend=torch]" time="0.001" /><testcase classname="tests.test_rays.TestCreatePolarization" name="test_create_polarization_linear_minus_45[backend=numpy]" time="0.002" /><testcase classname="tests.test_rays.TestCreatePolarization" name="test_create_polarization_linear_minus_45[backend=torch]" time="0.002" /><testcase classname="tests.test_rays.TestCreatePolarization" name="test_create_polarization_right_circular[backend=numpy]" time="0.001" /><testcase classname="tests.test_rays.TestCreatePolarization" name="test_create_polarization_right_circular[backend=torch]" time="0.005" /><testcase classname="tests.test_rays.TestCreatePolarization" name="test_create_polarization_left_circular[backend=numpy]" time="0.001" /><testcase classname="tests.test_rays.TestCreatePolarization" name="test_create_polarization_left_circular[backend=torch]" time="0.001" /><testcase classname="tests.test_rays.TestCreatePolarization" name="test_create_polarization_invalid[backend=numpy]" time="0.000" /><testcase classname="tests.test_rays.TestCreatePolarization" name="test_create_polarization_invalid[backend=torch]" time="0.001" /><testcase classname="tests.test_rays.TestPolarizedRays" name="test_init[backend=numpy]" time="0.001" /><testcase classname="tests.test_rays.TestPolarizedRays" name="test_init[backend=torch]" time="0.001" /><testcase classname="tests.test_rays.TestPolarizedRays" name="test_get_output_field[backend=numpy]" time="0.001" /><testcase classname="tests.test_rays.TestPolarizedRays" name="test_get_output_field[backend=torch]" time="0.002" /><testcase classname="tests.test_rays.TestPolarizedRays" name="test_update_intensity[backend=numpy]" time="0.002" /><testcase classname="tests.test_rays.TestPolarizedRays" name="test_update_intensity[backend=torch]" time="0.003" /><testcase classname="tests.test_rays.TestPolarizedRays" name="test_update[backend=numpy]" time="0.002" /><testcase classname="tests.test_rays.TestPolarizedRays" name="test_update[backend=torch]" time="0.004" /><testcase classname="tests.test_rays.TestPolarizedRays" name="test_get_3d_electric_field[backend=numpy]" time="0.001" /><testcase classname="tests.test_rays.TestPolarizedRays" name="test_get_3d_electric_field[backend=torch]" time="0.002" /><testcase classname="tests.test_rays.TestPolarizedRays" name="test_get_3d_electric_field_error[backend=numpy]" time="0.001" /><testcase classname="tests.test_rays.TestPolarizedRays" name="test_get_3d_electric_field_error[backend=torch]" time="0.002" /><testcase classname="tests.test_rays.TestRayGenerator" name="test_generate_rays[backend=numpy]" time="0.067" /><testcase classname="tests.test_rays.TestRayGenerator" name="test_generate_rays[backend=torch]" time="0.084" /><testcase classname="tests.test_rays.TestRayGenerator" name="test_generate_rays_telecentric[backend=numpy]" time="0.016" /><testcase classname="tests.test_rays.TestRayGenerator" name="test_generate_rays_telecentric[backend=torch]" time="0.050" /><testcase classname="tests.test_rays.TestRayGenerator" name="test_generate_rays_invalid_field_type[backend=numpy]" time="0.026" /><testcase classname="tests.test_rays.TestRayGenerator" name="test_generate_rays_invalid_field_type[backend=torch]" time="0.099" /><testcase classname="tests.test_rays.TestRayGenerator" name="test_invalid_polarization[backend=numpy]" time="0.053" /><testcase classname="tests.test_rays.TestRayGenerator" name="test_invalid_polarization[backend=torch]" time="0.075" /><testcase classname="tests.test_rays.TestRayGenerator" name="test_generate_polarized_rays[backend=numpy]" time="0.061" /><testcase classname="tests.test_rays.TestRayGenerator" name="test_generate_polarized_rays[backend=torch]" time="0.067" /><testcase classname="tests.test_rays.TestRayGenerator" name="test_get_ray_origins_infinite_object[backend=numpy]" time="0.065" /><testcase classname="tests.test_rays.TestRayGenerator" name="test_get_ray_origins_infinite_object[backend=torch]" time="0.092" /><testcase classname="tests.test_rays.TestRayGenerator" name="test_get_ray_origins_invalid_field_type[backend=numpy]" time="0.071" /><testcase classname="tests.test_rays.TestRayGenerator" name="test_get_ray_origins_invalid_field_type[backend=torch]" time="0.057" /><testcase classname="tests.test_rays.TestRayGenerator" name="test_invalid_ray_origin_telecentric[backend=numpy]" time="0.065" /><testcase classname="tests.test_rays.TestRayGenerator" name="test_invalid_ray_origin_telecentric[backend=torch]" time="0.072" /><testcase classname="tests.test_rays.TestRayGenerator" name="test_normalize[backend=numpy]" time="0.001" /><testcase classname="tests.test_rays.TestRayGenerator" name="test_normalize[backend=torch]" time="0.002" /><testcase classname="tests.test_rays.TestOpticTrace" name="test_trace_single_field_scalar_input[backend=numpy]" time="0.059" /><testcase classname="tests.test_rays.TestOpticTrace" name="test_trace_single_field_scalar_input[backend=torch]" time="0.098" /><testcase classname="tests.test_rays.TestOpticTrace" name="test_trace_multiple_fields_array_input[backend=numpy]" time="0.070" /><testcase classname="tests.test_rays.TestOpticTrace" name="test_trace_multiple_fields_array_input[backend=torch]" time="0.096" /><testcase classname="tests.test_rays.TestOpticTrace" name="test_trace_generic_single_ray[backend=numpy]" time="0.055" /><testcase classname="tests.test_rays.TestOpticTrace" name="test_trace_generic_single_ray[backend=torch]" time="0.093" /><testcase classname="tests.test_rays.TestOpticTrace" name="test_trace_generic_multiple_rays_mixed_inputs[backend=numpy]" time="0.058" /><testcase classname="tests.test_rays.TestOpticTrace" name="test_trace_generic_multiple_rays_mixed_inputs[backend=torch]" time="0.090" /><testcase classname="tests.test_rays.TestOpticTrace" name="test_trace_generic_multiple_fields_and_pupil_points[backend=numpy]" time="0.080" /><testcase classname="tests.test_rays.TestOpticTrace" name="test_trace_generic_multiple_fields_and_pupil_points[backend=torch]" time="0.103" /><testcase classname="tests.test_sampled_mtf.TestSampledMTF" name="test_sampled_mtf_instantiation[backend=numpy]" time="0.062" /><testcase classname="tests.test_sampled_mtf.TestSampledMTF" name="test_sampled_mtf_instantiation[backend=torch]" time="0.208" /><testcase classname="tests.test_sampled_mtf.TestSampledMTF" name="test_mtf_at_zero_frequency[backend=numpy]" time="0.171" /><testcase classname="tests.test_sampled_mtf.TestSampledMTF" name="test_mtf_at_zero_frequency[backend=torch]" time="0.381" /><testcase classname="tests.test_sampled_mtf.TestSampledMTF" name="test_triplet_system_behavior[backend=numpy]" time="0.064" /><testcase classname="tests.test_sampled_mtf.TestSampledMTF" name="test_triplet_system_behavior[backend=torch]" time="0.230" /><testcase classname="tests.test_sampled_mtf.TestSampledMTF" name="test_defocused_system_behavior[backend=numpy]" time="0.064" /><testcase classname="tests.test_sampled_mtf.TestSampledMTF" name="test_defocused_system_behavior[backend=torch]" time="0.161" /><testcase classname="tests.test_sampled_mtf.TestSampledMTF" name="test_calculate_mtf_multiple_calls[backend=numpy]" time="0.215" /><testcase classname="tests.test_sampled_mtf.TestSampledMTF" name="test_calculate_mtf_multiple_calls[backend=torch]" time="0.888" /><testcase classname="tests.test_sampled_mtf.TestSampledMTF" name="test_zero_xpd_handling[backend=numpy]" time="0.124" /><testcase classname="tests.test_sampled_mtf.TestSampledMTF" name="test_zero_xpd_handling[backend=torch]" time="0.329" /><testcase classname="tests.test_scatter.TestGetPointLambertian" name="test_point_within_unit_disk" time="0.075" /><testcase classname="tests.test_scatter.TestGetPointLambertian" name="test_randomness" time="0.002" /><testcase classname="tests.test_scatter.TestGetPointLambertian" name="test_output_type" time="0.001" /><testcase classname="tests.test_scatter.TestGetPointGaussian" name="test_output_type" time="0.082" /><testcase classname="tests.test_scatter.TestGetPointGaussian" name="test_randomness" time="0.001" /><testcase classname="tests.test_scatter.TestScatter" name="test_output_type" time="2.067" /><testcase classname="tests.test_scatter.TestScatter" name="test_randomness" time="0.010" /><testcase classname="tests.test_scatter.TestScatter" name="test_large_L" time="0.001" /><testcase classname="tests.test_scatter.TestScatter" name="test_output_unit_vector" time="0.050" /><testcase classname="tests.test_scatter.TestFuncWrapper" name="test_output_type" time="0.003" /><testcase classname="tests.test_scatter.TestFuncWrapper" name="test_output" time="0.238" /><testcase classname="tests.test_scatter.TestScatterParallel" name="test_output_type" time="4.522" /><testcase classname="tests.test_scatter.TestScatterParallel" name="test_randomness" time="0.003" /><testcase classname="tests.test_scatter.TestScatterParallel" name="test_output_unit_vector" time="0.001" /><testcase classname="tests.test_scatter.TestLamberianBSDF" name="test_output_type" time="0.001" /><testcase classname="tests.test_scatter.TestLamberianBSDF" name="test_output_unit_vector" time="0.001" /><testcase classname="tests.test_scatter.TestGaussianBSDF" name="test_output" time="3.094" /><testcase classname="tests.test_sensitivity_analysis" name="test_sensitivity_analysis_initialization" time="0.131" /><testcase classname="tests.test_sensitivity_analysis" name="test_sensitivity_analysis_run" time="0.646" /><testcase classname="tests.test_sensitivity_analysis" name="test_sensitivity_analysis_get_results" time="0.393" /><testcase classname="tests.test_sensitivity_analysis" name="test_sensitivity_analysis_validation_no_operands" time="0.060" /><testcase classname="tests.test_sensitivity_analysis" name="test_sensitivity_analysis_validation_no_perturbations" time="0.105" /><testcase classname="tests.test_sensitivity_analysis" name="test_sensitivity_analysis_validation_too_many_operands" time="0.081" /><testcase classname="tests.test_sensitivity_analysis" name="test_sensitivity_analysis_validation_too_many_perturbations" time="0.086" /><testcase classname="tests.test_sensitivity_analysis" name="test_sensitivity_analysis_view" time="0.510" /><testcase classname="tests.test_sensitivity_analysis" name="test_invalid_sampler" time="0.336" /><testcase classname="tests.test_solves.TestMarginalRayHeightSolve" name="test_marginal_ray_height_solve_constructor[backend=numpy]" time="0.031" /><testcase classname="tests.test_solves.TestMarginalRayHeightSolve" name="test_marginal_ray_height_solve_constructor[backend=torch]" time="0.043" /><testcase classname="tests.test_solves.TestMarginalRayHeightSolve" name="test_marginal_ray_height_solve_apply[backend=numpy]" time="0.051" /><testcase classname="tests.test_solves.TestMarginalRayHeightSolve" name="test_marginal_ray_height_solve_apply[backend=torch]" time="0.042" /><testcase classname="tests.test_solves.TestMarginalRayHeightSolve" name="test_to_dict[backend=numpy]" time="0.039" /><testcase classname="tests.test_solves.TestMarginalRayHeightSolve" name="test_to_dict[backend=torch]" time="0.057" /><testcase classname="tests.test_solves.TestMarginalRayHeightSolve" name="test_from_dict[backend=numpy]" time="0.045" /><testcase classname="tests.test_solves.TestMarginalRayHeightSolve" name="test_from_dict[backend=torch]" time="0.050" /><testcase classname="tests.test_solves.TestMarginalRayHeightSolve" name="test_from_dict_invalid_type[backend=numpy]" time="0.047" /><testcase classname="tests.test_solves.TestMarginalRayHeightSolve" name="test_from_dict_invalid_type[backend=torch]" time="0.052" /><testcase classname="tests.test_solves.TestChiefRayHeightSolve" name="test_chief_ray_height_solve_constructor[backend=numpy]" time="0.046" /><testcase classname="tests.test_solves.TestChiefRayHeightSolve" name="test_chief_ray_height_solve_constructor[backend=torch]" time="0.051" /><testcase classname="tests.test_solves.TestChiefRayHeightSolve" name="test_invalid_surface_idx[backend=numpy]" time="0.041" /><testcase classname="tests.test_solves.TestChiefRayHeightSolve" name="test_invalid_surface_idx[backend=torch]" time="0.044" /><testcase classname="tests.test_solves.TestChiefRayHeightSolve" name="test_chief_ray_height_solve_apply[backend=numpy]" time="0.039" /><testcase classname="tests.test_solves.TestChiefRayHeightSolve" name="test_chief_ray_height_solve_apply[backend=torch]" time="0.079" /><testcase classname="tests.test_solves.TestChiefRayHeightSolve" name="test_to_dict[backend=numpy]" time="0.046" /><testcase classname="tests.test_solves.TestChiefRayHeightSolve" name="test_to_dict[backend=torch]" time="0.040" /><testcase classname="tests.test_solves.TestChiefRayHeightSolve" name="test_from_dict[backend=numpy]" time="0.049" /><testcase classname="tests.test_solves.TestChiefRayHeightSolve" name="test_from_dict[backend=torch]" time="0.052" /><testcase classname="tests.test_solves.TestQuickfocusSolve" name="test_quick_focus_solve_constructor[backend=numpy]" time="0.041" /><testcase classname="tests.test_solves.TestQuickfocusSolve" name="test_quick_focus_solve_constructor[backend=torch]" time="0.041" /><testcase classname="tests.test_solves.TestQuickfocusSolve" name="test_quick_focus_solve_apply[backend=numpy]" time="0.057" /><testcase classname="tests.test_solves.TestQuickfocusSolve" name="test_quick_focus_solve_apply[backend=torch]" time="0.100" /><testcase classname="tests.test_solves.TestSolveFactory" name="test_create_solve[backend=numpy]" time="0.038" /><testcase classname="tests.test_solves.TestSolveFactory" name="test_create_solve[backend=torch]" time="0.039" /><testcase classname="tests.test_solves.TestSolveFactory" name="test_create_solve_invalid_solve_type[backend=numpy]" time="0.038" /><testcase classname="tests.test_solves.TestSolveFactory" name="test_create_solve_invalid_solve_type[backend=torch]" time="0.038" /><testcase classname="tests.test_solves.TestSolveManager" name="test_solve_manager_constructor[backend=numpy]" time="0.043" /><testcase classname="tests.test_solves.TestSolveManager" name="test_solve_manager_constructor[backend=torch]" time="0.033" /><testcase classname="tests.test_solves.TestSolveManager" name="test_add_solve[backend=numpy]" time="0.033" /><testcase classname="tests.test_solves.TestSolveManager" name="test_add_solve[backend=torch]" time="0.038" /><testcase classname="tests.test_solves.TestSolveManager" name="test_apply_solves[backend=numpy]" time="0.040" /><testcase classname="tests.test_solves.TestSolveManager" name="test_apply_solves[backend=torch]" time="0.077" /><testcase classname="tests.test_solves.TestSolveManager" name="test_clear_solves[backend=numpy]" time="0.053" /><testcase classname="tests.test_solves.TestSolveManager" name="test_clear_solves[backend=torch]" time="0.051" /><testcase classname="tests.test_standard_surface.TestSurface" name="test_trace_paraxial_rays[backend=numpy]" time="0.002" /><testcase classname="tests.test_standard_surface.TestSurface" name="test_trace_paraxial_rays[backend=torch]" time="0.001" /><testcase classname="tests.test_standard_surface.TestSurface" name="test_trace_real_rays[backend=numpy]" time="0.002" /><testcase classname="tests.test_standard_surface.TestSurface" name="test_trace_real_rays[backend=torch]" time="0.003" /><testcase classname="tests.test_standard_surface.TestSurface" name="test_set_semi_aperture[backend=numpy]" time="0.001" /><testcase classname="tests.test_standard_surface.TestSurface" name="test_set_semi_aperture[backend=torch]" time="0.002" /><testcase classname="tests.test_standard_surface.TestSurface" name="test_reset[backend=numpy]" time="0.001" /><testcase classname="tests.test_standard_surface.TestSurface" name="test_reset[backend=torch]" time="0.001" /><testcase classname="tests.test_standard_surface.TestSurface" name="test_set_fresnel_coating[backend=numpy]" time="0.001" /><testcase classname="tests.test_standard_surface.TestSurface" name="test_set_fresnel_coating[backend=torch]" time="0.001" /><testcase classname="tests.test_standard_surface.TestSurface" name="test_is_rotationally_symmetric[backend=numpy]" time="0.001" /><testcase classname="tests.test_standard_surface.TestSurface" name="test_is_rotationally_symmetric[backend=torch]" time="0.002" /><testcase classname="tests.test_standard_surface.TestSurface" name="test_is_rotationally_symmetric_false[backend=numpy]" time="0.001" /><testcase classname="tests.test_standard_surface.TestSurface" name="test_is_rotationally_symmetric_false[backend=torch]" time="0.001" /><testcase classname="tests.test_standard_surface.TestSurface" name="test_to_dict[backend=numpy]" time="0.001" /><testcase classname="tests.test_standard_surface.TestSurface" name="test_to_dict[backend=torch]" time="0.001" /><testcase classname="tests.test_standard_surface.TestSurface" name="test_from_dict[backend=numpy]" time="0.001" /><testcase classname="tests.test_standard_surface.TestSurface" name="test_from_dict[backend=torch]" time="0.002" /><testcase classname="tests.test_standard_surface.TestSurface" name="test_from_dict_missing_type[backend=numpy]" time="0.001" /><testcase classname="tests.test_standard_surface.TestSurface" name="test_from_dict_missing_type[backend=torch]" time="0.001" /><testcase classname="tests.test_surface_factory.TestSurfaceFactory" name="test_create_surface_standard[backend=numpy]" time="0.047" /><testcase classname="tests.test_surface_factory.TestSurfaceFactory" name="test_create_surface_standard[backend=torch]" time="0.052" /><testcase classname="tests.test_surface_factory.TestSurfaceFactory" name="test_create_surface_even_asphere[backend=numpy]" time="0.051" /><testcase classname="tests.test_surface_factory.TestSurfaceFactory" name="test_create_surface_even_asphere[backend=torch]" time="0.048" /><testcase classname="tests.test_surface_factory.TestSurfaceFactory" name="test_create_surface_odd_asphere[backend=numpy]" time="0.042" /><testcase classname="tests.test_surface_factory.TestSurfaceFactory" name="test_create_surface_odd_asphere[backend=torch]" time="0.044" /><testcase classname="tests.test_surface_factory.TestSurfaceFactory" name="test_create_surface_polynomial[backend=numpy]" time="0.045" /><testcase classname="tests.test_surface_factory.TestSurfaceFactory" name="test_create_surface_polynomial[backend=torch]" time="0.050" /><testcase classname="tests.test_surface_factory.TestSurfaceFactory" name="test_create_surface_chebyshev[backend=numpy]" time="0.048" /><testcase classname="tests.test_surface_factory.TestSurfaceFactory" name="test_create_surface_chebyshev[backend=torch]" time="0.062" /><testcase classname="tests.test_surface_factory.TestSurfaceFactory" name="test_create_surface_object[backend=numpy]" time="0.075" /><testcase classname="tests.test_surface_factory.TestSurfaceFactory" name="test_create_surface_object[backend=torch]" time="0.079" /><testcase classname="tests.test_surface_factory.TestSurfaceFactory" name="test_invalid_surface_type[backend=numpy]" time="0.078" /><testcase classname="tests.test_surface_factory.TestSurfaceFactory" name="test_invalid_surface_type[backend=torch]" time="0.059" /><testcase classname="tests.test_surface_factory.TestSurfaceFactory" name="test_invalid_surface_index[backend=numpy]" time="0.064" /><testcase classname="tests.test_surface_factory.TestSurfaceFactory" name="test_invalid_surface_index[backend=torch]" time="0.061" /><testcase classname="tests.test_surface_factory.TestSurfaceFactory" name="test_create_surface_with_coating[backend=numpy]" time="0.053" /><testcase classname="tests.test_surface_factory.TestSurfaceFactory" name="test_create_surface_with_coating[backend=torch]" time="0.063" /><testcase classname="tests.test_surface_factory.TestSurfaceFactory" name="test_create_surface_with_fresnel[backend=numpy]" time="0.060" /><testcase classname="tests.test_surface_factory.TestSurfaceFactory" name="test_create_surface_with_fresnel[backend=torch]" time="0.071" /><testcase classname="tests.test_surface_factory.TestSurfaceFactory" name="test_invalid_z_with_thickness[backend=numpy]" time="0.058" /><testcase classname="tests.test_surface_factory.TestSurfaceFactory" name="test_invalid_z_with_thickness[backend=torch]" time="0.052" /><testcase classname="tests.test_surface_factory.TestSurfaceFactory" name="test_absolute_coordinates[backend=numpy]" time="0.050" /><testcase classname="tests.test_surface_factory.TestSurfaceFactory" name="test_absolute_coordinates[backend=torch]" time="0.051" /><testcase classname="tests.test_surface_factory.TestSurfaceFactory" name="test_invalid_thickness_for_abs_cs[backend=numpy]" time="0.042" /><testcase classname="tests.test_surface_factory.TestSurfaceFactory" name="test_invalid_thickness_for_abs_cs[backend=torch]" time="0.046" /><testcase classname="tests.test_surface_factory.TestSurfaceFactory" name="test_create_paraxial_standard[backend=numpy]" time="0.047" /><testcase classname="tests.test_surface_factory.TestSurfaceFactory" name="test_create_paraxial_standard[backend=torch]" time="0.044" /><testcase classname="tests.test_surface_factory.TestSurfaceFactory" name="test_create_grating_surface[backend=numpy]" time="0.051" /><testcase classname="tests.test_surface_factory.TestSurfaceFactory" name="test_create_grating_surface[backend=torch]" time="0.047" /><testcase classname="tests.test_surface_factory.TestSurfaceFactory" name="test_invalid_paraxial_surface[backend=numpy]" time="0.052" /><testcase classname="tests.test_surface_factory.TestSurfaceFactory" name="test_invalid_paraxial_surface[backend=torch]" time="0.045" /><testcase classname="tests.test_surface_group.TestSurfaceGroupUpdatesRealObjects" name="test_add_surface_new_object_append_empty[backend=numpy-True]" time="0.001" /><testcase classname="tests.test_surface_group.TestSurfaceGroupUpdatesRealObjects" name="test_add_surface_new_object_append_empty[backend=numpy-False]" time="0.001" /><testcase classname="tests.test_surface_group.TestSurfaceGroupUpdatesRealObjects" name="test_add_surface_new_object_append_empty[backend=torch-True]" time="0.002" /><testcase classname="tests.test_surface_group.TestSurfaceGroupUpdatesRealObjects" name="test_add_surface_new_object_append_empty[backend=torch-False]" time="0.001" /><testcase classname="tests.test_surface_group.TestSurfaceGroupUpdatesRealObjects" name="test_add_surface_new_object_append_non_empty_abs_cs[backend=numpy]" time="0.001" /><testcase classname="tests.test_surface_group.TestSurfaceGroupUpdatesRealObjects" name="test_add_surface_new_object_append_non_empty_abs_cs[backend=torch]" time="0.004" /><testcase classname="tests.test_surface_group.TestSurfaceGroupUpdatesRealObjects" name="test_add_surface_new_object_append_non_empty_rel_cs_no_update[backend=numpy]" time="0.001" /><testcase classname="tests.test_surface_group.TestSurfaceGroupUpdatesRealObjects" name="test_add_surface_new_object_append_non_empty_rel_cs_no_update[backend=torch]" time="0.002" /><testcase classname="tests.test_surface_group.TestSurfaceGroupUpdatesRealObjects" name="test_add_surface_new_object_insert_middle_rel_cs_triggers_update[backend=numpy]" time="0.001" /><testcase classname="tests.test_surface_group.TestSurfaceGroupUpdatesRealObjects" name="test_add_surface_new_object_insert_middle_rel_cs_triggers_update[backend=torch]" time="0.002" /><testcase classname="tests.test_surface_group.TestSurfaceGroupUpdatesRealObjects" name="test_add_surface_new_object_is_stop_propagation[backend=numpy]" time="0.001" /><testcase classname="tests.test_surface_group.TestSurfaceGroupUpdatesRealObjects" name="test_add_surface_new_object_is_stop_propagation[backend=torch]" time="0.001" /><testcase classname="tests.test_surface_group.TestSurfaceGroupUpdatesRealObjects" name="test_add_surface_by_creation_rel_cs[backend=numpy]" time="0.012" /><testcase classname="tests.test_surface_group.TestSurfaceGroupUpdatesRealObjects" name="test_add_surface_by_creation_rel_cs[backend=torch]" time="0.016" /><testcase classname="tests.test_surface_group.TestSurfaceGroupUpdatesRealObjects" name="test_add_surface_by_creation_error_no_index[backend=numpy]" time="0.001" /><testcase classname="tests.test_surface_group.TestSurfaceGroupUpdatesRealObjects" name="test_add_surface_by_creation_error_no_index[backend=torch]" time="0.001" /><testcase classname="tests.test_surface_group.TestSurfaceGroupUpdatesRealObjects" name="test_remove_surface_middle_rel_cs_triggers_update[backend=numpy]" time="0.002" /><testcase classname="tests.test_surface_group.TestSurfaceGroupUpdatesRealObjects" name="test_remove_surface_middle_rel_cs_triggers_update[backend=torch]" time="0.002" /><testcase classname="tests.test_surface_group.TestSurfaceGroupUpdatesRealObjects" name="test_remove_surface_last_rel_cs_no_update_triggered[backend=numpy]" time="0.001" /><testcase classname="tests.test_surface_group.TestSurfaceGroupUpdatesRealObjects" name="test_remove_surface_last_rel_cs_no_update_triggered[backend=torch]" time="0.003" /><testcase classname="tests.test_surface_group.TestSurfaceGroupUpdatesRealObjects" name="test_remove_surface_abs_cs_no_update[backend=numpy]" time="0.001" /><testcase classname="tests.test_surface_group.TestSurfaceGroupUpdatesRealObjects" name="test_remove_surface_abs_cs_no_update[backend=torch]" time="0.002" /><testcase classname="tests.test_surface_group.TestSurfaceGroupUpdatesRealObjects" name="test_remove_surface_error_remove_object[backend=numpy]" time="0.001" /><testcase classname="tests.test_surface_group.TestSurfaceGroupUpdatesRealObjects" name="test_remove_surface_error_remove_object[backend=torch]" time="0.002" /><testcase classname="tests.test_surface_group.TestSurfaceGroupUpdatesRealObjects" name="test_add_surface_new_object_error_negative_index[backend=numpy]" time="0.001" /><testcase classname="tests.test_surface_group.TestSurfaceGroupUpdatesRealObjects" name="test_add_surface_new_object_error_negative_index[backend=torch]" time="0.002" /><testcase classname="tests.test_surface_group.TestSurfaceGroupUpdatesRealObjects" name="test_add_surface_new_object_error_index_out_of_bounds[backend=numpy]" time="0.001" /><testcase classname="tests.test_surface_group.TestSurfaceGroupUpdatesRealObjects" name="test_add_surface_new_object_error_index_out_of_bounds[backend=torch]" time="0.002" /><testcase classname="tests.test_surface_group.TestSurfaceGroupUpdatesRealObjects" name="test_add_surface_by_creation_error_negative_index[backend=numpy]" time="0.001" /><testcase classname="tests.test_surface_group.TestSurfaceGroupUpdatesRealObjects" name="test_add_surface_by_creation_error_negative_index[backend=torch]" time="0.001" /><testcase classname="tests.test_surface_group.TestSurfaceGroupUpdatesRealObjects" name="test_add_surface_by_creation_error_index_out_of_bounds[backend=numpy]" time="0.001" /><testcase classname="tests.test_surface_group.TestSurfaceGroupUpdatesRealObjects" name="test_add_surface_by_creation_error_index_out_of_bounds[backend=torch]" time="0.001" /><testcase classname="tests.test_surface_group.TestSurfaceGroupUpdatesRealObjects" name="test_remove_surface_error_index_out_of_bounds_negative[backend=numpy]" time="0.002" /><testcase classname="tests.test_surface_group.TestSurfaceGroupUpdatesRealObjects" name="test_remove_surface_error_index_out_of_bounds_negative[backend=torch]" time="0.002" /><testcase classname="tests.test_surface_group.TestSurfaceGroupUpdatesRealObjects" name="test_remove_surface_error_index_out_of_bounds_too_large[backend=numpy]" time="0.001" /><testcase classname="tests.test_surface_group.TestSurfaceGroupUpdatesRealObjects" name="test_remove_surface_error_index_out_of_bounds_too_large[backend=torch]" time="0.002" /><testcase classname="tests.test_surface_group.TestSurfaceGroupUpdatesRealObjects" name="test_update_coordinate_systems_infinite_thickness_error[backend=numpy]" time="0.003" /><testcase classname="tests.test_surface_group.TestSurfaceGroupUpdatesRealObjects" name="test_update_coordinate_systems_infinite_thickness_error[backend=torch]" time="0.001" /><testcase classname="tests.test_surface_group.TestSurfaceGroupUpdatesRealObjects" name="test_update_coordinate_systems_thickness_is_be_array[backend=numpy]" time="0.001" /><testcase classname="tests.test_surface_group.TestSurfaceGroupUpdatesRealObjects" name="test_update_coordinate_systems_thickness_is_be_array[backend=torch]" time="0.003" /><testcase classname="tests.test_surface_group.TestSurfaceGroupUpdatesRealObjects" name="test_insert_all_at_index_1[backend=numpy]" time="0.053" /><testcase classname="tests.test_surface_group.TestSurfaceGroupUpdatesRealObjects" name="test_insert_all_at_index_1[backend=torch]" time="0.068" /><testcase classname="tests.test_thin_lens_interaction_model.TestThinLensInteractionModel" name="test_init[backend=numpy]" time="0.001" /><testcase classname="tests.test_thin_lens_interaction_model.TestThinLensInteractionModel" name="test_init[backend=torch]" time="0.001" /><testcase classname="tests.test_thin_lens_interaction_model.TestThinLensInteractionModel" name="test_trace_paraxial_rays[backend=numpy]" time="0.001" /><testcase classname="tests.test_thin_lens_interaction_model.TestThinLensInteractionModel" name="test_trace_paraxial_rays[backend=torch]" time="0.002" /><testcase classname="tests.test_thin_lens_interaction_model.TestThinLensInteractionModel" name="test_trace_real_rays[backend=numpy]" time="0.002" /><testcase classname="tests.test_thin_lens_interaction_model.TestThinLensInteractionModel" name="test_trace_real_rays[backend=torch]" time="0.003" /><testcase classname="tests.test_thin_lens_interaction_model.TestThinLensInteractionModel" name="test_paraxial_surface_perfect_imaging[backend=numpy]" time="0.004" /><testcase classname="tests.test_thin_lens_interaction_model.TestThinLensInteractionModel" name="test_paraxial_surface_perfect_imaging[backend=torch]" time="0.013" /><testcase classname="tests.test_thin_lens_interaction_model.TestThinLensInteractionModel" name="test_flip[backend=numpy]" time="0.001" /><testcase classname="tests.test_thin_lens_interaction_model.TestThinLensInteractionModel" name="test_flip[backend=torch]" time="0.001" /><testcase classname="tests.test_thin_lens_interaction_model.TestThinLensInteractionModel" name="test_to_dict[backend=numpy]" time="0.001" /><testcase classname="tests.test_thin_lens_interaction_model.TestThinLensInteractionModel" name="test_to_dict[backend=torch]" time="0.001" /><testcase classname="tests.test_thin_lens_interaction_model.TestThinLensInteractionModel" name="test_refractive_paraxial_ray_trace[backend=numpy]" time="0.006" /><testcase classname="tests.test_thin_lens_interaction_model.TestThinLensInteractionModel" name="test_refractive_paraxial_ray_trace[backend=torch]" time="0.014" /><testcase classname="tests.test_through_focus_mtf.TestThroughFocusMTF" name="test_init_defaults[backend=numpy]" time="2.284" /><testcase classname="tests.test_through_focus_mtf.TestThroughFocusMTF" name="test_init_defaults[backend=torch]" time="7.074" /><testcase classname="tests.test_through_focus_mtf.TestThroughFocusMTF" name="test_init_custom_params[backend=numpy]" time="0.257" /><testcase classname="tests.test_through_focus_mtf.TestThroughFocusMTF" name="test_init_custom_params[backend=torch]" time="0.885" /><testcase classname="tests.test_through_focus_mtf.TestThroughFocusMTF" name="test_init_wavelength_direct_float[backend=numpy]" time="0.364" /><testcase classname="tests.test_through_focus_mtf.TestThroughFocusMTF" name="test_init_wavelength_direct_float[backend=torch]" time="1.261" /><testcase classname="tests.test_through_focus_mtf.TestThroughFocusMTF" name="test_init_invalid_num_steps[backend=numpy]" time="0.034" /><testcase classname="tests.test_through_focus_mtf.TestThroughFocusMTF" name="test_init_invalid_num_steps[backend=torch]" time="0.048" /><testcase classname="tests.test_through_focus_mtf.TestThroughFocusMTF" name="test_analysis_results_structure_and_values[backend=numpy]" time="0.147" /><testcase classname="tests.test_through_focus_mtf.TestThroughFocusMTF" name="test_analysis_results_structure_and_values[backend=torch]" time="0.455" /><testcase classname="tests.test_through_focus_mtf.TestThroughFocusMTF" name="test_view_min_steps[backend=numpy]" time="0.537" /><testcase classname="tests.test_through_focus_mtf.TestThroughFocusMTF" name="test_view_min_steps[backend=torch]" time="1.576" /><testcase classname="tests.test_through_focus_mtf.TestThroughFocusMTF" name="test_view_few_steps[backend=numpy]" time="1.479" /><testcase classname="tests.test_through_focus_mtf.TestThroughFocusMTF" name="test_view_few_steps[backend=torch]" time="3.965" /><testcase classname="tests.test_through_focus_mtf.TestThroughFocusMTF" name="test_view_default_steps[backend=numpy]" time="0.769" /><testcase classname="tests.test_through_focus_mtf.TestThroughFocusMTF" name="test_view_default_steps[backend=torch]" time="4.406" /><testcase classname="tests.test_through_focus_mtf.TestThroughFocusMTF" name="test_view_single_field[backend=numpy]" time="0.244" /><testcase classname="tests.test_through_focus_mtf.TestThroughFocusMTF" name="test_view_single_field[backend=torch]" time="0.727" /><testcase classname="tests.test_tolerancing" name="test_init[backend=numpy]" time="0.011" /><testcase classname="tests.test_tolerancing" name="test_init[backend=torch]" time="0.013" /><testcase classname="tests.test_tolerancing" name="test_add_operand[backend=numpy]" time="0.014" /><testcase classname="tests.test_tolerancing" name="test_add_operand[backend=torch]" time="0.016" /><testcase classname="tests.test_tolerancing" name="test_add_operand_no_target[backend=numpy]" time="0.020" /><testcase classname="tests.test_tolerancing" name="test_add_operand_no_target[backend=torch]" time="0.025" /><testcase classname="tests.test_tolerancing" name="test_add_perturbation[backend=numpy]" time="0.017" /><testcase classname="tests.test_tolerancing" name="test_add_perturbation[backend=torch]" time="0.011" /><testcase classname="tests.test_tolerancing" name="test_add_compensator[backend=numpy]" time="0.018" /><testcase classname="tests.test_tolerancing" name="test_add_compensator[backend=torch]" time="0.016" /><testcase classname="tests.test_tolerancing" name="test_apply_compensators[backend=numpy]" time="0.037" /><testcase classname="tests.test_tolerancing" name="test_apply_compensators[backend=torch]" time="0.084" /><testcase classname="tests.test_tolerancing" name="test_evaluate[backend=numpy]" time="0.019" /><testcase classname="tests.test_tolerancing" name="test_evaluate[backend=torch]" time="0.026" /><testcase classname="tests.test_tolerancing" name="test_reset[backend=numpy]" time="0.014" /><testcase classname="tests.test_tolerancing" name="test_reset[backend=torch]" time="0.016" /><testcase classname="tests.test_torch_backend" name="test_set_and_get_device_cpu" time="0.001" /><testcase classname="tests.test_torch_backend" name="test_set_and_get_device_cuda" time="0.001" /><testcase classname="tests.test_torch_backend" name="test_set_device_invalid" time="0.001" /><testcase classname="tests.test_torch_backend" name="test_set_and_get_precision_float32" time="0.001" /><testcase classname="tests.test_torch_backend" name="test_set_and_get_precision_float64" time="0.001" /><testcase classname="tests.test_torch_backend" name="test_set_precision_invalid" time="0.001" /><testcase classname="tests.test_torch_backend" name="test_grad_mode_enable_disable" time="0.001" /><testcase classname="tests.test_torch_backend" name="test_grad_mode_temporary_enable" time="0.001" /><testcase classname="tests.test_torch_optimization.TestTorchBaseOptimizerSetup" name="test_init_raises_error_if_backend_not_torch" time="0.046" /><testcase classname="tests.test_torch_optimization.TestTorchBaseOptimizerSetup" name="test_init_enables_gradient_tracking_with_warning" time="0.034" /><testcase classname="tests.test_torch_optimization.TestTorchOptimizers" name="test_optimize_successfully_reduces_loss[TorchAdamOptimizer]" time="0.347" /><testcase classname="tests.test_torch_optimization.TestTorchOptimizers" name="test_optimize_successfully_reduces_loss[TorchSGDOptimizer]" time="0.295" /><testcase classname="tests.test_torch_optimization.TestTorchOptimizers" name="test_optimize_no_operands_returns_zero_loss[TorchAdamOptimizer]" time="0.056" /><testcase classname="tests.test_torch_optimization.TestTorchOptimizers" name="test_optimize_no_operands_returns_zero_loss[TorchSGDOptimizer]" time="0.052" /><testcase classname="tests.test_torch_optimization.TestTorchOptimizers" name="test_optimize_no_variables_raises_error[TorchAdamOptimizer]" time="0.045" /><testcase classname="tests.test_torch_optimization.TestTorchOptimizers" name="test_optimize_no_variables_raises_error[TorchSGDOptimizer]" time="0.043" /><testcase classname="tests.test_torch_optimization.TestTorchOptimizers" name="test_optimize_with_zero_steps_makes_no_change[TorchAdamOptimizer]" time="0.062" /><testcase classname="tests.test_torch_optimization.TestTorchOptimizers" name="test_optimize_with_zero_steps_makes_no_change[TorchSGDOptimizer]" time="0.064" /><testcase classname="tests.test_torch_optimization.TestTorchOptimizers" name="test_callback_is_invoked_at_each_step[TorchAdamOptimizer]" time="0.092" /><testcase classname="tests.test_torch_optimization.TestTorchOptimizers" name="test_callback_is_invoked_at_each_step[TorchSGDOptimizer]" time="0.094" /><testcase classname="tests.test_torch_optimization.TestTorchOptimizers" name="test_display_output_controlled_by_disp_flag[True-True-TorchAdamOptimizer]" time="0.061" /><testcase classname="tests.test_torch_optimization.TestTorchOptimizers" name="test_display_output_controlled_by_disp_flag[True-True-TorchSGDOptimizer]" time="0.057" /><testcase classname="tests.test_torch_optimization.TestTorchOptimizers" name="test_display_output_controlled_by_disp_flag[False-False-TorchAdamOptimizer]" time="0.042" /><testcase classname="tests.test_torch_optimization.TestTorchOptimizers" name="test_display_output_controlled_by_disp_flag[False-False-TorchSGDOptimizer]" time="0.053" /><testcase classname="tests.test_types.TestSurfaceParameters" name="test_geometry_config_field_in_surface_parameters[radius]" time="0.003" /><testcase classname="tests.test_types.TestSurfaceParameters" name="test_geometry_config_field_in_surface_parameters[conic]" time="0.003" /><testcase classname="tests.test_types.TestSurfaceParameters" name="test_geometry_config_field_in_surface_parameters[grating_order]" time="0.003" /><testcase classname="tests.test_types.TestSurfaceParameters" name="test_geometry_config_field_in_surface_parameters[grating_period]" time="0.003" /><testcase classname="tests.test_types.TestSurfaceParameters" name="test_geometry_config_field_in_surface_parameters[groove_orientation_angle]" time="0.003" /><testcase classname="tests.test_types.TestSurfaceParameters" name="test_geometry_config_field_in_surface_parameters[coefficients]" time="0.003" /><testcase classname="tests.test_types.TestSurfaceParameters" name="test_geometry_config_field_in_surface_parameters[tol]" time="0.004" /><testcase classname="tests.test_types.TestSurfaceParameters" name="test_geometry_config_field_in_surface_parameters[max_iter]" time="0.002" /><testcase classname="tests.test_types.TestSurfaceParameters" name="test_geometry_config_field_in_surface_parameters[norm_x]" time="0.003" /><testcase classname="tests.test_types.TestSurfaceParameters" name="test_geometry_config_field_in_surface_parameters[norm_y]" time="0.003" /><testcase classname="tests.test_types.TestSurfaceParameters" name="test_geometry_config_field_in_surface_parameters[norm_radius]" time="0.003" /><testcase classname="tests.test_types.TestSurfaceParameters" name="test_geometry_config_field_in_surface_parameters[radius_x]" time="0.004" /><testcase classname="tests.test_types.TestSurfaceParameters" name="test_geometry_config_field_in_surface_parameters[radius_y]" time="0.002" /><testcase classname="tests.test_types.TestSurfaceParameters" name="test_geometry_config_field_in_surface_parameters[conic_x]" time="0.003" /><testcase classname="tests.test_types.TestSurfaceParameters" name="test_geometry_config_field_in_surface_parameters[conic_y]" time="0.003" /><testcase classname="tests.test_types.TestSurfaceParameters" name="test_geometry_config_field_in_surface_parameters[toroidal_coeffs_poly_y]" time="0.003" /><testcase classname="tests.test_types.TestSurfaceParameters" name="test_geometry_config_field_in_surface_parameters[zernike_type]" time="0.003" /><testcase classname="tests.test_types.TestSurfaceParameters" name="test_geometry_config_field_in_surface_parameters[radial_terms]" time="0.004" /><testcase classname="tests.test_types.TestSurfaceParameters" name="test_geometry_config_field_in_surface_parameters[freeform_coeffs]" time="0.003" /><testcase classname="tests.test_types.TestSurfaceParameters" name="test_equal_geometry_field_types[radius]" time="0.006" /><testcase classname="tests.test_types.TestSurfaceParameters" name="test_equal_geometry_field_types[conic]" time="0.006" /><testcase classname="tests.test_types.TestSurfaceParameters" name="test_equal_geometry_field_types[grating_order]" time="0.007" /><testcase classname="tests.test_types.TestSurfaceParameters" name="test_equal_geometry_field_types[grating_period]" time="0.007" /><testcase classname="tests.test_types.TestSurfaceParameters" name="test_equal_geometry_field_types[groove_orientation_angle]" time="0.007" /><testcase classname="tests.test_types.TestSurfaceParameters" name="test_equal_geometry_field_types[coefficients]" time="0.007" /><testcase classname="tests.test_types.TestSurfaceParameters" name="test_equal_geometry_field_types[tol]" time="0.007" /><testcase classname="tests.test_types.TestSurfaceParameters" name="test_equal_geometry_field_types[max_iter]" time="0.008" /><testcase classname="tests.test_types.TestSurfaceParameters" name="test_equal_geometry_field_types[norm_x]" time="0.008" /><testcase classname="tests.test_types.TestSurfaceParameters" name="test_equal_geometry_field_types[norm_y]" time="0.007" /><testcase classname="tests.test_types.TestSurfaceParameters" name="test_equal_geometry_field_types[norm_radius]" time="0.011" /><testcase classname="tests.test_types.TestSurfaceParameters" name="test_equal_geometry_field_types[radius_x]" time="0.008" /><testcase classname="tests.test_types.TestSurfaceParameters" name="test_equal_geometry_field_types[radius_y]" time="0.008" /><testcase classname="tests.test_types.TestSurfaceParameters" name="test_equal_geometry_field_types[conic_x]" time="0.007" /><testcase classname="tests.test_types.TestSurfaceParameters" name="test_equal_geometry_field_types[conic_y]" time="0.006" /><testcase classname="tests.test_types.TestSurfaceParameters" name="test_equal_geometry_field_types[toroidal_coeffs_poly_y]" time="0.008" /><testcase classname="tests.test_types.TestSurfaceParameters" name="test_equal_geometry_field_types[zernike_type]" time="0.007" /><testcase classname="tests.test_types.TestSurfaceParameters" name="test_equal_geometry_field_types[radial_terms]" time="0.007" /><testcase classname="tests.test_types.TestSurfaceParameters" name="test_equal_geometry_field_types[freeform_coeffs]" time="0.007" /><testcase classname="tests.test_utils" name="test_resolve_wavelengths_all" time="0.001" /><testcase classname="tests.test_utils" name="test_resolve_wavelengths_primary" time="0.001" /><testcase classname="tests.test_utils" name="test_resolve_wavelengths_list" time="0.001" /><testcase classname="tests.test_utils" name="test_resolve_wavelengths_invalid_string" time="0.001" /><testcase classname="tests.test_utils" name="test_resolve_wavelengths_invalid_type" time="0.001" /><testcase classname="tests.test_utils" name="test_resolve_fields_all" time="0.001" /><testcase classname="tests.test_utils" name="test_resolve_fields_list" time="0.001" /><testcase classname="tests.test_utils" name="test_resolve_fields_invalid_string" time="0.001" /><testcase classname="tests.test_utils" name="test_resolve_fields_invalid_type" time="0.001" /><testcase classname="tests.test_utils" name="test_resolve_wavelength_primary" time="0.001" /><testcase classname="tests.test_utils" name="test_resolve_wavelength_float" time="0.001" /><testcase classname="tests.test_utils" name="test_resolve_wavelength_int" time="0.001" /><testcase classname="tests.test_utils" name="test_resolve_wavelength_invalid_string" time="0.001" /><testcase classname="tests.test_utils" name="test_resolve_wavelength_invalid_type" time="0.001" /><testcase classname="tests.test_variable.TestRadiusVariable" name="test_get_value[backend=numpy]" time="0.126" /><testcase classname="tests.test_variable.TestRadiusVariable" name="test_get_value[backend=torch]" time="0.142" /><testcase classname="tests.test_variable.TestRadiusVariable" name="test_update_value[backend=numpy]" time="0.131" /><testcase classname="tests.test_variable.TestRadiusVariable" name="test_update_value[backend=torch]" time="0.112" /><testcase classname="tests.test_variable.TestReciprocalRadiusVariable" name="test_get_value[backend=numpy]" time="0.014" /><testcase classname="tests.test_variable.TestReciprocalRadiusVariable" name="test_get_value[backend=torch]" time="0.019" /><testcase classname="tests.test_variable.TestReciprocalRadiusVariable" name="test_update_value[backend=numpy]" time="0.011" /><testcase classname="tests.test_variable.TestReciprocalRadiusVariable" name="test_update_value[backend=torch]" time="0.015" /><testcase classname="tests.test_variable.TestReciprocalRadiusVariable" name="test_get_value_infinity[backend=numpy]" time="0.016" /><testcase classname="tests.test_variable.TestReciprocalRadiusVariable" name="test_get_value_infinity[backend=torch]" time="0.012" /><testcase classname="tests.test_variable.TestReciprocalRadiusVariable" name="test_update_value_zero[backend=numpy]" time="0.015" /><testcase classname="tests.test_variable.TestReciprocalRadiusVariable" name="test_update_value_zero[backend=torch]" time="0.015" /><testcase classname="tests.test_variable.TestReciprocalRadiusVariable" name="test_optimization" time="0.063" /><testcase classname="tests.test_variable.TestReciprocalRadiusVariable" name="test_optimization_with_flat_surface" time="0.084" /><testcase classname="tests.test_variable.TestConicVariable" name="test_get_value[backend=numpy]" time="0.026" /><testcase classname="tests.test_variable.TestConicVariable" name="test_get_value[backend=torch]" time="0.016" /><testcase classname="tests.test_variable.TestConicVariable" name="test_update_value[backend=numpy]" time="0.016" /><testcase classname="tests.test_variable.TestConicVariable" name="test_update_value[backend=torch]" time="0.018" /><testcase classname="tests.test_variable.TestConicVariable" name="test_string_representation[backend=numpy]" time="0.022" /><testcase classname="tests.test_variable.TestConicVariable" name="test_string_representation[backend=torch]" time="0.014" /><testcase classname="tests.test_variable.TestThicknessVariable" name="test_get_value[backend=numpy]" time="0.119" /><testcase classname="tests.test_variable.TestThicknessVariable" name="test_get_value[backend=torch]" time="0.131" /><testcase classname="tests.test_variable.TestThicknessVariable" name="test_update_value[backend=numpy]" time="0.123" /><testcase classname="tests.test_variable.TestThicknessVariable" name="test_update_value[backend=torch]" time="0.147" /><testcase classname="tests.test_variable.TestThicknessVariable" name="test_get_value_no_scaling[backend=numpy]" time="0.219" /><testcase classname="tests.test_variable.TestThicknessVariable" name="test_get_value_no_scaling[backend=torch]" time="0.205" /><testcase classname="tests.test_variable.TestIndexVariable" name="test_get_value[backend=numpy]" time="0.106" /><testcase classname="tests.test_variable.TestIndexVariable" name="test_get_value[backend=torch]" time="0.118" /><testcase classname="tests.test_variable.TestIndexVariable" name="test_update_value[backend=numpy]" time="0.103" /><testcase classname="tests.test_variable.TestIndexVariable" name="test_update_value[backend=torch]" time="0.092" /><testcase classname="tests.test_variable.TestIndexVariable" name="test_get_value_no_scaling[backend=numpy]" time="0.192" /><testcase classname="tests.test_variable.TestIndexVariable" name="test_get_value_no_scaling[backend=torch]" time="0.198" /><testcase classname="tests.test_variable.TestIndexVariable" name="test_string_representation[backend=numpy]" time="0.124" /><testcase classname="tests.test_variable.TestIndexVariable" name="test_string_representation[backend=torch]" time="0.129" /><testcase classname="tests.test_variable.TestMaterialVariable" name="test_get_value[backend=numpy]" time="0.117" /><testcase classname="tests.test_variable.TestMaterialVariable" name="test_get_value[backend=torch]" time="0.136" /><testcase classname="tests.test_variable.TestMaterialVariable" name="test_update_value[backend=numpy]" time="0.122" /><testcase classname="tests.test_variable.TestMaterialVariable" name="test_update_value[backend=torch]" time="0.123" /><testcase classname="tests.test_variable.TestMaterialVariable" name="test_string_representation[backend=numpy]" time="0.114" /><testcase classname="tests.test_variable.TestMaterialVariable" name="test_string_representation[backend=torch]" time="0.135" /><testcase classname="tests.test_variable.TestMaterialVariable" name="test_init_with_abbe_material" time="0.159" /><testcase classname="tests.test_variable.TestAsphereCoeffVariable" name="test_get_value[backend=numpy]" time="0.016" /><testcase classname="tests.test_variable.TestAsphereCoeffVariable" name="test_get_value[backend=torch]" time="0.019" /><testcase classname="tests.test_variable.TestAsphereCoeffVariable" name="test_update_value[backend=numpy]" time="0.019" /><testcase classname="tests.test_variable.TestAsphereCoeffVariable" name="test_update_value[backend=torch]" time="0.012" /><testcase classname="tests.test_variable.TestAsphereCoeffVariable" name="test_get_value_no_scaling[backend=numpy]" time="0.038" /><testcase classname="tests.test_variable.TestAsphereCoeffVariable" name="test_get_value_no_scaling[backend=torch]" time="0.038" /><testcase classname="tests.test_variable.TestAsphereCoeffVariable" name="test_string_representation[backend=numpy]" time="0.022" /><testcase classname="tests.test_variable.TestAsphereCoeffVariable" name="test_string_representation[backend=torch]" time="0.019" /><testcase classname="tests.test_variable.TestPolynomialCoeffVariable" name="test_get_value[backend=numpy]" time="0.019" /><testcase classname="tests.test_variable.TestPolynomialCoeffVariable" name="test_get_value[backend=torch]" time="0.032" /><testcase classname="tests.test_variable.TestPolynomialCoeffVariable" name="test_update_value[backend=numpy]" time="0.016" /><testcase classname="tests.test_variable.TestPolynomialCoeffVariable" name="test_update_value[backend=torch]" time="0.021" /><testcase classname="tests.test_variable.TestPolynomialCoeffVariable" name="test_get_value_index_error[backend=numpy]" time="0.036" /><testcase classname="tests.test_variable.TestPolynomialCoeffVariable" name="test_get_value_index_error[backend=torch]" time="0.048" /><testcase classname="tests.test_variable.TestPolynomialCoeffVariable" name="test_update_value_index_error[backend=numpy]" time="0.037" /><testcase classname="tests.test_variable.TestPolynomialCoeffVariable" name="test_update_value_index_error[backend=torch]" time="0.039" /><testcase classname="tests.test_variable.TestPolynomialCoeffVariable" name="test_string_representation[backend=numpy]" time="0.018" /><testcase classname="tests.test_variable.TestPolynomialCoeffVariable" name="test_string_representation[backend=torch]" time="0.019" /><testcase classname="tests.test_variable.TestPolynomialCoeffVariable" name="test_get_value_no_scaling[backend=numpy]" time="0.039" /><testcase classname="tests.test_variable.TestPolynomialCoeffVariable" name="test_get_value_no_scaling[backend=torch]" time="0.032" /><testcase classname="tests.test_variable.TestChebyshevCoeffVariable" name="test_get_value[backend=numpy]" time="0.020" /><testcase classname="tests.test_variable.TestChebyshevCoeffVariable" name="test_get_value[backend=torch]" time="0.018" /><testcase classname="tests.test_variable.TestChebyshevCoeffVariable" name="test_update_value[backend=numpy]" time="0.017" /><testcase classname="tests.test_variable.TestChebyshevCoeffVariable" name="test_update_value[backend=torch]" time="0.018" /><testcase classname="tests.test_variable.TestChebyshevCoeffVariable" name="test_get_value_index_error[backend=numpy]" time="0.032" /><testcase classname="tests.test_variable.TestChebyshevCoeffVariable" name="test_get_value_index_error[backend=torch]" time="0.037" /><testcase classname="tests.test_variable.TestChebyshevCoeffVariable" name="test_update_value_index_error[backend=numpy]" time="0.037" /><testcase classname="tests.test_variable.TestChebyshevCoeffVariable" name="test_update_value_index_error[backend=torch]" time="0.037" /><testcase classname="tests.test_variable.TestChebyshevCoeffVariable" name="test_string_representation[backend=numpy]" time="0.015" /><testcase classname="tests.test_variable.TestChebyshevCoeffVariable" name="test_string_representation[backend=torch]" time="0.017" /><testcase classname="tests.test_variable.TestZernikeCoeffVariable" name="test_get_value[backend=numpy]" time="0.018" /><testcase classname="tests.test_variable.TestZernikeCoeffVariable" name="test_get_value[backend=torch]" time="0.017" /><testcase classname="tests.test_variable.TestZernikeCoeffVariable" name="test_update_value[backend=numpy]" time="0.020" /><testcase classname="tests.test_variable.TestZernikeCoeffVariable" name="test_update_value[backend=torch]" time="0.018" /><testcase classname="tests.test_variable.TestZernikeCoeffVariable" name="test_get_value_index_error[backend=numpy]" time="0.028" /><testcase classname="tests.test_variable.TestZernikeCoeffVariable" name="test_get_value_index_error[backend=torch]" time="0.037" /><testcase classname="tests.test_variable.TestZernikeCoeffVariable" name="test_update_value_index_error[backend=numpy]" time="0.025" /><testcase classname="tests.test_variable.TestZernikeCoeffVariable" name="test_update_value_index_error[backend=torch]" time="0.032" /><testcase classname="tests.test_variable.TestZernikeCoeffVariable" name="test_string_representation[backend=numpy]" time="0.015" /><testcase classname="tests.test_variable.TestZernikeCoeffVariable" name="test_string_representation[backend=torch]" time="0.016" /><testcase classname="tests.test_variable.TestVariable" name="test_get_value[backend=numpy]" time="0.120" /><testcase classname="tests.test_variable.TestVariable" name="test_get_value[backend=torch]" time="0.116" /><testcase classname="tests.test_variable.TestVariable" name="test_unrecognized_attribute" time="0.153" /><testcase classname="tests.test_variable.TestVariable" name="test_invalid_type[backend=numpy]" time="0.166" /><testcase classname="tests.test_variable.TestVariable" name="test_invalid_type[backend=torch]" time="0.138" /><testcase classname="tests.test_variable.TestTiltVariable" name="test_get_value_x[backend=numpy]" time="0.118" /><testcase classname="tests.test_variable.TestTiltVariable" name="test_get_value_x[backend=torch]" time="0.113" /><testcase classname="tests.test_variable.TestTiltVariable" name="test_get_value_y[backend=numpy]" time="0.101" /><testcase classname="tests.test_variable.TestTiltVariable" name="test_get_value_y[backend=torch]" time="0.118" /><testcase classname="tests.test_variable.TestTiltVariable" name="test_update_value_x[backend=numpy]" time="0.098" /><testcase classname="tests.test_variable.TestTiltVariable" name="test_update_value_x[backend=torch]" time="0.133" /><testcase classname="tests.test_variable.TestTiltVariable" name="test_update_value_y[backend=numpy]" time="0.118" /><testcase classname="tests.test_variable.TestTiltVariable" name="test_update_value_y[backend=torch]" time="0.100" /><testcase classname="tests.test_variable.TestTiltVariable" name="test_invalid_axis[backend=numpy]" time="0.095" /><testcase classname="tests.test_variable.TestTiltVariable" name="test_invalid_axis[backend=torch]" time="0.127" /><testcase classname="tests.test_variable.TestTiltVariable" name="test_str[backend=numpy]" time="0.134" /><testcase classname="tests.test_variable.TestTiltVariable" name="test_str[backend=torch]" time="0.115" /><testcase classname="tests.test_variable.TestTiltVariable" name="test_get_value_no_scaling[backend=numpy]" time="0.274" /><testcase classname="tests.test_variable.TestTiltVariable" name="test_get_value_no_scaling[backend=torch]" time="0.268" /><testcase classname="tests.test_variable.TestDecenterVariable" name="test_get_value_x[backend=numpy]" time="0.112" /><testcase classname="tests.test_variable.TestDecenterVariable" name="test_get_value_x[backend=torch]" time="0.110" /><testcase classname="tests.test_variable.TestDecenterVariable" name="test_get_value_y[backend=numpy]" time="0.115" /><testcase classname="tests.test_variable.TestDecenterVariable" name="test_get_value_y[backend=torch]" time="0.141" /><testcase classname="tests.test_variable.TestDecenterVariable" name="test_update_value_x[backend=numpy]" time="0.131" /><testcase classname="tests.test_variable.TestDecenterVariable" name="test_update_value_x[backend=torch]" time="0.109" /><testcase classname="tests.test_variable.TestDecenterVariable" name="test_update_value_y[backend=numpy]" time="0.098" /><testcase classname="tests.test_variable.TestDecenterVariable" name="test_update_value_y[backend=torch]" time="0.089" /><testcase classname="tests.test_variable.TestDecenterVariable" name="test_invalid_axis[backend=numpy]" time="0.107" /><testcase classname="tests.test_variable.TestDecenterVariable" name="test_invalid_axis[backend=torch]" time="0.095" /><testcase classname="tests.test_variable.TestDecenterVariable" name="test_str[backend=numpy]" time="0.108" /><testcase classname="tests.test_variable.TestDecenterVariable" name="test_str[backend=torch]" time="0.104" /><testcase classname="tests.test_variable.TestDecenterVariable" name="test_get_value_no_scaling[backend=numpy]" time="0.190" /><testcase classname="tests.test_variable.TestDecenterVariable" name="test_get_value_no_scaling[backend=torch]" time="0.244" /><testcase classname="tests.test_variable.TestNormalizationRadiusVariable" name="test_get_value[backend=numpy]" time="0.010" /><testcase classname="tests.test_variable.TestNormalizationRadiusVariable" name="test_get_value[backend=torch]" time="0.016" /><testcase classname="tests.test_variable.TestNormalizationRadiusVariable" name="test_update_value[backend=numpy]" time="0.012" /><testcase classname="tests.test_variable.TestNormalizationRadiusVariable" name="test_update_value[backend=torch]" time="0.016" /><testcase classname="tests.test_variable.TestNormalizationRadiusVariable" name="test_string_representation[backend=numpy]" time="0.013" /><testcase classname="tests.test_variable.TestNormalizationRadiusVariable" name="test_string_representation[backend=torch]" time="0.017" /><testcase classname="tests.test_variable.TestForbesQbfsCoeffVariable" name="test_get_value[backend=numpy]" time="0.016" /><testcase classname="tests.test_variable.TestForbesQbfsCoeffVariable" name="test_get_value[backend=torch]" time="0.016" /><testcase classname="tests.test_variable.TestForbesQbfsCoeffVariable" name="test_update_value[backend=numpy]" time="0.014" /><testcase classname="tests.test_variable.TestForbesQbfsCoeffVariable" name="test_update_value[backend=torch]" time="0.015" /><testcase classname="tests.test_variable.TestForbesQbfsCoeffVariable" name="test_update_value_out_of_bounds[backend=numpy]" time="0.015" /><testcase classname="tests.test_variable.TestForbesQbfsCoeffVariable" name="test_update_value_out_of_bounds[backend=torch]" time="0.014" /><testcase classname="tests.test_variable.TestForbesQbfsCoeffVariable" name="test_string_representation[backend=numpy]" time="0.015" /><testcase classname="tests.test_variable.TestForbesQbfsCoeffVariable" name="test_string_representation[backend=torch]" time="0.016" /><testcase classname="tests.test_variable.TestForbesQbfsCoeffVariable" name="test_get_value_nonexistent[backend=numpy]" time="0.018" /><testcase classname="tests.test_variable.TestForbesQbfsCoeffVariable" name="test_get_value_nonexistent[backend=torch]" time="0.019" /><testcase classname="tests.test_variable.TestForbesQbfsCoeffVariable" name="test_scaling[backend=numpy]" time="0.014" /><testcase classname="tests.test_variable.TestForbesQbfsCoeffVariable" name="test_scaling[backend=torch]" time="0.017" /><testcase classname="tests.test_variable.TestForbesQ2dCoeffVariable" name="test_get_value[backend=numpy]" time="0.016" /><testcase classname="tests.test_variable.TestForbesQ2dCoeffVariable" name="test_get_value[backend=torch]" time="0.016" /><testcase classname="tests.test_variable.TestForbesQ2dCoeffVariable" name="test_get_value_nonexistent[backend=numpy]" time="0.018" /><testcase classname="tests.test_variable.TestForbesQ2dCoeffVariable" name="test_get_value_nonexistent[backend=torch]" time="0.018" /><testcase classname="tests.test_variable.TestForbesQ2dCoeffVariable" name="test_update_value_existing[backend=numpy]" time="0.018" /><testcase classname="tests.test_variable.TestForbesQ2dCoeffVariable" name="test_update_value_existing[backend=torch]" time="0.020" /><testcase classname="tests.test_variable.TestForbesQ2dCoeffVariable" name="test_update_value__new[backend=numpy]" time="0.021" /><testcase classname="tests.test_variable.TestForbesQ2dCoeffVariable" name="test_update_value__new[backend=torch]" time="0.017" /><testcase classname="tests.test_variable.TestForbesQ2dCoeffVariable" name="test_string_representation[backend=numpy]" time="0.017" /><testcase classname="tests.test_variable.TestForbesQ2dCoeffVariable" name="test_string_representation[backend=torch]" time="0.020" /><testcase classname="tests.test_variable.TestForbesQ2dCoeffVariable" name="test_invalid_coeff_tuple[backend=numpy]" time="0.016" /><testcase classname="tests.test_variable.TestForbesQ2dCoeffVariable" name="test_invalid_coeff_tuple[backend=torch]" time="0.015" /><testcase classname="tests.test_variable.TestForbesQ2dCoeffVariable" name="test_get_and_update_sine_term[backend=numpy]" time="0.011" /><testcase classname="tests.test_variable.TestForbesQ2dCoeffVariable" name="test_get_and_update_sine_term[backend=torch]" time="0.018" /><testcase classname="tests.test_variable.TestForbesQ2dCoeffVariable" name="test_string_representation_sine[backend=numpy]" time="0.010" /><testcase classname="tests.test_variable.TestForbesQ2dCoeffVariable" name="test_string_representation_sine[backend=torch]" time="0.018" /><testcase classname="tests.test_variable.TestVariableManager" name="test_add[backend=numpy]" time="0.107" /><testcase classname="tests.test_variable.TestVariableManager" name="test_add[backend=torch]" time="0.132" /><testcase classname="tests.test_variable.TestVariableManager" name="test_clear[backend=numpy]" time="0.102" /><testcase classname="tests.test_variable.TestVariableManager" name="test_clear[backend=torch]" time="0.135" /><testcase classname="tests.test_variable.TestVariableManager" name="test_iter[backend=numpy]" time="0.145" /><testcase classname="tests.test_variable.TestVariableManager" name="test_iter[backend=torch]" time="0.146" /><testcase classname="tests.test_variable.TestVariableManager" name="test_getitem[backend=numpy]" time="0.134" /><testcase classname="tests.test_variable.TestVariableManager" name="test_getitem[backend=torch]" time="0.133" /><testcase classname="tests.test_variable.TestVariableManager" name="test_setitem[backend=numpy]" time="0.106" /><testcase classname="tests.test_variable.TestVariableManager" name="test_setitem[backend=torch]" time="0.115" /><testcase classname="tests.test_variable.TestVariableManager" name="test_len[backend=numpy]" time="0.119" /><testcase classname="tests.test_variable.TestVariableManager" name="test_len[backend=torch]" time="0.107" /><testcase classname="tests.test_variable.TestVariableManager" name="test_getitem_index_error[backend=numpy]" time="0.001" /><testcase classname="tests.test_variable.TestVariableManager" name="test_getitem_index_error[backend=torch]" time="0.001" /><testcase classname="tests.test_variable.TestVariableManager" name="test_setitem_index_error[backend=numpy]" time="0.093" /><testcase classname="tests.test_variable.TestVariableManager" name="test_setitem_index_error[backend=torch]" time="0.114" /><testcase classname="tests.test_variable.TestVariableManager" name="test_setitem_invalid_type[backend=numpy]" time="0.084" /><testcase classname="tests.test_variable.TestVariableManager" name="test_setitem_invalid_type[backend=torch]" time="0.126" /><testcase classname="tests.test_variable.TestVariableManager" name="test_iterable[backend=numpy]" time="0.133" /><testcase classname="tests.test_variable.TestVariableManager" name="test_iterable[backend=torch]" time="0.122" /><testcase classname="tests.test_variable.TestVariableManager" name="test_delitem[backend=numpy]" time="0.105" /><testcase classname="tests.test_variable.TestVariableManager" name="test_delitem[backend=torch]" time="0.110" /><testcase classname="tests.test_visualization.TestBaseViewer" name="test_instantiating_subclass_without_view_raises_error[backend=numpy]" time="0.001" /><testcase classname="tests.test_visualization.TestBaseViewer" name="test_instantiating_subclass_without_view_raises_error[backend=torch]" time="0.001" /><testcase classname="tests.test_visualization.TestOpticViewer" name="test_init" time="0.050" /><testcase classname="tests.test_visualization.TestOpticViewer" name="test_view[backend=numpy]" time="0.195" /><testcase classname="tests.test_visualization.TestOpticViewer" name="test_view[backend=torch]" time="0.230" /><testcase classname="tests.test_visualization.TestOpticViewer" name="test_view_from_optic[backend=numpy]" time="0.162" /><testcase classname="tests.test_visualization.TestOpticViewer" name="test_view_from_optic[backend=torch]" time="0.284" /><testcase classname="tests.test_visualization.TestOpticViewer" name="test_view_bonded_lens[backend=numpy]" time="0.130" /><testcase classname="tests.test_visualization.TestOpticViewer" name="test_view_bonded_lens[backend=torch]" time="0.238" /><testcase classname="tests.test_visualization.TestOpticViewer" name="test_view_reflective_lens[backend=numpy]" time="0.021" /><testcase classname="tests.test_visualization.TestOpticViewer" name="test_view_reflective_lens[backend=torch]" time="0.063" /><testcase classname="tests.test_visualization.TestOpticViewer" name="test_view_single_field[backend=numpy]" time="0.127" /><testcase classname="tests.test_visualization.TestOpticViewer" name="test_view_single_field[backend=torch]" time="0.135" /><testcase classname="tests.test_visualization.TestOpticViewer" name="test_reference_chief_and_bundle[backend=numpy]" time="0.157" /><testcase classname="tests.test_visualization.TestOpticViewer" name="test_reference_chief_and_bundle[backend=torch]" time="0.352" /><testcase classname="tests.test_visualization.TestOpticViewer" name="test_reference_marginal_and_bundle[backend=numpy]" time="0.203" /><testcase classname="tests.test_visualization.TestOpticViewer" name="test_reference_marginal_and_bundle[backend=torch]" time="0.331" /><testcase classname="tests.test_visualization.TestOpticViewer" name="test_invalid_reference[backend=numpy]" time="0.081" /><testcase classname="tests.test_visualization.TestOpticViewer" name="test_invalid_reference[backend=torch]" time="0.119" /><testcase classname="tests.test_visualization.TestOpticViewer" name="test_reference_chief_only[backend=numpy]" time="0.139" /><testcase classname="tests.test_visualization.TestOpticViewer" name="test_reference_chief_only[backend=torch]" time="0.279" /><testcase classname="tests.test_visualization.TestOpticViewer" name="test_reference_marginal_only[backend=numpy]" time="0.176" /><testcase classname="tests.test_visualization.TestOpticViewer" name="test_reference_marginal_only[backend=torch]" time="0.327" /><testcase classname="tests.test_visualization.TestOpticViewer" name="test_plot_content_is_generated[backend=numpy]" time="0.103" /><testcase classname="tests.test_visualization.TestOpticViewer" name="test_plot_content_is_generated[backend=torch]" time="0.479" /><testcase classname="tests.test_visualization.TestOpticViewer" name="test_view_with_custom_plot_parameters[backend=numpy]" time="0.142" /><testcase classname="tests.test_visualization.TestOpticViewer" name="test_view_with_custom_plot_parameters[backend=torch]" time="0.316" /><testcase classname="tests.test_visualization.TestOpticViewer" name="test_view_all_wavelengths[backend=numpy]" time="0.301" /><testcase classname="tests.test_visualization.TestOpticViewer" name="test_view_all_wavelengths[backend=torch]" time="0.540" /><testcase classname="tests.test_visualization.TestOpticViewer3D" name="test_init[backend=numpy]" time="0.338" /><testcase classname="tests.test_visualization.TestOpticViewer3D" name="test_init[backend=torch]" time="0.105" /><testcase classname="tests.test_visualization.TestOpticViewer3D" name="test_view[backend=numpy]" time="0.410" /><testcase classname="tests.test_visualization.TestOpticViewer3D" name="test_view[backend=torch]" time="0.437" /><testcase classname="tests.test_visualization.TestOpticViewer3D" name="test_view_asymmetric[backend=numpy]" time="1.125" /><testcase classname="tests.test_visualization.TestOpticViewer3D" name="test_view_asymmetric[backend=torch]" time="1.185" /><testcase classname="tests.test_visualization.TestOpticViewer3D" name="test_view_bonded_lens[backend=numpy]" time="0.235" /><testcase classname="tests.test_visualization.TestOpticViewer3D" name="test_view_bonded_lens[backend=torch]" time="0.323" /><testcase classname="tests.test_visualization.TestOpticViewer3D" name="test_view_reflective_lens[backend=numpy]" time="0.128" /><testcase classname="tests.test_visualization.TestOpticViewer3D" name="test_view_reflective_lens[backend=torch]" time="0.134" /><testcase classname="tests.test_visualization.TestOpticViewer3D" name="test_view_single_field[backend=numpy]" time="0.200" /><testcase classname="tests.test_visualization.TestOpticViewer3D" name="test_view_single_field[backend=torch]" time="0.247" /><testcase classname="tests.test_visualization.TestOpticViewer3D" name="test_non_symmetric[backend=numpy]" time="0.111" /><testcase classname="tests.test_visualization.TestOpticViewer3D" name="test_non_symmetric[backend=torch]" time="0.119" /><testcase classname="tests.test_visualization.TestOpticViewer3D" name="test_view_toroidal[backend=numpy]" time="0.811" /><testcase classname="tests.test_visualization.TestOpticViewer3D" name="test_view_toroidal[backend=torch]" time="0.812" /><testcase classname="tests.test_visualization.TestOpticViewer3D" name="test_view_non_symmetric[backend=numpy]" time="1.049" /><testcase classname="tests.test_visualization.TestOpticViewer3D" name="test_view_non_symmetric[backend=torch]" time="1.390" /><testcase classname="tests.test_visualization.TestOpticViewer3D" name="test_reference_chief_and_bundle[backend=numpy]" time="0.390" /><testcase classname="tests.test_visualization.TestOpticViewer3D" name="test_reference_chief_and_bundle[backend=torch]" time="0.475" /><testcase classname="tests.test_visualization.TestOpticViewer3D" name="test_reference_marginal_and_bundle[backend=numpy]" time="0.316" /><testcase classname="tests.test_visualization.TestOpticViewer3D" name="test_reference_marginal_and_bundle[backend=torch]" time="0.469" /><testcase classname="tests.test_visualization.TestOpticViewer3D" name="test_invalid_reference[backend=numpy]" time="0.178" /><testcase classname="tests.test_visualization.TestOpticViewer3D" name="test_invalid_reference[backend=torch]" time="0.197" /><testcase classname="tests.test_visualization.TestOpticViewer3D" name="test_reference_chief_only[backend=numpy]" time="0.189" /><testcase classname="tests.test_visualization.TestOpticViewer3D" name="test_reference_chief_only[backend=torch]" time="0.361" /><testcase classname="tests.test_visualization.TestOpticViewer3D" name="test_reference_marginal_only[backend=numpy]" time="0.202" /><testcase classname="tests.test_visualization.TestOpticViewer3D" name="test_reference_marginal_only[backend=torch]" time="0.433" /><testcase classname="tests.test_visualization.TestOpticViewer3D" name="test_view_sets_background_color_for_theme[backend=numpy-True-bg10-bg20]" time="0.144" /><testcase classname="tests.test_visualization.TestOpticViewer3D" name="test_view_sets_background_color_for_theme[backend=numpy-False-bg11-bg21]" time="0.198" /><testcase classname="tests.test_visualization.TestOpticViewer3D" name="test_view_sets_background_color_for_theme[backend=torch-True-bg10-bg20]" time="0.234" /><testcase classname="tests.test_visualization.TestOpticViewer3D" name="test_view_sets_background_color_for_theme[backend=torch-False-bg11-bg21]" time="0.222" /><testcase classname="tests.test_visualization.TestLensInfoViewer" name="test_view_standard[backend=numpy]" time="0.072" /><testcase classname="tests.test_visualization.TestLensInfoViewer" name="test_view_standard[backend=torch]" time="0.084" /><testcase classname="tests.test_visualization.TestLensInfoViewer" name="test_view_from_optic[backend=numpy]" time="0.071" /><testcase classname="tests.test_visualization.TestLensInfoViewer" name="test_view_from_optic[backend=torch]" time="0.094" /><testcase classname="tests.test_visualization.TestLensInfoViewer" name="test_view_plano_convex[backend=numpy]" time="0.020" /><testcase classname="tests.test_visualization.TestLensInfoViewer" name="test_view_plano_convex[backend=torch]" time="0.030" /><testcase classname="tests.test_visualization.TestLensInfoViewer" name="test_invalid_geometry[backend=numpy]" time="0.075" /><testcase classname="tests.test_visualization.TestLensInfoViewer" name="test_invalid_geometry[backend=torch]" time="0.085" /><testcase classname="tests.test_visualization.TestLensInfoViewer" name="test_view_reflective_lens[backend=numpy]" time="0.010" /><testcase classname="tests.test_visualization.TestLensInfoViewer" name="test_view_reflective_lens[backend=torch]" time="0.029" /><testcase classname="tests.test_visualization.TestLensInfoViewer" name="test_view_asphere[backend=numpy]" time="0.099" /><testcase classname="tests.test_visualization.TestLensInfoViewer" name="test_view_asphere[backend=torch]" time="0.152" /><testcase classname="tests.test_visualization.TestLensInfoViewer" name="test_view_material_file[backend=numpy]" time="0.090" /><testcase classname="tests.test_visualization.TestLensInfoViewer" name="test_view_material_file[backend=torch]" time="0.117" /><testcase classname="tests.test_visualization.TestLensInfoViewer" name="test_view_ideal_material[backend=numpy]" time="0.069" /><testcase classname="tests.test_visualization.TestLensInfoViewer" name="test_view_ideal_material[backend=torch]" time="0.109" /><testcase classname="tests.test_visualization.TestLensInfoViewer" name="test_view_invalid_material[backend=numpy]" time="0.065" /><testcase classname="tests.test_visualization.TestLensInfoViewer" name="test_view_invalid_material[backend=torch]" time="0.111" /><testcase classname="tests.test_visualization.TestLensInfoViewer" name="test_view_abbe_material[backend=numpy]" time="0.107" /><testcase classname="tests.test_visualization.TestLensInfoViewer" name="test_view_abbe_material[backend=torch]" time="0.160" /><testcase classname="tests.test_visualization.TestSurfaceSagViewer" name="test_view_with_cylindrical_lens[backend=numpy]" time="0.168" /><testcase classname="tests.test_visualization.TestSurfaceSagViewer" name="test_view_with_cylindrical_lens[backend=torch]" time="0.156" /><testcase classname="tests.test_visualization.TestSurfaceSagViewer" name="test_view_with_custom_cross_section[backend=numpy]" time="0.142" /><testcase classname="tests.test_visualization.TestSurfaceSagViewer" name="test_view_with_custom_cross_section[backend=torch]" time="0.165" /><testcase classname="tests.test_visualization" name="test_mangin_mirror_visualization[backend=numpy-2d-Lens2D]" time="0.023" /><testcase classname="tests.test_visualization" name="test_mangin_mirror_visualization[backend=numpy-3d-Lens3D]" time="0.033" /><testcase classname="tests.test_visualization" name="test_mangin_mirror_visualization[backend=torch-2d-Lens2D]" time="0.032" /><testcase classname="tests.test_visualization" name="test_mangin_mirror_visualization[backend=torch-3d-Lens3D]" time="0.031" /><testcase classname="tests.test_wavefront.TestWavefront" name="test_wavefront_initialization[backend=numpy-CookeTriplet]" time="0.169" /><testcase classname="tests.test_wavefront.TestWavefront" name="test_wavefront_initialization[backend=numpy-DoubleGauss]" time="0.387" /><testcase classname="tests.test_wavefront.TestWavefront" name="test_wavefront_initialization[backend=numpy-EyepieceErfle]" time="0.177" /><testcase classname="tests.test_wavefront.TestWavefront" name="test_wavefront_initialization[backend=torch-CookeTriplet]" time="0.459" /><testcase classname="tests.test_wavefront.TestWavefront" name="test_wavefront_initialization[backend=torch-DoubleGauss]" time="0.949" /><testcase classname="tests.test_wavefront.TestWavefront" name="test_wavefront_initialization[backend=torch-EyepieceErfle]" time="0.398" /><testcase classname="tests.test_wavefront.TestWavefront" name="test_wavefront_init_custom[backend=numpy]" time="0.128" /><testcase classname="tests.test_wavefront.TestWavefront" name="test_wavefront_init_custom[backend=torch]" time="0.438" /><testcase classname="tests.test_wavefront.TestWavefront" name="test_generate_data[backend=numpy]" time="0.207" /><testcase classname="tests.test_wavefront.TestWavefront" name="test_generate_data[backend=torch]" time="0.424" /><testcase classname="tests.test_wavefront.TestOPDFan" name="test_opd_fan_initialization[backend=numpy]" time="0.227" /><testcase classname="tests.test_wavefront.TestOPDFan" name="test_opd_fan_initialization[backend=torch]" time="0.983" /><testcase classname="tests.test_wavefront.TestOPDFan" name="test_opd_fan_view[backend=numpy]" time="0.990" /><testcase classname="tests.test_wavefront.TestOPDFan" name="test_opd_fan_view[backend=torch]" time="1.124" /><testcase classname="tests.test_wavefront.TestOPDFan" name="test_opd_fan_view_large[backend=numpy]" time="0.595" /><testcase classname="tests.test_wavefront.TestOPDFan" name="test_opd_fan_view_large[backend=torch]" time="1.333" /><testcase classname="tests.test_wavefront.TestOPD" name="test_opd_initialization[backend=numpy]" time="0.065" /><testcase classname="tests.test_wavefront.TestOPD" name="test_opd_initialization[backend=torch]" time="0.107" /><testcase classname="tests.test_wavefront.TestOPD" name="test_opd_view[backend=numpy]" time="0.240" /><testcase classname="tests.test_wavefront.TestOPD" name="test_opd_view[backend=torch]" time="0.305" /><testcase classname="tests.test_wavefront.TestOPD" name="test_opd_view_large[backend=numpy]" time="0.180" /><testcase classname="tests.test_wavefront.TestOPD" name="test_opd_view_large[backend=torch]" time="0.243" /><testcase classname="tests.test_wavefront.TestOPD" name="test_opd_view_3d[backend=numpy]" time="0.848" /><testcase classname="tests.test_wavefront.TestOPD" name="test_opd_view_3d[backend=torch]" time="1.555" /><testcase classname="tests.test_wavefront.TestOPD" name="test_old_invalid_projection[backend=numpy]" time="0.178" /><testcase classname="tests.test_wavefront.TestOPD" name="test_old_invalid_projection[backend=torch]" time="0.230" /><testcase classname="tests.test_wavefront.TestOPD" name="test_opd_rms[backend=numpy]" time="0.050" /><testcase classname="tests.test_wavefront.TestOPD" name="test_opd_rms[backend=torch]" time="0.119" /><testcase classname="tests.test_wavefront.TestZernikeOPD" name="test_zernike_opd_initialization[backend=numpy]" time="0.145" /><testcase classname="tests.test_wavefront.TestZernikeOPD" name="test_zernike_opd_initialization[backend=torch]" time="0.309" /><testcase classname="tests.test_wavefront.TestZernikeOPD" name="test_zernike_opd_view[backend=numpy]" time="0.156" /><testcase classname="tests.test_wavefront.TestZernikeOPD" name="test_zernike_opd_view[backend=torch]" time="0.278" /><testcase classname="tests.test_wavefront.TestZernikeOPD" name="test_zernike_opd_view_large[backend=numpy]" time="0.284" /><testcase classname="tests.test_wavefront.TestZernikeOPD" name="test_zernike_opd_view_large[backend=torch]" time="0.619" /><testcase classname="tests.test_wavefront.TestZernikeOPD" name="test_zernike_opd_view_3d[backend=numpy]" time="0.405" /><testcase classname="tests.test_wavefront.TestZernikeOPD" name="test_zernike_opd_view_3d[backend=torch]" time="1.035" /><testcase classname="tests.test_wavefront.TestZernikeOPD" name="test_zernike_opd_rms[backend=numpy]" time="0.088" /><testcase classname="tests.test_wavefront.TestZernikeOPD" name="test_zernike_opd_rms[backend=torch]" time="0.188" /><testcase classname="tests.test_wavefront.TestZernikeOPD" name="test_zernike_opd_fit[backend=numpy]" time="0.067" /><testcase classname="tests.test_wavefront.TestZernikeOPD" name="test_zernike_opd_fit[backend=torch]" time="0.119" /><testcase classname="tests.test_wavefront.TestZernikeOPD" name="test_zernike_xy_symmetry[backend=numpy]" time="0.073" /><testcase classname="tests.test_wavefront.TestZernikeOPD" name="test_zernike_xy_symmetry[backend=torch]" time="0.323" /><testcase classname="tests.test_wavefront.TestZernikeOPD" name="test_zernike_xy_axis_swap[backend=numpy]" time="0.260" /><testcase classname="tests.test_wavefront.TestZernikeOPD" name="test_zernike_xy_axis_swap[backend=torch]" time="0.602" /><testcase classname="tests.test_wavefront_strategy.TestReferenceStrategy" name="test_init" time="0.157" /><testcase classname="tests.test_wavefront_strategy.TestReferenceStrategy" name="test_opd_image_to_xp[backend=numpy]" time="0.183" /><testcase classname="tests.test_wavefront_strategy.TestReferenceStrategy" name="test_opd_image_to_xp[backend=torch]" time="0.235" /><testcase classname="tests.test_wavefront_strategy.TestReferenceStrategy" name="test_opd_image_to_xp_negative_t[backend=numpy]" time="0.279" /><testcase classname="tests.test_wavefront_strategy.TestReferenceStrategy" name="test_opd_image_to_xp_negative_t[backend=torch]" time="0.195" /><testcase classname="tests.test_wavefront_strategy.TestReferenceStrategy" name="test_correct_tilt_angle_field[backend=numpy]" time="0.189" /><testcase classname="tests.test_wavefront_strategy.TestReferenceStrategy" name="test_correct_tilt_angle_field[backend=torch]" time="0.279" /><testcase classname="tests.test_wavefront_strategy.TestReferenceStrategy" name="test_correct_tilt_object_height_field[backend=numpy]" time="0.169" /><testcase classname="tests.test_wavefront_strategy.TestReferenceStrategy" name="test_correct_tilt_object_height_field[backend=torch]" time="0.163" /><testcase classname="tests.test_wavefront_strategy.TestReferenceStrategy" name="test_correct_tilt_with_custom_coords[backend=numpy]" time="0.166" /><testcase classname="tests.test_wavefront_strategy.TestReferenceStrategy" name="test_correct_tilt_with_custom_coords[backend=torch]" time="0.179" /><testcase classname="tests.test_wavefront_strategy.TestChiefRayStrategy" name="test_calculate_sphere_from_chief_ray[backend=numpy]" time="0.165" /><testcase classname="tests.test_wavefront_strategy.TestChiefRayStrategy" name="test_calculate_sphere_from_chief_ray[backend=torch]" time="0.177" /><testcase classname="tests.test_wavefront_strategy.TestChiefRayStrategy" name="test_calculate_sphere_from_chief_ray_error[backend=numpy]" time="0.122" /><testcase classname="tests.test_wavefront_strategy.TestChiefRayStrategy" name="test_calculate_sphere_from_chief_ray_error[backend=torch]" time="0.105" /><testcase classname="tests.test_wavefront_strategy.TestChiefRayStrategy" name="test_compute_wavefront_data[backend=numpy]" time="0.121" /><testcase classname="tests.test_wavefront_strategy.TestChiefRayStrategy" name="test_compute_wavefront_data[backend=torch]" time="0.328" /><testcase classname="tests.test_wavefront_strategy.TestCentroidReferenceSphereStrategy" name="test_points_from_rays[backend=numpy]" time="0.110" /><testcase classname="tests.test_wavefront_strategy.TestCentroidReferenceSphereStrategy" name="test_points_from_rays[backend=torch]" time="0.115" /><testcase classname="tests.test_wavefront_strategy.TestCentroidReferenceSphereStrategy" name="test_points_from_rays_with_invalid[backend=numpy]" time="0.117" /><testcase classname="tests.test_wavefront_strategy.TestCentroidReferenceSphereStrategy" name="test_points_from_rays_with_invalid[backend=torch]" time="0.109" /><testcase classname="tests.test_wavefront_strategy.TestCentroidReferenceSphereStrategy" name="test_points_from_rays_no_valid[backend=numpy]" time="0.096" /><testcase classname="tests.test_wavefront_strategy.TestCentroidReferenceSphereStrategy" name="test_points_from_rays_no_valid[backend=torch]" time="0.090" /><testcase classname="tests.test_wavefront_strategy.TestCentroidReferenceSphereStrategy" name="test_calculate_reference_sphere[backend=numpy]" time="0.089" /><testcase classname="tests.test_wavefront_strategy.TestCentroidReferenceSphereStrategy" name="test_calculate_reference_sphere[backend=torch]" time="0.159" /><testcase classname="tests.test_wavefront_strategy.TestCentroidReferenceSphereStrategy" name="test_calculate_reference_sphere_no_trim[backend=numpy]" time="0.091" /><testcase classname="tests.test_wavefront_strategy.TestCentroidReferenceSphereStrategy" name="test_calculate_reference_sphere_no_trim[backend=torch]" time="0.154" /><testcase classname="tests.test_wavefront_strategy.TestCentroidReferenceSphereStrategy" name="test_compute_wavefront_data[backend=numpy]" time="0.142" /><testcase classname="tests.test_wavefront_strategy.TestCentroidReferenceSphereStrategy" name="test_compute_wavefront_data[backend=torch]" time="0.216" /><testcase classname="tests.test_wavefront_strategy" name="test_create_strategy[backend=numpy]" time="0.095" /><testcase classname="tests.test_wavefront_strategy" name="test_create_strategy[backend=torch]" time="0.104" /><testcase classname="tests.test_wavefront_strategy.TestBestFitSphereStrategy" name="test_strategy_compare_at_best_focus[backend=numpy]" time="0.182" /><testcase classname="tests.test_wavefront_strategy.TestBestFitSphereStrategy" name="test_strategy_compare_at_best_focus[backend=torch]" time="0.260" /><testcase classname="tests.test_wavelength.TestWavelengths" name="test_wavelength_initialization[backend=numpy]" time="0.001" /><testcase classname="tests.test_wavelength.TestWavelengths" name="test_wavelength_initialization[backend=torch]" time="0.001" /><testcase classname="tests.test_wavelength.TestWavelengths" name="test_wavelength_conversion[backend=numpy]" time="0.001" /><testcase classname="tests.test_wavelength.TestWavelengths" name="test_wavelength_conversion[backend=torch]" time="0.001" /><testcase classname="tests.test_wavelength.TestWavelengths" name="test_invalid_unit[backend=numpy]" time="0.001" /><testcase classname="tests.test_wavelength.TestWavelengths" name="test_invalid_unit[backend=torch]" time="0.001" /><testcase classname="tests.test_wavelength.TestWavelengths" name="test_unit_setter[backend=numpy]" time="0.001" /><testcase classname="tests.test_wavelength.TestWavelengths" name="test_unit_setter[backend=torch]" time="0.001" /><testcase classname="tests.test_wavelength.TestWavelengths" name="test_to_dict[backend=numpy]" time="0.001" /><testcase classname="tests.test_wavelength.TestWavelengths" name="test_to_dict[backend=torch]" time="0.001" /><testcase classname="tests.test_wavelength.TestWavelengths" name="test_from_dict[backend=numpy]" time="0.001" /><testcase classname="tests.test_wavelength.TestWavelengths" name="test_from_dict[backend=torch]" time="0.001" /><testcase classname="tests.test_wavelength.TestWavelengths" name="test_from_dict_default_weight[backend=numpy]" time="0.001" /><testcase classname="tests.test_wavelength.TestWavelengths" name="test_from_dict_default_weight[backend=torch]" time="0.001" /><testcase classname="tests.test_wavelength.TestWavelengths" name="test_is_primary[backend=numpy]" time="0.001" /><testcase classname="tests.test_wavelength.TestWavelengths" name="test_is_primary[backend=torch]" time="0.001" /><testcase classname="tests.test_wavelength.TestWavelengths" name="test_is_not_primary[backend=numpy]" time="0.001" /><testcase classname="tests.test_wavelength.TestWavelengths" name="test_is_not_primary[backend=torch]" time="0.001" /><testcase classname="tests.test_wavelength.TestWavelengths" name="test_is_primary_default[backend=numpy]" time="0.001" /><testcase classname="tests.test_wavelength.TestWavelengths" name="test_is_primary_default[backend=torch]" time="0.001" /><testcase classname="tests.test_wavelength.TestWavelengths" name="test_wavelength_initialization_with_weight[backend=numpy]" time="0.001" /><testcase classname="tests.test_wavelength.TestWavelengths" name="test_wavelength_initialization_with_weight[backend=torch]" time="0.001" /><testcase classname="tests.test_wavelength.TestWavelengths" name="test_wavelength_default_weight[backend=numpy]" time="0.001" /><testcase classname="tests.test_wavelength.TestWavelengths" name="test_wavelength_default_weight[backend=torch]" time="0.001" /><testcase classname="tests.test_wavelength.TestWavelengthGroups" name="test_add_wavelength[backend=numpy]" time="0.001" /><testcase classname="tests.test_wavelength.TestWavelengthGroups" name="test_add_wavelength[backend=torch]" time="0.001" /><testcase classname="tests.test_wavelength.TestWavelengthGroups" name="test_primary_wavelength[backend=numpy]" time="0.000" /><testcase classname="tests.test_wavelength.TestWavelengthGroups" name="test_primary_wavelength[backend=torch]" time="0.001" /><testcase classname="tests.test_wavelength.TestWavelengthGroups" name="test_multiple_wavelengths[backend=numpy]" time="0.001" /><testcase classname="tests.test_wavelength.TestWavelengthGroups" name="test_multiple_wavelengths[backend=torch]" time="0.001" /><testcase classname="tests.test_wavelength.TestWavelengthGroups" name="test_get_wavelengths[backend=numpy]" time="0.001" /><testcase classname="tests.test_wavelength.TestWavelengthGroups" name="test_get_wavelengths[backend=torch]" time="0.001" /><testcase classname="tests.test_wavelength.TestWavelengthGroups" name="test_to_dict[backend=numpy]" time="0.001" /><testcase classname="tests.test_wavelength.TestWavelengthGroups" name="test_to_dict[backend=torch]" time="0.001" /><testcase classname="tests.test_wavelength.TestWavelengthGroups" name="test_from_dict[backend=numpy]" time="0.001" /><testcase classname="tests.test_wavelength.TestWavelengthGroups" name="test_from_dict[backend=torch]" time="0.001" /><testcase classname="tests.test_wavelength.TestWavelengthGroups" name="test_from_dict_invalid_key[backend=numpy]" time="0.001" /><testcase classname="tests.test_wavelength.TestWavelengthGroups" name="test_from_dict_invalid_key[backend=torch]" time="0.001" /><testcase classname="tests.test_wavelength.TestWavelengthGroups" name="test_wavelengthgroup_weights_property[backend=numpy]" time="0.001" /><testcase classname="tests.test_wavelength.TestWavelengthGroups" name="test_wavelengthgroup_weights_property[backend=torch]" time="0.002" /><testcase classname="tests.test_wavelength.TestWavelengthGroups" name="test_add_wavelengths[backend=numpy]" time="0.003" /><testcase classname="tests.test_wavelength.TestWavelengthGroups" name="test_add_wavelengths[backend=torch]" time="0.013" /><testcase classname="tests.test_zernike.TestZernikeStandard" name="test_get_term[backend=numpy]" time="0.001" /><testcase classname="tests.test_zernike.TestZernikeStandard" name="test_get_term[backend=torch]" time="0.001" /><testcase classname="tests.test_zernike.TestZernikeStandard" name="test_terms[backend=numpy]" time="0.002" /><testcase classname="tests.test_zernike.TestZernikeStandard" name="test_terms[backend=torch]" time="0.011" /><testcase classname="tests.test_zernike.TestZernikeStandard" name="test_poly[backend=numpy]" time="0.001" /><testcase classname="tests.test_zernike.TestZernikeStandard" name="test_poly[backend=torch]" time="0.009" /><testcase classname="tests.test_zernike.TestZernikeStandard" name="test_radial_term[backend=numpy]" time="0.001" /><testcase classname="tests.test_zernike.TestZernikeStandard" name="test_radial_term[backend=torch]" time="0.002" /><testcase classname="tests.test_zernike.TestZernikeStandard" name="test_azimuthal_term[backend=numpy]" time="0.001" /><testcase classname="tests.test_zernike.TestZernikeStandard" name="test_azimuthal_term[backend=torch]" time="0.002" /><testcase classname="tests.test_zernike.TestZernikeStandard" name="test_norm_constant[backend=numpy]" time="0.001" /><testcase classname="tests.test_zernike.TestZernikeStandard" name="test_norm_constant[backend=torch]" time="0.002" /><testcase classname="tests.test_zernike.TestZernikeStandard" name="test_generate_indices[backend=numpy]" time="0.002" /><testcase classname="tests.test_zernike.TestZernikeStandard" name="test_generate_indices[backend=torch]" time="0.001" /><testcase classname="tests.test_zernike.TestZernikeStandard" name="test_index_to_number[backend=numpy]" time="0.001" /><testcase classname="tests.test_zernike.TestZernikeStandard" name="test_index_to_number[backend=torch]" time="0.002" /><testcase classname="tests.test_zernike.TestZernikeFringe" name="test_get_term[backend=numpy]" time="0.001" /><testcase classname="tests.test_zernike.TestZernikeFringe" name="test_get_term[backend=torch]" time="0.002" /><testcase classname="tests.test_zernike.TestZernikeFringe" name="test_terms[backend=numpy]" time="0.002" /><testcase classname="tests.test_zernike.TestZernikeFringe" name="test_terms[backend=torch]" time="0.006" /><testcase classname="tests.test_zernike.TestZernikeFringe" name="test_poly[backend=numpy]" time="0.002" /><testcase classname="tests.test_zernike.TestZernikeFringe" name="test_poly[backend=torch]" time="0.006" /><testcase classname="tests.test_zernike.TestZernikeFringe" name="test_radial_term[backend=numpy]" time="0.001" /><testcase classname="tests.test_zernike.TestZernikeFringe" name="test_radial_term[backend=torch]" time="0.002" /><testcase classname="tests.test_zernike.TestZernikeFringe" name="test_azimuthal_term[backend=numpy]" time="0.001" /><testcase classname="tests.test_zernike.TestZernikeFringe" name="test_azimuthal_term[backend=torch]" time="0.001" /><testcase classname="tests.test_zernike.TestZernikeFringe" name="test_norm_constant[backend=numpy]" time="0.001" /><testcase classname="tests.test_zernike.TestZernikeFringe" name="test_norm_constant[backend=torch]" time="0.002" /><testcase classname="tests.test_zernike.TestZernikeFringe" name="test_generate_indices[backend=numpy]" time="0.003" /><testcase classname="tests.test_zernike.TestZernikeFringe" name="test_generate_indices[backend=torch]" time="0.001" /><testcase classname="tests.test_zernike.TestZernikeFringe" name="test_index_to_number[backend=numpy]" time="0.004" /><testcase classname="tests.test_zernike.TestZernikeFringe" name="test_index_to_number[backend=torch]" time="0.004" /><testcase classname="tests.test_zernike.TestZernikeNoll" name="test_get_term[backend=numpy]" time="0.002" /><testcase classname="tests.test_zernike.TestZernikeNoll" name="test_get_term[backend=torch]" time="0.003" /><testcase classname="tests.test_zernike.TestZernikeNoll" name="test_terms[backend=numpy]" time="0.003" /><testcase classname="tests.test_zernike.TestZernikeNoll" name="test_terms[backend=torch]" time="0.010" /><testcase classname="tests.test_zernike.TestZernikeNoll" name="test_poly[backend=numpy]" time="0.002" /><testcase classname="tests.test_zernike.TestZernikeNoll" name="test_poly[backend=torch]" time="0.008" /><testcase classname="tests.test_zernike.TestZernikeNoll" name="test_radial_term[backend=numpy]" time="0.001" /><testcase classname="tests.test_zernike.TestZernikeNoll" name="test_radial_term[backend=torch]" time="0.003" /><testcase classname="tests.test_zernike.TestZernikeNoll" name="test_azimuthal_term[backend=numpy]" time="0.003" /><testcase classname="tests.test_zernike.TestZernikeNoll" name="test_azimuthal_term[backend=torch]" time="0.003" /><testcase classname="tests.test_zernike.TestZernikeNoll" name="test_norm_constant[backend=numpy]" time="0.001" /><testcase classname="tests.test_zernike.TestZernikeNoll" name="test_norm_constant[backend=torch]" time="0.003" /><testcase classname="tests.test_zernike.TestZernikeNoll" name="test_generate_indices[backend=numpy]" time="0.006" /><testcase classname="tests.test_zernike.TestZernikeNoll" name="test_generate_indices[backend=torch]" time="0.003" /><testcase classname="tests.test_zernike.TestZernikeNoll" name="test_index_to_number[backend=numpy]" time="0.005" /><testcase classname="tests.test_zernike.TestZernikeNoll" name="test_index_to_number[backend=torch]" time="0.006" /><testcase classname="tests.test_zernike.TestZernikeFit" name="test_init[backend=numpy]" time="0.011" /><testcase classname="tests.test_zernike.TestZernikeFit" name="test_init[backend=torch]" time="0.091" /><testcase classname="tests.test_zernike.TestZernikeFit" name="test_init_standard[backend=numpy]" time="0.006" /><testcase classname="tests.test_zernike.TestZernikeFit" name="test_init_standard[backend=torch]" time="0.054" /><testcase classname="tests.test_zernike.TestZernikeFit" name="test_init_noll[backend=numpy]" time="0.004" /><testcase classname="tests.test_zernike.TestZernikeFit" name="test_init_noll[backend=torch]" time="0.048" /><testcase classname="tests.test_zernike.TestZernikeFit" name="test_invalid_zernike_type[backend=numpy]" time="0.003" /><testcase classname="tests.test_zernike.TestZernikeFit" name="test_invalid_zernike_type[backend=torch]" time="0.002" /><testcase classname="tests.test_zernike.TestZernikeFit" name="test_coeffs[backend=numpy]" time="0.008" /><testcase classname="tests.test_zernike.TestZernikeFit" name="test_coeffs[backend=torch]" time="0.053" /><testcase classname="tests.test_zernike.TestZernikeFit" name="test_coeffs_standard[backend=numpy]" time="0.007" /><testcase classname="tests.test_zernike.TestZernikeFit" name="test_coeffs_standard[backend=torch]" time="0.038" /><testcase classname="tests.test_zernike.TestZernikeFit" name="test_coeffs_noll[backend=numpy]" time="0.003" /><testcase classname="tests.test_zernike.TestZernikeFit" name="test_coeffs_noll[backend=torch]" time="0.021" /><testcase classname="tests.test_zernike.TestZernikeFit" name="test_invalid_view_projection[backend=numpy]" time="0.045" /><testcase classname="tests.test_zernike.TestZernikeFit" name="test_invalid_view_projection[backend=torch]" time="0.162" /><testcase classname="tests.test_zernike.TestZernikeFit" name="test_view_standard[backend=numpy]" time="0.073" /><testcase classname="tests.test_zernike.TestZernikeFit" name="test_view_standard[backend=torch]" time="0.157" /><testcase classname="tests.test_zernike.TestZernikeFit" name="test_view_standard_3d[backend=numpy]" time="0.288" /><testcase classname="tests.test_zernike.TestZernikeFit" name="test_view_standard_3d[backend=torch]" time="0.361" /><testcase classname="tests.test_zernike.TestZernikeFit" name="test_view_noll[backend=numpy]" time="0.052" /><testcase classname="tests.test_zernike.TestZernikeFit" name="test_view_noll[backend=torch]" time="0.144" /><testcase classname="tests.test_zernike.TestZernikeFit" name="test_view_noll_3d[backend=numpy]" time="0.271" /><testcase classname="tests.test_zernike.TestZernikeFit" name="test_view_noll_3d[backend=torch]" time="0.633" /><testcase classname="tests.test_zernike.TestZernikeFit" name="test_view_residual_standard[backend=numpy]" time="0.035" /><testcase classname="tests.test_zernike.TestZernikeFit" name="test_view_residual_standard[backend=torch]" time="0.085" /><testcase classname="tests.test_zernike.TestZernikeFit" name="test_view_residual_noll[backend=numpy]" time="0.031" /><testcase classname="tests.test_zernike.TestZernikeFit" name="test_view_residual_noll[backend=torch]" time="0.128" /><testcase classname="tests.test_zernike.TestZernikeFit" name="test_view[backend=numpy]" time="0.052" /><testcase classname="tests.test_zernike.TestZernikeFit" name="test_view[backend=torch]" time="0.136" /><testcase classname="tests.test_zernike.TestZernikeFit" name="test_view_3d[backend=numpy]" time="0.238" /><testcase classname="tests.test_zernike.TestZernikeFit" name="test_view_3d[backend=torch]" time="0.390" /><testcase classname="tests.test_zernike.TestZernikeFit" name="test_view_residual[backend=numpy]" time="0.040" /><testcase classname="tests.test_zernike.TestZernikeFit" name="test_view_residual[backend=torch]" time="0.117" /></testsuite></testsuites>